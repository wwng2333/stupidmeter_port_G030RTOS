Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    startup_stm32g030xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32g030xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32g030xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32g030xx.o(RESET) refers to startup_stm32g030xx.o(STACK) for __initial_sp
    startup_stm32g030xx.o(RESET) refers to startup_stm32g030xx.o(.text) for Reset_Handler
    startup_stm32g030xx.o(RESET) refers to lto-llvm-e814e0.o(.text.NMI_Handler) for NMI_Handler
    startup_stm32g030xx.o(RESET) refers to lto-llvm-e814e0.o(.text.HardFault_Handler) for HardFault_Handler
    startup_stm32g030xx.o(RESET) refers to irq_armv6m.o(.text) for SVC_Handler
    startup_stm32g030xx.o(RESET) refers to lto-llvm-e814e0.o(.text.USART2_IRQHandler) for USART2_IRQHandler
    startup_stm32g030xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32g030xx.o(.text) refers to lto-llvm-e814e0.o(.text.SystemInit) for SystemInit
    startup_stm32g030xx.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32g030xx.o(.text) refers to startup_stm32g030xx.o(HEAP) for Heap_Mem
    startup_stm32g030xx.o(.text) refers to startup_stm32g030xx.o(STACK) for Stack_Mem
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to lto-llvm-e814e0.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to lto-llvm-e814e0.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to lto-llvm-e814e0.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to lto-llvm-e814e0.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to lto-llvm-e814e0.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv6m.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.GetKernelSleepTime) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime) refers to rtx_kernel.o(.text.GetKernelSleepTime) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to lto-llvm-e814e0.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to lto-llvm-e814e0.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to lto-llvm-e814e0.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to lto-llvm-e814e0.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadDestroy) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for svcRtxEventFlagsNew
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew) refers to rtx_evflags.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for svcRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.osEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for svcRtxEventFlagsSet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet) refers to rtx_evflags.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for svcRtxEventFlagsClear
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear) refers to rtx_evflags.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for svcRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet) refers to rtx_evflags.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for svcRtxEventFlagsWait
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait) refers to rtx_evflags.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for svcRtxEventFlagsDelete
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for osRtxEventFlagsPostProcess
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck) refers to rtx_evflags.o(.text.EventFlagsCheck) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    irq_armv6m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv6m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv6m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv6m.o(.text) refers to lto-llvm-e814e0.o(.rodata) for osRtxUserSVC
    irq_armv6m.o(.ARM.exidx) refers to irq_armv6m.o(.text) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to lto-llvm-e814e0.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    os_systick.o(.text.OS_Tick_Setup) refers to lto-llvm-e814e0.o(.data) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to lto-llvm-e814e0.o(.data) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to lto-llvm-e814e0.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to lto-llvm-e814e0.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32g030xx.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    lto-llvm-e814e0.o(.text.ADC_Read_Voltage) refers to lto-llvm-e814e0.o(.text.LL_ADC_Enable) for LL_ADC_Enable
    lto-llvm-e814e0.o(.text.ADC_Read_Voltage) refers to lto-llvm-e814e0.o(.text.LL_ADC_IsActiveFlag_ADRDY) for LL_ADC_IsActiveFlag_ADRDY
    lto-llvm-e814e0.o(.text.ADC_Read_Voltage) refers to lto-llvm-e814e0.o(.text.LL_ADC_IsActiveFlag_EOC) for LL_ADC_IsActiveFlag_EOC
    lto-llvm-e814e0.o(.text.ADC_Read_Voltage) refers to lto-llvm-e814e0.o(.text.LL_ADC_ClearFlag_EOC) for LL_ADC_ClearFlag_EOC
    lto-llvm-e814e0.o(.text.ADC_Read_Voltage) refers to lto-llvm-e814e0.o(.text.LL_ADC_REG_StartConversion) for LL_ADC_REG_StartConversion
    lto-llvm-e814e0.o(.text.ADC_Read_Voltage) refers to lto-llvm-e814e0.o(.text.LL_ADC_REG_ReadConversionData12) for LL_ADC_REG_ReadConversionData12
    lto-llvm-e814e0.o(.text.ADC_Read_Voltage) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_printf) for SEGGER_RTT_printf
    lto-llvm-e814e0.o(.text.ADC_Read_Voltage) refers to lto-llvm-e814e0.o(.rodata.str1.1) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.ADC_Read_Voltage) refers to lto-llvm-e814e0.o(.text.ADC_Read_Voltage) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_Enable) refers to lto-llvm-e814e0.o(.text.LL_ADC_Enable) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_IsActiveFlag_ADRDY) refers to lto-llvm-e814e0.o(.text.LL_ADC_IsActiveFlag_ADRDY) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_IsActiveFlag_EOC) refers to lto-llvm-e814e0.o(.text.LL_ADC_IsActiveFlag_EOC) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_ClearFlag_EOC) refers to lto-llvm-e814e0.o(.text.LL_ADC_ClearFlag_EOC) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_REG_StartConversion) refers to lto-llvm-e814e0.o(.text.LL_ADC_REG_StartConversion) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_REG_ReadConversionData12) refers to lto-llvm-e814e0.o(.text.LL_ADC_REG_ReadConversionData12) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.ADC_Update) refers to lto-llvm-e814e0.o(.text.ADC_Read_Voltage) for ADC_Read_Voltage
    lto-llvm-e814e0.o(.text.ADC_Update) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    lto-llvm-e814e0.o(.text.ADC_Update) refers to fflti.o(.text) for __aeabi_ui2f
    lto-llvm-e814e0.o(.text.ADC_Update) refers to fdiv.o(.text) for __aeabi_fdiv
    lto-llvm-e814e0.o(.text.ADC_Update) refers to f2d.o(.text) for __aeabi_f2d
    lto-llvm-e814e0.o(.text.ADC_Update) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_printf) for SEGGER_RTT_printf
    lto-llvm-e814e0.o(.text.ADC_Update) refers to lto-llvm-e814e0.o(.bss) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.ADC_Update) refers to lto-llvm-e814e0.o(.rodata.str1.1) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.ADC_Update) refers to lto-llvm-e814e0.o(.text.ADC_Update) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.uart_transmit_thread) refers to rtx_evflags.o(.text.osEventFlagsClear) for osEventFlagsClear
    lto-llvm-e814e0.o(.text.uart_transmit_thread) refers to rtx_evflags.o(.text.osEventFlagsWait) for osEventFlagsWait
    lto-llvm-e814e0.o(.text.uart_transmit_thread) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    lto-llvm-e814e0.o(.text.uart_transmit_thread) refers to rt_memclr.o(.text) for __aeabi_memclr
    lto-llvm-e814e0.o(.text.uart_transmit_thread) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_printf) for SEGGER_RTT_printf
    lto-llvm-e814e0.o(.text.uart_transmit_thread) refers to lto-llvm-e814e0.o(.text.PackAllData) for PackAllData
    lto-llvm-e814e0.o(.text.uart_transmit_thread) refers to lto-llvm-e814e0.o(.text.UART2_Transmit8) for UART2_Transmit8
    lto-llvm-e814e0.o(.text.uart_transmit_thread) refers to lto-llvm-e814e0.o(.bss) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.uart_transmit_thread) refers to lto-llvm-e814e0.o(.rodata.str1.1) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.uart_transmit_thread) refers to lto-llvm-e814e0.o(.data) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.uart_transmit_thread) refers to lto-llvm-e814e0.o(.text.uart_transmit_thread) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.PackAllData) refers to lto-llvm-e814e0.o(.text.PackQueue) for PackQueue
    lto-llvm-e814e0.o(.text.PackAllData) refers to lto-llvm-e814e0.o(.text.crc16) for crc16
    lto-llvm-e814e0.o(.text.PackAllData) refers to lto-llvm-e814e0.o(.data) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.PackAllData) refers to lto-llvm-e814e0.o(.bss) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.PackAllData) refers to lto-llvm-e814e0.o(.text.PackAllData) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.PackQueue) refers to lto-llvm-e814e0.o(.text.PackQueue) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.crc16) refers to lto-llvm-e814e0.o(.data) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.crc16) refers to lto-llvm-e814e0.o(.rodata) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.crc16) refers to lto-llvm-e814e0.o(.text.crc16) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.i2c_timer_cb) refers to rtx_kernel.o(.text.osKernelLock) for osKernelLock
    lto-llvm-e814e0.o(.text.i2c_timer_cb) refers to lto-llvm-e814e0.o(.text.INA226_Update) for INA226_Update
    lto-llvm-e814e0.o(.text.i2c_timer_cb) refers to lto-llvm-e814e0.o(.text.TMP1075_ReadTemp) for TMP1075_ReadTemp
    lto-llvm-e814e0.o(.text.i2c_timer_cb) refers to rtx_kernel.o(.text.osKernelUnlock) for osKernelUnlock
    lto-llvm-e814e0.o(.text.i2c_timer_cb) refers to rtx_kernel.o(.text.osKernelGetTickCount) for osKernelGetTickCount
    lto-llvm-e814e0.o(.text.i2c_timer_cb) refers to fflti.o(.text) for __aeabi_ui2f
    lto-llvm-e814e0.o(.text.i2c_timer_cb) refers to fdiv.o(.text) for __aeabi_fdiv
    lto-llvm-e814e0.o(.text.i2c_timer_cb) refers to rtx_delay.o(.text.osDelay) for osDelay
    lto-llvm-e814e0.o(.text.i2c_timer_cb) refers to lto-llvm-e814e0.o(.text.ADC_Update) for ADC_Update
    lto-llvm-e814e0.o(.text.i2c_timer_cb) refers to lto-llvm-e814e0.o(.text.enqueue) for enqueue
    lto-llvm-e814e0.o(.text.i2c_timer_cb) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    lto-llvm-e814e0.o(.text.i2c_timer_cb) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    lto-llvm-e814e0.o(.text.i2c_timer_cb) refers to lto-llvm-e814e0.o(.bss) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.i2c_timer_cb) refers to lto-llvm-e814e0.o(.text.i2c_timer_cb) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.app_main) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    lto-llvm-e814e0.o(.text.app_main) refers to rtx_evflags.o(.text.osEventFlagsNew) for osEventFlagsNew
    lto-llvm-e814e0.o(.text.app_main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    lto-llvm-e814e0.o(.text.app_main) refers to rtx_kernel.o(.text.osKernelLock) for osKernelLock
    lto-llvm-e814e0.o(.text.app_main) refers to lto-llvm-e814e0.o(.text.TMP1075_Init) for TMP1075_Init
    lto-llvm-e814e0.o(.text.app_main) refers to lto-llvm-e814e0.o(.text.INA226_Init) for INA226_Init
    lto-llvm-e814e0.o(.text.app_main) refers to rtx_kernel.o(.text.osKernelUnlock) for osKernelUnlock
    lto-llvm-e814e0.o(.text.app_main) refers to rtx_timer.o(.text.osTimerNew) for osTimerNew
    lto-llvm-e814e0.o(.text.app_main) refers to rtx_timer.o(.text.osTimerStart) for osTimerStart
    lto-llvm-e814e0.o(.text.app_main) refers to rtx_kernel.o(.text.osKernelGetTickCount) for osKernelGetTickCount
    lto-llvm-e814e0.o(.text.app_main) refers to lto-llvm-e814e0.o(.data) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.app_main) refers to lto-llvm-e814e0.o(.bss) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.app_main) refers to lto-llvm-e814e0.o(.rodata) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.app_main) refers to lto-llvm-e814e0.o(.text.uart_transmit_thread) for uart_transmit_thread
    lto-llvm-e814e0.o(.text.app_main) refers to lto-llvm-e814e0.o(.text.i2c_timer_cb) for i2c_timer_cb
    lto-llvm-e814e0.o(.ARM.exidx.text.app_main) refers to lto-llvm-e814e0.o(.text.app_main) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.main) refers to lto-llvm-e814e0.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    lto-llvm-e814e0.o(.text.main) refers to lto-llvm-e814e0.o(.text.LL_APB1_GRP1_EnableClock) for LL_APB1_GRP1_EnableClock
    lto-llvm-e814e0.o(.text.main) refers to lto-llvm-e814e0.o(.text.SystemClock_Config) for SystemClock_Config
    lto-llvm-e814e0.o(.text.main) refers to lto-llvm-e814e0.o(.text.MX_GPIO_Init) for MX_GPIO_Init
    lto-llvm-e814e0.o(.text.main) refers to lto-llvm-e814e0.o(.text.MX_ADC1_Init) for MX_ADC1_Init
    lto-llvm-e814e0.o(.text.main) refers to lto-llvm-e814e0.o(.text.MX_RTC_Init) for MX_RTC_Init
    lto-llvm-e814e0.o(.text.main) refers to lto-llvm-e814e0.o(.text.MX_USART2_UART_Init) for MX_USART2_UART_Init
    lto-llvm-e814e0.o(.text.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    lto-llvm-e814e0.o(.text.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    lto-llvm-e814e0.o(.text.main) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    lto-llvm-e814e0.o(.text.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    lto-llvm-e814e0.o(.text.main) refers to lto-llvm-e814e0.o(.text.app_main) for app_main
    lto-llvm-e814e0.o(.text.main) refers to lto-llvm-e814e0.o(.rodata) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.main) refers to lto-llvm-e814e0.o(.bss) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.main) refers to lto-llvm-e814e0.o(.text.main) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock) refers to lto-llvm-e814e0.o(.text.LL_APB2_GRP1_EnableClock) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock) refers to lto-llvm-e814e0.o(.text.LL_APB1_GRP1_EnableClock) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.SystemClock_Config) refers to lto-llvm-e814e0.o(.text.LL_RCC_HSI_Enable) for LL_RCC_HSI_Enable
    lto-llvm-e814e0.o(.text.SystemClock_Config) refers to lto-llvm-e814e0.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    lto-llvm-e814e0.o(.text.SystemClock_Config) refers to lto-llvm-e814e0.o(.text.LL_RCC_LSI_Enable) for LL_RCC_LSI_Enable
    lto-llvm-e814e0.o(.text.SystemClock_Config) refers to lto-llvm-e814e0.o(.text.LL_RCC_LSI_IsReady) for LL_RCC_LSI_IsReady
    lto-llvm-e814e0.o(.text.SystemClock_Config) refers to lto-llvm-e814e0.o(.text.LL_PWR_EnableBkUpAccess) for LL_PWR_EnableBkUpAccess
    lto-llvm-e814e0.o(.text.SystemClock_Config) refers to lto-llvm-e814e0.o(.text.LL_RCC_SetAHBPrescaler) for LL_RCC_SetAHBPrescaler
    lto-llvm-e814e0.o(.text.SystemClock_Config) refers to lto-llvm-e814e0.o(.text.LL_RCC_SetSysClkSource) for LL_RCC_SetSysClkSource
    lto-llvm-e814e0.o(.text.SystemClock_Config) refers to lto-llvm-e814e0.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    lto-llvm-e814e0.o(.text.SystemClock_Config) refers to lto-llvm-e814e0.o(.text.LL_RCC_SetAPB1Prescaler) for LL_RCC_SetAPB1Prescaler
    lto-llvm-e814e0.o(.text.SystemClock_Config) refers to lto-llvm-e814e0.o(.text.LL_Init1msTick) for LL_Init1msTick
    lto-llvm-e814e0.o(.text.SystemClock_Config) refers to lto-llvm-e814e0.o(.text.LL_SetSystemCoreClock) for LL_SetSystemCoreClock
    lto-llvm-e814e0.o(.ARM.exidx.text.SystemClock_Config) refers to lto-llvm-e814e0.o(.text.SystemClock_Config) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.MX_GPIO_Init) refers to lto-llvm-e814e0.o(.text.LL_IOP_GRP1_EnableClock) for LL_IOP_GRP1_EnableClock
    lto-llvm-e814e0.o(.text.MX_GPIO_Init) refers to lto-llvm-e814e0.o(.text.LL_GPIO_ResetOutputPin) for LL_GPIO_ResetOutputPin
    lto-llvm-e814e0.o(.text.MX_GPIO_Init) refers to lto-llvm-e814e0.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    lto-llvm-e814e0.o(.ARM.exidx.text.MX_GPIO_Init) refers to lto-llvm-e814e0.o(.text.MX_GPIO_Init) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.MX_ADC1_Init) refers to lto-llvm-e814e0.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    lto-llvm-e814e0.o(.text.MX_ADC1_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_Init) for LL_ADC_Init
    lto-llvm-e814e0.o(.text.MX_ADC1_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_REG_SetSequencerConfigurable) for LL_ADC_REG_SetSequencerConfigurable
    lto-llvm-e814e0.o(.text.MX_ADC1_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_IsActiveFlag_CCRDY) for LL_ADC_IsActiveFlag_CCRDY
    lto-llvm-e814e0.o(.text.MX_ADC1_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_ClearFlag_CCRDY) for LL_ADC_ClearFlag_CCRDY
    lto-llvm-e814e0.o(.text.MX_ADC1_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_REG_Init) for LL_ADC_REG_Init
    lto-llvm-e814e0.o(.text.MX_ADC1_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_SetOverSamplingScope) for LL_ADC_SetOverSamplingScope
    lto-llvm-e814e0.o(.text.MX_ADC1_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_SetTriggerFrequencyMode) for LL_ADC_SetTriggerFrequencyMode
    lto-llvm-e814e0.o(.text.MX_ADC1_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_SetCommonPathInternalCh) for LL_ADC_SetCommonPathInternalCh
    lto-llvm-e814e0.o(.text.MX_ADC1_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_SetSamplingTimeCommonChannels) for LL_ADC_SetSamplingTimeCommonChannels
    lto-llvm-e814e0.o(.text.MX_ADC1_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_DisableIT_EOC) for LL_ADC_DisableIT_EOC
    lto-llvm-e814e0.o(.text.MX_ADC1_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_DisableIT_EOS) for LL_ADC_DisableIT_EOS
    lto-llvm-e814e0.o(.text.MX_ADC1_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_EnableInternalRegulator) for LL_ADC_EnableInternalRegulator
    lto-llvm-e814e0.o(.text.MX_ADC1_Init) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    lto-llvm-e814e0.o(.text.MX_ADC1_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_REG_SetSequencerRanks) for LL_ADC_REG_SetSequencerRanks
    lto-llvm-e814e0.o(.text.MX_ADC1_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_SetChannelSamplingTime) for LL_ADC_SetChannelSamplingTime
    lto-llvm-e814e0.o(.text.MX_ADC1_Init) refers to lto-llvm-e814e0.o(.text.LL_mDelay) for LL_mDelay
    lto-llvm-e814e0.o(.text.MX_ADC1_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_StartCalibration) for LL_ADC_StartCalibration
    lto-llvm-e814e0.o(.text.MX_ADC1_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_IsCalibrationOnGoing) for LL_ADC_IsCalibrationOnGoing
    lto-llvm-e814e0.o(.text.MX_ADC1_Init) refers to lto-llvm-e814e0.o(.data) for SystemCoreClock
    lto-llvm-e814e0.o(.ARM.exidx.text.MX_ADC1_Init) refers to lto-llvm-e814e0.o(.text.MX_ADC1_Init) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.MX_RTC_Init) refers to lto-llvm-e814e0.o(.text.LL_RCC_GetRTCClockSource) for LL_RCC_GetRTCClockSource
    lto-llvm-e814e0.o(.text.MX_RTC_Init) refers to lto-llvm-e814e0.o(.text.LL_RCC_ForceBackupDomainReset) for LL_RCC_ForceBackupDomainReset
    lto-llvm-e814e0.o(.text.MX_RTC_Init) refers to lto-llvm-e814e0.o(.text.LL_RCC_ReleaseBackupDomainReset) for LL_RCC_ReleaseBackupDomainReset
    lto-llvm-e814e0.o(.text.MX_RTC_Init) refers to lto-llvm-e814e0.o(.text.LL_RCC_SetRTCClockSource) for LL_RCC_SetRTCClockSource
    lto-llvm-e814e0.o(.text.MX_RTC_Init) refers to lto-llvm-e814e0.o(.text.LL_RCC_EnableRTC) for LL_RCC_EnableRTC
    lto-llvm-e814e0.o(.text.MX_RTC_Init) refers to lto-llvm-e814e0.o(.text.LL_APB1_GRP1_EnableClock) for LL_APB1_GRP1_EnableClock
    lto-llvm-e814e0.o(.text.MX_RTC_Init) refers to lto-llvm-e814e0.o(.text.LL_RTC_Init) for LL_RTC_Init
    lto-llvm-e814e0.o(.ARM.exidx.text.MX_RTC_Init) refers to lto-llvm-e814e0.o(.text.MX_RTC_Init) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.MX_USART2_UART_Init) refers to lto-llvm-e814e0.o(.text.LL_APB1_GRP1_EnableClock) for LL_APB1_GRP1_EnableClock
    lto-llvm-e814e0.o(.text.MX_USART2_UART_Init) refers to lto-llvm-e814e0.o(.text.LL_IOP_GRP1_EnableClock) for LL_IOP_GRP1_EnableClock
    lto-llvm-e814e0.o(.text.MX_USART2_UART_Init) refers to lto-llvm-e814e0.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    lto-llvm-e814e0.o(.text.MX_USART2_UART_Init) refers to lto-llvm-e814e0.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    lto-llvm-e814e0.o(.text.MX_USART2_UART_Init) refers to lto-llvm-e814e0.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    lto-llvm-e814e0.o(.text.MX_USART2_UART_Init) refers to lto-llvm-e814e0.o(.text.LL_USART_Init) for LL_USART_Init
    lto-llvm-e814e0.o(.text.MX_USART2_UART_Init) refers to lto-llvm-e814e0.o(.text.LL_USART_SetTXRXSwap) for LL_USART_SetTXRXSwap
    lto-llvm-e814e0.o(.text.MX_USART2_UART_Init) refers to lto-llvm-e814e0.o(.text.LL_USART_ConfigAsyncMode) for LL_USART_ConfigAsyncMode
    lto-llvm-e814e0.o(.text.MX_USART2_UART_Init) refers to lto-llvm-e814e0.o(.text.LL_USART_EnableIT_RXNE_RXFNE) for LL_USART_EnableIT_RXNE_RXFNE
    lto-llvm-e814e0.o(.text.MX_USART2_UART_Init) refers to lto-llvm-e814e0.o(.text.LL_USART_Enable) for LL_USART_Enable
    lto-llvm-e814e0.o(.text.MX_USART2_UART_Init) refers to lto-llvm-e814e0.o(.text.LL_USART_IsActiveFlag_TEACK) for LL_USART_IsActiveFlag_TEACK
    lto-llvm-e814e0.o(.text.MX_USART2_UART_Init) refers to lto-llvm-e814e0.o(.text.LL_USART_IsActiveFlag_REACK) for LL_USART_IsActiveFlag_REACK
    lto-llvm-e814e0.o(.ARM.exidx.text.MX_USART2_UART_Init) refers to lto-llvm-e814e0.o(.text.MX_USART2_UART_Init) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_IOP_GRP1_EnableClock) refers to lto-llvm-e814e0.o(.text.LL_IOP_GRP1_EnableClock) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.__NVIC_SetPriority) refers to lto-llvm-e814e0.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to lto-llvm-e814e0.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_SetTXRXSwap) refers to lto-llvm-e814e0.o(.text.LL_USART_SetTXRXSwap) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_ConfigAsyncMode) refers to lto-llvm-e814e0.o(.text.LL_USART_ConfigAsyncMode) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_EnableIT_RXNE_RXFNE) refers to lto-llvm-e814e0.o(.text.LL_USART_EnableIT_RXNE_RXFNE) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_Enable) refers to lto-llvm-e814e0.o(.text.LL_USART_Enable) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_IsActiveFlag_TEACK) refers to lto-llvm-e814e0.o(.text.LL_USART_IsActiveFlag_TEACK) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_IsActiveFlag_REACK) refers to lto-llvm-e814e0.o(.text.LL_USART_IsActiveFlag_REACK) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_GetRTCClockSource) refers to lto-llvm-e814e0.o(.text.LL_RCC_GetRTCClockSource) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_ForceBackupDomainReset) refers to lto-llvm-e814e0.o(.text.LL_RCC_ForceBackupDomainReset) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_ReleaseBackupDomainReset) refers to lto-llvm-e814e0.o(.text.LL_RCC_ReleaseBackupDomainReset) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_SetRTCClockSource) refers to lto-llvm-e814e0.o(.text.LL_RCC_SetRTCClockSource) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_EnableRTC) refers to lto-llvm-e814e0.o(.text.LL_RCC_EnableRTC) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_REG_SetSequencerConfigurable) refers to lto-llvm-e814e0.o(.text.LL_ADC_REG_SetSequencerConfigurable) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_IsActiveFlag_CCRDY) refers to lto-llvm-e814e0.o(.text.LL_ADC_IsActiveFlag_CCRDY) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_ClearFlag_CCRDY) refers to lto-llvm-e814e0.o(.text.LL_ADC_ClearFlag_CCRDY) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_SetOverSamplingScope) refers to lto-llvm-e814e0.o(.text.LL_ADC_SetOverSamplingScope) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_SetTriggerFrequencyMode) refers to lto-llvm-e814e0.o(.text.LL_ADC_SetTriggerFrequencyMode) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_SetCommonPathInternalCh) refers to lto-llvm-e814e0.o(.text.LL_ADC_SetCommonPathInternalCh) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_SetSamplingTimeCommonChannels) refers to lto-llvm-e814e0.o(.text.LL_ADC_SetSamplingTimeCommonChannels) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_DisableIT_EOC) refers to lto-llvm-e814e0.o(.text.LL_ADC_DisableIT_EOC) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_DisableIT_EOS) refers to lto-llvm-e814e0.o(.text.LL_ADC_DisableIT_EOS) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_EnableInternalRegulator) refers to lto-llvm-e814e0.o(.text.LL_ADC_EnableInternalRegulator) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_REG_SetSequencerRanks) refers to lto-llvm-e814e0.o(.text.LL_ADC_REG_SetSequencerRanks) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_SetChannelSamplingTime) refers to lto-llvm-e814e0.o(.text.LL_ADC_SetChannelSamplingTime) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_StartCalibration) refers to lto-llvm-e814e0.o(.text.LL_ADC_StartCalibration) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_IsCalibrationOnGoing) refers to lto-llvm-e814e0.o(.text.LL_ADC_IsCalibrationOnGoing) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_ResetOutputPin) refers to lto-llvm-e814e0.o(.text.LL_GPIO_ResetOutputPin) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_HSI_Enable) refers to lto-llvm-e814e0.o(.text.LL_RCC_HSI_Enable) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_HSI_IsReady) refers to lto-llvm-e814e0.o(.text.LL_RCC_HSI_IsReady) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_LSI_Enable) refers to lto-llvm-e814e0.o(.text.LL_RCC_LSI_Enable) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_LSI_IsReady) refers to lto-llvm-e814e0.o(.text.LL_RCC_LSI_IsReady) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_PWR_EnableBkUpAccess) refers to lto-llvm-e814e0.o(.text.LL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler) refers to lto-llvm-e814e0.o(.text.LL_RCC_SetAHBPrescaler) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_SetSysClkSource) refers to lto-llvm-e814e0.o(.text.LL_RCC_SetSysClkSource) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_GetSysClkSource) refers to lto-llvm-e814e0.o(.text.LL_RCC_GetSysClkSource) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler) refers to lto-llvm-e814e0.o(.text.LL_RCC_SetAPB1Prescaler) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.NMI_Handler) refers to lto-llvm-e814e0.o(.text.NMI_Handler) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.HardFault_Handler) refers to lto-llvm-e814e0.o(.text.HardFault_Handler) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.I2C_Delay) refers to lto-llvm-e814e0.o(.text.I2C_Delay) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.TMP1075_ReadTemp) refers to lto-llvm-e814e0.o(.text.TMP1075_Read_2Byte) for TMP1075_Read_2Byte
    lto-llvm-e814e0.o(.text.TMP1075_ReadTemp) refers to fflti.o(.text) for __aeabi_i2f
    lto-llvm-e814e0.o(.text.TMP1075_ReadTemp) refers to fdiv.o(.text) for __aeabi_fdiv
    lto-llvm-e814e0.o(.text.TMP1075_ReadTemp) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_SetTerminal) for SEGGER_RTT_SetTerminal
    lto-llvm-e814e0.o(.text.TMP1075_ReadTemp) refers to f2d.o(.text) for __aeabi_f2d
    lto-llvm-e814e0.o(.text.TMP1075_ReadTemp) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_printf) for SEGGER_RTT_printf
    lto-llvm-e814e0.o(.text.TMP1075_ReadTemp) refers to lto-llvm-e814e0.o(.rodata.str1.1) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.TMP1075_ReadTemp) refers to lto-llvm-e814e0.o(.text.TMP1075_ReadTemp) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.TMP1075_Read_2Byte) refers to lto-llvm-e814e0.o(.text.I2C_Start) for I2C_Start
    lto-llvm-e814e0.o(.text.TMP1075_Read_2Byte) refers to lto-llvm-e814e0.o(.text.I2C_SendData) for I2C_SendData
    lto-llvm-e814e0.o(.text.TMP1075_Read_2Byte) refers to lto-llvm-e814e0.o(.text.I2C_RecvACK) for I2C_RecvACK
    lto-llvm-e814e0.o(.text.TMP1075_Read_2Byte) refers to lto-llvm-e814e0.o(.text.I2C_RecvData) for I2C_RecvData
    lto-llvm-e814e0.o(.text.TMP1075_Read_2Byte) refers to lto-llvm-e814e0.o(.text.I2C_SendACK) for I2C_SendACK
    lto-llvm-e814e0.o(.text.TMP1075_Read_2Byte) refers to lto-llvm-e814e0.o(.text.I2C_SendNAK) for I2C_SendNAK
    lto-llvm-e814e0.o(.text.TMP1075_Read_2Byte) refers to lto-llvm-e814e0.o(.text.I2C_Stop) for I2C_Stop
    lto-llvm-e814e0.o(.ARM.exidx.text.TMP1075_Read_2Byte) refers to lto-llvm-e814e0.o(.text.TMP1075_Read_2Byte) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.I2C_Start) refers to lto-llvm-e814e0.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    lto-llvm-e814e0.o(.text.I2C_Start) refers to lto-llvm-e814e0.o(.text.I2C_Delay) for I2C_Delay
    lto-llvm-e814e0.o(.text.I2C_Start) refers to lto-llvm-e814e0.o(.text.LL_GPIO_ResetOutputPin.10) for LL_GPIO_ResetOutputPin.10
    lto-llvm-e814e0.o(.ARM.exidx.text.I2C_Start) refers to lto-llvm-e814e0.o(.text.I2C_Start) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.I2C_SendData) refers to lto-llvm-e814e0.o(.text.LL_GPIO_ResetOutputPin.10) for LL_GPIO_ResetOutputPin.10
    lto-llvm-e814e0.o(.text.I2C_SendData) refers to lto-llvm-e814e0.o(.text.I2C_Delay) for I2C_Delay
    lto-llvm-e814e0.o(.text.I2C_SendData) refers to lto-llvm-e814e0.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    lto-llvm-e814e0.o(.ARM.exidx.text.I2C_SendData) refers to lto-llvm-e814e0.o(.text.I2C_SendData) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.I2C_RecvACK) refers to lto-llvm-e814e0.o(.text.LL_GPIO_ResetOutputPin.10) for LL_GPIO_ResetOutputPin.10
    lto-llvm-e814e0.o(.text.I2C_RecvACK) refers to lto-llvm-e814e0.o(.text.I2C_Delay) for I2C_Delay
    lto-llvm-e814e0.o(.text.I2C_RecvACK) refers to lto-llvm-e814e0.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    lto-llvm-e814e0.o(.ARM.exidx.text.I2C_RecvACK) refers to lto-llvm-e814e0.o(.text.I2C_RecvACK) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.I2C_RecvData) refers to lto-llvm-e814e0.o(.text.LL_GPIO_ResetOutputPin.10) for LL_GPIO_ResetOutputPin.10
    lto-llvm-e814e0.o(.text.I2C_RecvData) refers to lto-llvm-e814e0.o(.text.I2C_Delay) for I2C_Delay
    lto-llvm-e814e0.o(.text.I2C_RecvData) refers to lto-llvm-e814e0.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    lto-llvm-e814e0.o(.text.I2C_RecvData) refers to lto-llvm-e814e0.o(.text.LL_GPIO_IsInputPinSet) for LL_GPIO_IsInputPinSet
    lto-llvm-e814e0.o(.ARM.exidx.text.I2C_RecvData) refers to lto-llvm-e814e0.o(.text.I2C_RecvData) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.I2C_SendACK) refers to lto-llvm-e814e0.o(.text.LL_GPIO_ResetOutputPin.10) for LL_GPIO_ResetOutputPin.10
    lto-llvm-e814e0.o(.text.I2C_SendACK) refers to lto-llvm-e814e0.o(.text.I2C_Delay) for I2C_Delay
    lto-llvm-e814e0.o(.text.I2C_SendACK) refers to lto-llvm-e814e0.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    lto-llvm-e814e0.o(.ARM.exidx.text.I2C_SendACK) refers to lto-llvm-e814e0.o(.text.I2C_SendACK) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.I2C_SendNAK) refers to lto-llvm-e814e0.o(.text.LL_GPIO_ResetOutputPin.10) for LL_GPIO_ResetOutputPin.10
    lto-llvm-e814e0.o(.text.I2C_SendNAK) refers to lto-llvm-e814e0.o(.text.I2C_Delay) for I2C_Delay
    lto-llvm-e814e0.o(.text.I2C_SendNAK) refers to lto-llvm-e814e0.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    lto-llvm-e814e0.o(.ARM.exidx.text.I2C_SendNAK) refers to lto-llvm-e814e0.o(.text.I2C_SendNAK) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.I2C_Stop) refers to lto-llvm-e814e0.o(.text.LL_GPIO_ResetOutputPin.10) for LL_GPIO_ResetOutputPin.10
    lto-llvm-e814e0.o(.text.I2C_Stop) refers to lto-llvm-e814e0.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    lto-llvm-e814e0.o(.text.I2C_Stop) refers to lto-llvm-e814e0.o(.text.I2C_Delay) for I2C_Delay
    lto-llvm-e814e0.o(.ARM.exidx.text.I2C_Stop) refers to lto-llvm-e814e0.o(.text.I2C_Stop) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_ResetOutputPin.10) refers to lto-llvm-e814e0.o(.text.LL_GPIO_ResetOutputPin.10) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_SetOutputPin) refers to lto-llvm-e814e0.o(.text.LL_GPIO_SetOutputPin) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_IsInputPinSet) refers to lto-llvm-e814e0.o(.text.LL_GPIO_IsInputPinSet) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.TMP1075_Init) refers to lto-llvm-e814e0.o(.text.TMP1075_Read_2Byte) for TMP1075_Read_2Byte
    lto-llvm-e814e0.o(.text.TMP1075_Init) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_SetTerminal) for SEGGER_RTT_SetTerminal
    lto-llvm-e814e0.o(.text.TMP1075_Init) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_printf) for SEGGER_RTT_printf
    lto-llvm-e814e0.o(.text.TMP1075_Init) refers to lto-llvm-e814e0.o(.rodata.str1.1) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.TMP1075_Init) refers to lto-llvm-e814e0.o(.text.TMP1075_Init) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.INA226_Init) refers to lto-llvm-e814e0.o(.text.INA226_Read_2Byte) for INA226_Read_2Byte
    lto-llvm-e814e0.o(.text.INA226_Init) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_SetTerminal) for SEGGER_RTT_SetTerminal
    lto-llvm-e814e0.o(.text.INA226_Init) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_printf) for SEGGER_RTT_printf
    lto-llvm-e814e0.o(.text.INA226_Init) refers to lto-llvm-e814e0.o(.text.INA226_Write_2Byte) for INA226_Write_2Byte
    lto-llvm-e814e0.o(.text.INA226_Init) refers to lto-llvm-e814e0.o(.rodata.str1.1) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.INA226_Init) refers to lto-llvm-e814e0.o(.text.INA226_Init) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.INA226_Read_2Byte) refers to lto-llvm-e814e0.o(.text.I2C_Start) for I2C_Start
    lto-llvm-e814e0.o(.text.INA226_Read_2Byte) refers to lto-llvm-e814e0.o(.text.I2C_SendData) for I2C_SendData
    lto-llvm-e814e0.o(.text.INA226_Read_2Byte) refers to lto-llvm-e814e0.o(.text.I2C_RecvACK) for I2C_RecvACK
    lto-llvm-e814e0.o(.text.INA226_Read_2Byte) refers to lto-llvm-e814e0.o(.text.I2C_RecvData) for I2C_RecvData
    lto-llvm-e814e0.o(.text.INA226_Read_2Byte) refers to lto-llvm-e814e0.o(.text.I2C_SendACK) for I2C_SendACK
    lto-llvm-e814e0.o(.text.INA226_Read_2Byte) refers to lto-llvm-e814e0.o(.text.I2C_SendNAK) for I2C_SendNAK
    lto-llvm-e814e0.o(.text.INA226_Read_2Byte) refers to lto-llvm-e814e0.o(.text.I2C_Stop) for I2C_Stop
    lto-llvm-e814e0.o(.ARM.exidx.text.INA226_Read_2Byte) refers to lto-llvm-e814e0.o(.text.INA226_Read_2Byte) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.INA226_Write_2Byte) refers to lto-llvm-e814e0.o(.text.I2C_Start) for I2C_Start
    lto-llvm-e814e0.o(.text.INA226_Write_2Byte) refers to lto-llvm-e814e0.o(.text.I2C_SendData) for I2C_SendData
    lto-llvm-e814e0.o(.text.INA226_Write_2Byte) refers to lto-llvm-e814e0.o(.text.I2C_RecvACK) for I2C_RecvACK
    lto-llvm-e814e0.o(.text.INA226_Write_2Byte) refers to lto-llvm-e814e0.o(.text.I2C_Stop) for I2C_Stop
    lto-llvm-e814e0.o(.ARM.exidx.text.INA226_Write_2Byte) refers to lto-llvm-e814e0.o(.text.INA226_Write_2Byte) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.INA226_Update) refers to lto-llvm-e814e0.o(.text.INA226_Read_Voltage) for INA226_Read_Voltage
    lto-llvm-e814e0.o(.text.INA226_Update) refers to rtx_delay.o(.text.osDelay) for osDelay
    lto-llvm-e814e0.o(.text.INA226_Update) refers to lto-llvm-e814e0.o(.text.INA226_Read_Current) for INA226_Read_Current
    lto-llvm-e814e0.o(.text.INA226_Update) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    lto-llvm-e814e0.o(.text.INA226_Update) refers to lto-llvm-e814e0.o(.bss) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.INA226_Update) refers to lto-llvm-e814e0.o(.text.INA226_Update) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.INA226_Read_Voltage) refers to lto-llvm-e814e0.o(.text.INA226_Read_2Byte) for INA226_Read_2Byte
    lto-llvm-e814e0.o(.text.INA226_Read_Voltage) refers to fflti.o(.text) for __aeabi_ui2f
    lto-llvm-e814e0.o(.text.INA226_Read_Voltage) refers to f2d.o(.text) for __aeabi_f2d
    lto-llvm-e814e0.o(.text.INA226_Read_Voltage) refers to dmul.o(.text) for __aeabi_dmul
    lto-llvm-e814e0.o(.text.INA226_Read_Voltage) refers to ddiv.o(.text) for __aeabi_ddiv
    lto-llvm-e814e0.o(.text.INA226_Read_Voltage) refers to d2f.o(.text) for __aeabi_d2f
    lto-llvm-e814e0.o(.text.INA226_Read_Voltage) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_SetTerminal) for SEGGER_RTT_SetTerminal
    lto-llvm-e814e0.o(.text.INA226_Read_Voltage) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_printf) for SEGGER_RTT_printf
    lto-llvm-e814e0.o(.text.INA226_Read_Voltage) refers to lto-llvm-e814e0.o(.bss) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.INA226_Read_Voltage) refers to lto-llvm-e814e0.o(.rodata.str1.1) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.INA226_Read_Voltage) refers to lto-llvm-e814e0.o(.text.INA226_Read_Voltage) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.INA226_Read_Current) refers to lto-llvm-e814e0.o(.text.INA226_Read_2Byte) for INA226_Read_2Byte
    lto-llvm-e814e0.o(.text.INA226_Read_Current) refers to fflti.o(.text) for __aeabi_ui2f
    lto-llvm-e814e0.o(.text.INA226_Read_Current) refers to f2d.o(.text) for __aeabi_f2d
    lto-llvm-e814e0.o(.text.INA226_Read_Current) refers to dmul.o(.text) for __aeabi_dmul
    lto-llvm-e814e0.o(.text.INA226_Read_Current) refers to d2f.o(.text) for __aeabi_d2f
    lto-llvm-e814e0.o(.text.INA226_Read_Current) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_SetTerminal) for SEGGER_RTT_SetTerminal
    lto-llvm-e814e0.o(.text.INA226_Read_Current) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_printf) for SEGGER_RTT_printf
    lto-llvm-e814e0.o(.text.INA226_Read_Current) refers to lto-llvm-e814e0.o(.bss) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.INA226_Read_Current) refers to lto-llvm-e814e0.o(.rodata.str1.1) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.INA226_Read_Current) refers to lto-llvm-e814e0.o(.text.INA226_Read_Current) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text._DoInit) refers to rt_memclr.o(.text) for __aeabi_memclr4
    lto-llvm-e814e0.o(.text._DoInit) refers to lto-llvm-e814e0.o(.bss) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text._DoInit) refers to lto-llvm-e814e0.o(.rodata.str1.1) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text._DoInit) refers to lto-llvm-e814e0.o(.rodata) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text._DoInit) refers to lto-llvm-e814e0.o(.text._DoInit) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text._GetAvailWriteSpace) refers to lto-llvm-e814e0.o(.text._GetAvailWriteSpace) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text._WriteNoCheck) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    lto-llvm-e814e0.o(.ARM.exidx.text._WriteNoCheck) refers to lto-llvm-e814e0.o(.text._WriteNoCheck) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text._WriteBlocking) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    lto-llvm-e814e0.o(.ARM.exidx.text._WriteBlocking) refers to lto-llvm-e814e0.o(.text._WriteBlocking) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.SEGGER_RTT_WriteNoLock) refers to lto-llvm-e814e0.o(.text._GetAvailWriteSpace) for _GetAvailWriteSpace
    lto-llvm-e814e0.o(.text.SEGGER_RTT_WriteNoLock) refers to lto-llvm-e814e0.o(.text._WriteNoCheck) for _WriteNoCheck
    lto-llvm-e814e0.o(.text.SEGGER_RTT_WriteNoLock) refers to lto-llvm-e814e0.o(.text._WriteBlocking) for _WriteBlocking
    lto-llvm-e814e0.o(.text.SEGGER_RTT_WriteNoLock) refers to lto-llvm-e814e0.o(.bss) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.SEGGER_RTT_WriteNoLock) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_WriteNoLock) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.SEGGER_RTT_Write) refers to lto-llvm-e814e0.o(.text._DoInit) for _DoInit
    lto-llvm-e814e0.o(.text.SEGGER_RTT_Write) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_WriteNoLock) for SEGGER_RTT_WriteNoLock
    lto-llvm-e814e0.o(.text.SEGGER_RTT_Write) refers to lto-llvm-e814e0.o(.bss) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.SEGGER_RTT_Write) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_Write) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.SEGGER_RTT_SetTerminal) refers to lto-llvm-e814e0.o(.text._DoInit) for _DoInit
    lto-llvm-e814e0.o(.text.SEGGER_RTT_SetTerminal) refers to lto-llvm-e814e0.o(.text._WriteBlocking) for _WriteBlocking
    lto-llvm-e814e0.o(.text.SEGGER_RTT_SetTerminal) refers to lto-llvm-e814e0.o(.text._GetAvailWriteSpace) for _GetAvailWriteSpace
    lto-llvm-e814e0.o(.text.SEGGER_RTT_SetTerminal) refers to lto-llvm-e814e0.o(.text._WriteNoCheck) for _WriteNoCheck
    lto-llvm-e814e0.o(.text.SEGGER_RTT_SetTerminal) refers to lto-llvm-e814e0.o(.bss) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.SEGGER_RTT_SetTerminal) refers to lto-llvm-e814e0.o(.rodata.cst16) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.SEGGER_RTT_SetTerminal) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_SetTerminal) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.SEGGER_RTT_vprintf) refers to lto-llvm-e814e0.o(.text._StoreChar) for _StoreChar
    lto-llvm-e814e0.o(.text.SEGGER_RTT_vprintf) refers to lto-llvm-e814e0.o(.text._PrintInt) for _PrintInt
    lto-llvm-e814e0.o(.text.SEGGER_RTT_vprintf) refers to lto-llvm-e814e0.o(.text._PrintUnsigned) for _PrintUnsigned
    lto-llvm-e814e0.o(.text.SEGGER_RTT_vprintf) refers to d2f.o(.text) for __aeabi_d2f
    lto-llvm-e814e0.o(.text.SEGGER_RTT_vprintf) refers to ffixi.o(.text) for __aeabi_f2iz
    lto-llvm-e814e0.o(.text.SEGGER_RTT_vprintf) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    lto-llvm-e814e0.o(.text.SEGGER_RTT_vprintf) refers to abs.o(.text) for abs
    lto-llvm-e814e0.o(.text.SEGGER_RTT_vprintf) refers to aeabi_sdiv.o(.text) for __aeabi_idivmod
    lto-llvm-e814e0.o(.text.SEGGER_RTT_vprintf) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_Write) for SEGGER_RTT_Write
    lto-llvm-e814e0.o(.ARM.exidx.text.SEGGER_RTT_vprintf) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_vprintf) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text._StoreChar) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_Write) for SEGGER_RTT_Write
    lto-llvm-e814e0.o(.ARM.exidx.text._StoreChar) refers to lto-llvm-e814e0.o(.text._StoreChar) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text._PrintInt) refers to aeabi_sdiv.o(.text) for __aeabi_idiv
    lto-llvm-e814e0.o(.text._PrintInt) refers to lto-llvm-e814e0.o(.text._StoreChar) for _StoreChar
    lto-llvm-e814e0.o(.text._PrintInt) refers to lto-llvm-e814e0.o(.text._PrintUnsigned) for _PrintUnsigned
    lto-llvm-e814e0.o(.ARM.exidx.text._PrintInt) refers to lto-llvm-e814e0.o(.text._PrintInt) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text._PrintUnsigned) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    lto-llvm-e814e0.o(.text._PrintUnsigned) refers to lto-llvm-e814e0.o(.text._StoreChar) for _StoreChar
    lto-llvm-e814e0.o(.text._PrintUnsigned) refers to lto-llvm-e814e0.o(.rodata.cst16) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text._PrintUnsigned) refers to lto-llvm-e814e0.o(.text._PrintUnsigned) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.SEGGER_RTT_printf) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_vprintf) for SEGGER_RTT_vprintf
    lto-llvm-e814e0.o(.ARM.exidx.text.SEGGER_RTT_printf) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_printf) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.UART2_Transmit8_mutex) refers to lto-llvm-e814e0.o(.text.LL_USART_TransmitData8) for LL_USART_TransmitData8
    lto-llvm-e814e0.o(.text.UART2_Transmit8_mutex) refers to lto-llvm-e814e0.o(.text.LL_USART_IsActiveFlag_TXE_TXFNF) for LL_USART_IsActiveFlag_TXE_TXFNF
    lto-llvm-e814e0.o(.ARM.exidx.text.UART2_Transmit8_mutex) refers to lto-llvm-e814e0.o(.text.UART2_Transmit8_mutex) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_TransmitData8) refers to lto-llvm-e814e0.o(.text.LL_USART_TransmitData8) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_IsActiveFlag_TXE_TXFNF) refers to lto-llvm-e814e0.o(.text.LL_USART_IsActiveFlag_TXE_TXFNF) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.UART2_Transmit8) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    lto-llvm-e814e0.o(.text.UART2_Transmit8) refers to lto-llvm-e814e0.o(.text.UART2_Transmit8_mutex) for UART2_Transmit8_mutex
    lto-llvm-e814e0.o(.text.UART2_Transmit8) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    lto-llvm-e814e0.o(.text.UART2_Transmit8) refers to lto-llvm-e814e0.o(.data) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.UART2_Transmit8) refers to lto-llvm-e814e0.o(.bss) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.UART2_Transmit8) refers to lto-llvm-e814e0.o(.text.UART2_Transmit8) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.USART2_IRQHandler) refers to lto-llvm-e814e0.o(.text.LL_USART_IsActiveFlag_RXNE_RXFNE) for LL_USART_IsActiveFlag_RXNE_RXFNE
    lto-llvm-e814e0.o(.text.USART2_IRQHandler) refers to lto-llvm-e814e0.o(.text.LL_USART_ReceiveData8) for LL_USART_ReceiveData8
    lto-llvm-e814e0.o(.text.USART2_IRQHandler) refers to rtx_evflags.o(.text.osEventFlagsSet) for osEventFlagsSet
    lto-llvm-e814e0.o(.text.USART2_IRQHandler) refers to lto-llvm-e814e0.o(.text.LL_USART_ClearFlag_ORE) for LL_USART_ClearFlag_ORE
    lto-llvm-e814e0.o(.text.USART2_IRQHandler) refers to lto-llvm-e814e0.o(.data) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.USART2_IRQHandler) refers to lto-llvm-e814e0.o(.bss) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.USART2_IRQHandler) refers to lto-llvm-e814e0.o(.text.USART2_IRQHandler) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_IsActiveFlag_RXNE_RXFNE) refers to lto-llvm-e814e0.o(.text.LL_USART_IsActiveFlag_RXNE_RXFNE) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_ReceiveData8) refers to lto-llvm-e814e0.o(.text.LL_USART_ReceiveData8) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_ClearFlag_ORE) refers to lto-llvm-e814e0.o(.text.LL_USART_ClearFlag_ORE) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.Countqueue) refers to fcmp.o(i._fleq) for __aeabi_fcmple
    lto-llvm-e814e0.o(.text.Countqueue) refers to fcmp.o(i._fgeq) for __aeabi_fcmpge
    lto-llvm-e814e0.o(.text.Countqueue) refers to fcmp.o(i._feq) for __aeabi_fcmpeq
    lto-llvm-e814e0.o(.text.Countqueue) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    lto-llvm-e814e0.o(.text.Countqueue) refers to aeabi_sdiv.o(.text) for __aeabi_uidivmod
    lto-llvm-e814e0.o(.text.Countqueue) refers to fflti.o(.text) for __aeabi_i2f
    lto-llvm-e814e0.o(.text.Countqueue) refers to fdiv.o(.text) for __aeabi_fdiv
    lto-llvm-e814e0.o(.ARM.exidx.text.Countqueue) refers to lto-llvm-e814e0.o(.text.Countqueue) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.enqueue) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_SetTerminal) for SEGGER_RTT_SetTerminal
    lto-llvm-e814e0.o(.text.enqueue) refers to f2d.o(.text) for __aeabi_f2d
    lto-llvm-e814e0.o(.text.enqueue) refers to lto-llvm-e814e0.o(.text.SEGGER_RTT_printf) for SEGGER_RTT_printf
    lto-llvm-e814e0.o(.text.enqueue) refers to lto-llvm-e814e0.o(.text.Countqueue) for Countqueue
    lto-llvm-e814e0.o(.text.enqueue) refers to aeabi_sdiv.o(.text) for __aeabi_idivmod
    lto-llvm-e814e0.o(.text.enqueue) refers to lto-llvm-e814e0.o(.rodata.str1.1) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.enqueue) refers to lto-llvm-e814e0.o(.text.enqueue) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.LL_Init1msTick) refers to lto-llvm-e814e0.o(.text.LL_InitTick) for LL_InitTick
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_Init1msTick) refers to lto-llvm-e814e0.o(.text.LL_Init1msTick) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.LL_InitTick) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_InitTick) refers to lto-llvm-e814e0.o(.text.LL_InitTick) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_mDelay) refers to lto-llvm-e814e0.o(.text.LL_mDelay) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.LL_SetSystemCoreClock) refers to lto-llvm-e814e0.o(.data) for SystemCoreClock
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_SetSystemCoreClock) refers to lto-llvm-e814e0.o(.text.LL_SetSystemCoreClock) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.LL_GPIO_Init) refers to lto-llvm-e814e0.o(.text.LL_GPIO_SetPinSpeed) for LL_GPIO_SetPinSpeed
    lto-llvm-e814e0.o(.text.LL_GPIO_Init) refers to lto-llvm-e814e0.o(.text.LL_GPIO_SetPinOutputType) for LL_GPIO_SetPinOutputType
    lto-llvm-e814e0.o(.text.LL_GPIO_Init) refers to lto-llvm-e814e0.o(.text.LL_GPIO_SetPinPull) for LL_GPIO_SetPinPull
    lto-llvm-e814e0.o(.text.LL_GPIO_Init) refers to lto-llvm-e814e0.o(.text.LL_GPIO_SetAFPin_0_7) for LL_GPIO_SetAFPin_0_7
    lto-llvm-e814e0.o(.text.LL_GPIO_Init) refers to lto-llvm-e814e0.o(.text.LL_GPIO_SetAFPin_8_15) for LL_GPIO_SetAFPin_8_15
    lto-llvm-e814e0.o(.text.LL_GPIO_Init) refers to lto-llvm-e814e0.o(.text.LL_GPIO_SetPinMode) for LL_GPIO_SetPinMode
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_Init) refers to lto-llvm-e814e0.o(.text.LL_GPIO_Init) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_SetPinSpeed) refers to lto-llvm-e814e0.o(.text.LL_GPIO_SetPinSpeed) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_SetPinOutputType) refers to lto-llvm-e814e0.o(.text.LL_GPIO_SetPinOutputType) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_SetPinPull) refers to lto-llvm-e814e0.o(.text.LL_GPIO_SetPinPull) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_SetAFPin_0_7) refers to lto-llvm-e814e0.o(.text.LL_GPIO_SetAFPin_0_7) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_SetAFPin_8_15) refers to lto-llvm-e814e0.o(.text.LL_GPIO_SetAFPin_8_15) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_SetPinMode) refers to lto-llvm-e814e0.o(.text.LL_GPIO_SetPinMode) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_IsEnabled) refers to lto-llvm-e814e0.o(.text.LL_ADC_IsEnabled) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.LL_ADC_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_Init) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.LL_ADC_REG_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_REG_GetSequencerConfigurable) for LL_ADC_REG_GetSequencerConfigurable
    lto-llvm-e814e0.o(.text.LL_ADC_REG_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    lto-llvm-e814e0.o(.text.LL_ADC_REG_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_REG_SetSequencerLength) for LL_ADC_REG_SetSequencerLength
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_REG_Init) refers to lto-llvm-e814e0.o(.text.LL_ADC_REG_Init) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_REG_GetSequencerConfigurable) refers to lto-llvm-e814e0.o(.text.LL_ADC_REG_GetSequencerConfigurable) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_REG_SetSequencerLength) refers to lto-llvm-e814e0.o(.text.LL_ADC_REG_SetSequencerLength) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_HSI_IsReady.55) refers to lto-llvm-e814e0.o(.text.LL_RCC_HSI_IsReady.55) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.LL_RCC_GetSystemClocksFreq) refers to lto-llvm-e814e0.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    lto-llvm-e814e0.o(.text.LL_RCC_GetSystemClocksFreq) refers to lto-llvm-e814e0.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    lto-llvm-e814e0.o(.text.LL_RCC_GetSystemClocksFreq) refers to lto-llvm-e814e0.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq) refers to lto-llvm-e814e0.o(.text.LL_RCC_GetSystemClocksFreq) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.RCC_GetSystemClockFreq) refers to lto-llvm-e814e0.o(.text.LL_RCC_GetSysClkSource.58) for LL_RCC_GetSysClkSource.58
    lto-llvm-e814e0.o(.text.RCC_GetSystemClockFreq) refers to lto-llvm-e814e0.o(.text.RCC_PLL_GetFreqDomain_SYS) for RCC_PLL_GetFreqDomain_SYS
    lto-llvm-e814e0.o(.text.RCC_GetSystemClockFreq) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    lto-llvm-e814e0.o(.ARM.exidx.text.RCC_GetSystemClockFreq) refers to lto-llvm-e814e0.o(.text.RCC_GetSystemClockFreq) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.RCC_GetHCLKClockFreq) refers to lto-llvm-e814e0.o(.text.LL_RCC_GetAHBPrescaler) for LL_RCC_GetAHBPrescaler
    lto-llvm-e814e0.o(.text.RCC_GetHCLKClockFreq) refers to lto-llvm-e814e0.o(.rodata) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.RCC_GetHCLKClockFreq) refers to lto-llvm-e814e0.o(.text.RCC_GetHCLKClockFreq) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.RCC_GetPCLK1ClockFreq) refers to lto-llvm-e814e0.o(.text.LL_RCC_GetAPB1Prescaler) for LL_RCC_GetAPB1Prescaler
    lto-llvm-e814e0.o(.text.RCC_GetPCLK1ClockFreq) refers to lto-llvm-e814e0.o(.rodata.cst32) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.RCC_GetPCLK1ClockFreq) refers to lto-llvm-e814e0.o(.text.RCC_GetPCLK1ClockFreq) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_GetAPB1Prescaler) refers to lto-llvm-e814e0.o(.text.LL_RCC_GetAPB1Prescaler) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_GetAHBPrescaler) refers to lto-llvm-e814e0.o(.text.LL_RCC_GetAHBPrescaler) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_GetSysClkSource.58) refers to lto-llvm-e814e0.o(.text.LL_RCC_GetSysClkSource.58) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to lto-llvm-e814e0.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    lto-llvm-e814e0.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to lto-llvm-e814e0.o(.text.LL_RCC_PLL_GetN) for LL_RCC_PLL_GetN
    lto-llvm-e814e0.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to lto-llvm-e814e0.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    lto-llvm-e814e0.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    lto-llvm-e814e0.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to lto-llvm-e814e0.o(.text.LL_RCC_PLL_GetR) for LL_RCC_PLL_GetR
    lto-llvm-e814e0.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_SYS) refers to lto-llvm-e814e0.o(.text.RCC_PLL_GetFreqDomain_SYS) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_PLL_GetMainSource) refers to lto-llvm-e814e0.o(.text.LL_RCC_PLL_GetMainSource) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_PLL_GetN) refers to lto-llvm-e814e0.o(.text.LL_RCC_PLL_GetN) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_PLL_GetDivider) refers to lto-llvm-e814e0.o(.text.LL_RCC_PLL_GetDivider) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_PLL_GetR) refers to lto-llvm-e814e0.o(.text.LL_RCC_PLL_GetR) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.LL_RCC_GetUSARTClockFreq) refers to lto-llvm-e814e0.o(.text.LL_RCC_GetUSARTClockSource) for LL_RCC_GetUSARTClockSource
    lto-llvm-e814e0.o(.text.LL_RCC_GetUSARTClockFreq) refers to lto-llvm-e814e0.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    lto-llvm-e814e0.o(.text.LL_RCC_GetUSARTClockFreq) refers to lto-llvm-e814e0.o(.text.LL_RCC_HSI_IsReady.55) for LL_RCC_HSI_IsReady.55
    lto-llvm-e814e0.o(.text.LL_RCC_GetUSARTClockFreq) refers to lto-llvm-e814e0.o(.text.LL_RCC_LSE_IsReady) for LL_RCC_LSE_IsReady
    lto-llvm-e814e0.o(.text.LL_RCC_GetUSARTClockFreq) refers to lto-llvm-e814e0.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    lto-llvm-e814e0.o(.text.LL_RCC_GetUSARTClockFreq) refers to lto-llvm-e814e0.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_GetUSARTClockFreq) refers to lto-llvm-e814e0.o(.text.LL_RCC_GetUSARTClockFreq) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_GetUSARTClockSource) refers to lto-llvm-e814e0.o(.text.LL_RCC_GetUSARTClockSource) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_LSE_IsReady) refers to lto-llvm-e814e0.o(.text.LL_RCC_LSE_IsReady) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RTC_DisableWriteProtection) refers to lto-llvm-e814e0.o(.text.LL_RTC_DisableWriteProtection) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.LL_RTC_EnterInitMode) refers to lto-llvm-e814e0.o(.text.LL_RTC_IsActiveFlag_INIT) for LL_RTC_IsActiveFlag_INIT
    lto-llvm-e814e0.o(.text.LL_RTC_EnterInitMode) refers to lto-llvm-e814e0.o(.text.LL_RTC_EnableInitMode) for LL_RTC_EnableInitMode
    lto-llvm-e814e0.o(.text.LL_RTC_EnterInitMode) refers to lto-llvm-e814e0.o(.text.LL_SYSTICK_IsActiveCounterFlag) for LL_SYSTICK_IsActiveCounterFlag
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RTC_EnterInitMode) refers to lto-llvm-e814e0.o(.text.LL_RTC_EnterInitMode) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RTC_DisableInitMode) refers to lto-llvm-e814e0.o(.text.LL_RTC_DisableInitMode) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RTC_EnableWriteProtection) refers to lto-llvm-e814e0.o(.text.LL_RTC_EnableWriteProtection) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_SYSTICK_IsActiveCounterFlag) refers to lto-llvm-e814e0.o(.text.LL_SYSTICK_IsActiveCounterFlag) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RTC_IsActiveFlag_INIT) refers to lto-llvm-e814e0.o(.text.LL_RTC_IsActiveFlag_INIT) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RTC_EnableInitMode) refers to lto-llvm-e814e0.o(.text.LL_RTC_EnableInitMode) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.LL_RTC_Init) refers to lto-llvm-e814e0.o(.text.LL_RTC_DisableWriteProtection) for LL_RTC_DisableWriteProtection
    lto-llvm-e814e0.o(.text.LL_RTC_Init) refers to lto-llvm-e814e0.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    lto-llvm-e814e0.o(.text.LL_RTC_Init) refers to lto-llvm-e814e0.o(.text.LL_RTC_SetHourFormat) for LL_RTC_SetHourFormat
    lto-llvm-e814e0.o(.text.LL_RTC_Init) refers to lto-llvm-e814e0.o(.text.LL_RTC_SetSynchPrescaler) for LL_RTC_SetSynchPrescaler
    lto-llvm-e814e0.o(.text.LL_RTC_Init) refers to lto-llvm-e814e0.o(.text.LL_RTC_SetAsynchPrescaler) for LL_RTC_SetAsynchPrescaler
    lto-llvm-e814e0.o(.text.LL_RTC_Init) refers to lto-llvm-e814e0.o(.text.LL_RTC_DisableInitMode) for LL_RTC_DisableInitMode
    lto-llvm-e814e0.o(.text.LL_RTC_Init) refers to lto-llvm-e814e0.o(.text.LL_RTC_EnableWriteProtection) for LL_RTC_EnableWriteProtection
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RTC_Init) refers to lto-llvm-e814e0.o(.text.LL_RTC_Init) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RTC_SetHourFormat) refers to lto-llvm-e814e0.o(.text.LL_RTC_SetHourFormat) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RTC_SetSynchPrescaler) refers to lto-llvm-e814e0.o(.text.LL_RTC_SetSynchPrescaler) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_RTC_SetAsynchPrescaler) refers to lto-llvm-e814e0.o(.text.LL_RTC_SetAsynchPrescaler) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.LL_USART_Init) refers to lto-llvm-e814e0.o(.text.LL_USART_IsEnabled) for LL_USART_IsEnabled
    lto-llvm-e814e0.o(.text.LL_USART_Init) refers to lto-llvm-e814e0.o(.text.LL_USART_SetStopBitsLength) for LL_USART_SetStopBitsLength
    lto-llvm-e814e0.o(.text.LL_USART_Init) refers to lto-llvm-e814e0.o(.text.LL_USART_SetHWFlowCtrl) for LL_USART_SetHWFlowCtrl
    lto-llvm-e814e0.o(.text.LL_USART_Init) refers to lto-llvm-e814e0.o(.text.LL_RCC_GetUSARTClockFreq) for LL_RCC_GetUSARTClockFreq
    lto-llvm-e814e0.o(.text.LL_USART_Init) refers to lto-llvm-e814e0.o(.text.LL_RCC_GetSystemClocksFreq) for LL_RCC_GetSystemClocksFreq
    lto-llvm-e814e0.o(.text.LL_USART_Init) refers to lto-llvm-e814e0.o(.text.LL_USART_SetBaudRate) for LL_USART_SetBaudRate
    lto-llvm-e814e0.o(.text.LL_USART_Init) refers to lto-llvm-e814e0.o(.text.LL_USART_SetPrescaler) for LL_USART_SetPrescaler
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_Init) refers to lto-llvm-e814e0.o(.text.LL_USART_Init) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_IsEnabled) refers to lto-llvm-e814e0.o(.text.LL_USART_IsEnabled) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_SetStopBitsLength) refers to lto-llvm-e814e0.o(.text.LL_USART_SetStopBitsLength) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_SetHWFlowCtrl) refers to lto-llvm-e814e0.o(.text.LL_USART_SetHWFlowCtrl) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.LL_USART_SetBaudRate) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    lto-llvm-e814e0.o(.text.LL_USART_SetBaudRate) refers to lto-llvm-e814e0.o(.rodata) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_SetBaudRate) refers to lto-llvm-e814e0.o(.text.LL_USART_SetBaudRate) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_SetPrescaler) refers to lto-llvm-e814e0.o(.text.LL_USART_SetPrescaler) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.SystemInit) refers to lto-llvm-e814e0.o(.text.SystemInit) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    lto-llvm-e814e0.o(.text._mutex_initialize) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    lto-llvm-e814e0.o(.ARM.exidx.text._mutex_initialize) refers to lto-llvm-e814e0.o(.text._mutex_initialize) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text._mutex_acquire) refers to lto-llvm-e814e0.o(.text.os_kernel_is_active) for os_kernel_is_active
    lto-llvm-e814e0.o(.text._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    lto-llvm-e814e0.o(.ARM.exidx.text._mutex_acquire) refers to lto-llvm-e814e0.o(.text._mutex_acquire) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text._mutex_release) refers to lto-llvm-e814e0.o(.text.os_kernel_is_active) for os_kernel_is_active
    lto-llvm-e814e0.o(.text._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    lto-llvm-e814e0.o(.ARM.exidx.text._mutex_release) refers to lto-llvm-e814e0.o(.text._mutex_release) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    lto-llvm-e814e0.o(.ARM.exidx.text._mutex_free) refers to lto-llvm-e814e0.o(.text._mutex_free) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    lto-llvm-e814e0.o(.text.os_kernel_is_active) refers to lto-llvm-e814e0.o(.bss) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.os_kernel_is_active) refers to lto-llvm-e814e0.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    lto-llvm-e814e0.o(.ARM.exidx.text._platform_post_stackheap_init) refers to lto-llvm-e814e0.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.text.__user_perthread_libspace) refers to lto-llvm-e814e0.o(.text.os_kernel_is_active) for os_kernel_is_active
    lto-llvm-e814e0.o(.text.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    lto-llvm-e814e0.o(.text.__user_perthread_libspace) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    lto-llvm-e814e0.o(.text.__user_perthread_libspace) refers to lto-llvm-e814e0.o(.bss.os.libspace) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.__user_perthread_libspace) refers to lto-llvm-e814e0.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.osRtxIdleThread) refers to lto-llvm-e814e0.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.ARM.exidx.text.osRtxErrorNotify) refers to lto-llvm-e814e0.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.data) refers to lto-llvm-e814e0.o(.rodata.str1.1) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.rodata) refers to lto-llvm-e814e0.o(.rodata.str1.1) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.rodata) refers to lto-llvm-e814e0.o(.bss.os.thread.cb) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.rodata) refers to lto-llvm-e814e0.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.rodata) refers to lto-llvm-e814e0.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.rodata) refers to lto-llvm-e814e0.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.rodata) refers to lto-llvm-e814e0.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.rodata) refers to lto-llvm-e814e0.o(.bss.os) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.rodata) refers to lto-llvm-e814e0.o(.rodata) for [Anonymous Symbol]
    lto-llvm-e814e0.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    lto-llvm-e814e0.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    d2f.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(.text) refers to ddiv.o(.constdata) for .constdata
    ddiv.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    f2d.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fadd) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fadd) for _fadd1
    faddsub.o(x$fpl$fsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fsub) refers to faddsub.o(x$fpl$fadd) for _fadd1
    fcmp.o(i._feq) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._feq) refers to feqf.o(x$fpl$feqf) for _fcmpeq
    fcmp.o(i._fgeq) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._fgeq) refers to fgef.o(x$fpl$fgeqf) for _fcmpge
    fcmp.o(i._fgr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._fgr) refers to fgef.o(x$fpl$fgeqf) for _fcmpge
    fcmp.o(i._fleq) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._fleq) refers to flef.o(x$fpl$fleqf) for _fcmple
    fcmp.o(i._fls) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._fls) refers to flef.o(x$fpl$fleqf) for _fcmple
    fcmp.o(i._fneq) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._fneq) refers to feqf.o(x$fpl$feqf) for _fcmpeq
    fdiv.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(.text) refers to fdiv.o(.constdata) for .constdata
    fdiv.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffixi.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflti.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    feqf.o(x$fpl$feqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    feqf.o(x$fpl$feqf) refers to fcmpin.o(.text) for __fpl_fcmp_InfNaN
    fgef.o(x$fpl$fgeqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fgef.o(x$fpl$fgeqf) refers to fcmpin.o(.text) for __fpl_fcmp_InfNaN
    flef.o(x$fpl$fleqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    flef.o(x$fpl$fleqf) refers to fcmpin.o(.text) for __fpl_fcmp_InfNaN
    fcmpin.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmpin.o(.text) refers to cmpret.o(.text) for __fpl_cmpreturn
    fcmpin.o(.text) refers to fnan2.o(.text) for __fpl_fcheck_NaN2
    cmpret.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fnan2.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fnan2.o(.text) refers to retnan.o(.text) for __fpl_return_NaN
    retnan.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    retnan.o(.text) refers to cmpret.o(.text) for __fpl_cmpreturn


==============================================================================

Removing Unused input sections from the image.

    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (56 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (60 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.GetKernelSleepTime), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (128 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (18 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (18 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (70 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (132 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (54 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (58 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (152 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (96 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (104 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (40 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (32 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (18 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (42 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_evflags.o(.text), (0 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGetName), (36 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGet), (48 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGet), (18 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsDelete), (40 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGetName), (18 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsDelete), (96 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (18 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (24 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing irq_armv6m.o(.rodata), (1 bytes).
    Removing irq_armv6m.o(.ARM.exidx), (24 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (432 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (64 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (112 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (160 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (112 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (40 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing lto-llvm-e814e0.o(.text), (0 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.ADC_Read_Voltage), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_Enable), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_IsActiveFlag_ADRDY), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_IsActiveFlag_EOC), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_ClearFlag_EOC), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_REG_StartConversion), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_REG_ReadConversionData12), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.ADC_Update), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.uart_transmit_thread), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.PackAllData), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.PackQueue), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.crc16), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.i2c_timer_cb), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.app_main), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.main), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.MX_GPIO_Init), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.MX_ADC1_Init), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.MX_RTC_Init), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.MX_USART2_UART_Init), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_IOP_GRP1_EnableClock), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_SetTXRXSwap), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_ConfigAsyncMode), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_EnableIT_RXNE_RXFNE), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_Enable), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_IsActiveFlag_TEACK), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_IsActiveFlag_REACK), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_GetRTCClockSource), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_ForceBackupDomainReset), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_ReleaseBackupDomainReset), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_SetRTCClockSource), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_EnableRTC), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_REG_SetSequencerConfigurable), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_IsActiveFlag_CCRDY), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_ClearFlag_CCRDY), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_SetOverSamplingScope), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_SetTriggerFrequencyMode), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_SetCommonPathInternalCh), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_SetSamplingTimeCommonChannels), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_DisableIT_EOC), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_DisableIT_EOS), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_EnableInternalRegulator), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_REG_SetSequencerRanks), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_SetChannelSamplingTime), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_StartCalibration), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_IsCalibrationOnGoing), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_ResetOutputPin), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_HSI_Enable), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_HSI_IsReady), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_LSI_Enable), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_LSI_IsReady), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_PWR_EnableBkUpAccess), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_SetSysClkSource), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_GetSysClkSource), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.I2C_Delay), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.TMP1075_ReadTemp), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.TMP1075_Read_2Byte), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.I2C_Start), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.I2C_SendData), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.I2C_RecvACK), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.I2C_RecvData), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.I2C_SendACK), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.I2C_SendNAK), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.I2C_Stop), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_ResetOutputPin.10), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_SetOutputPin), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_IsInputPinSet), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.TMP1075_Init), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.INA226_Init), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.INA226_Read_2Byte), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.INA226_Write_2Byte), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.INA226_Update), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.INA226_Read_Voltage), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.INA226_Read_Current), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text._DoInit), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text._GetAvailWriteSpace), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text._WriteNoCheck), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text._WriteBlocking), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.SEGGER_RTT_WriteNoLock), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.SEGGER_RTT_Write), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.SEGGER_RTT_SetTerminal), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.SEGGER_RTT_vprintf), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text._StoreChar), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text._PrintInt), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text._PrintUnsigned), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.SEGGER_RTT_printf), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.UART2_Transmit8_mutex), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_TransmitData8), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_IsActiveFlag_TXE_TXFNF), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.UART2_Transmit8), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.USART2_IRQHandler), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_IsActiveFlag_RXNE_RXFNE), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_ReceiveData8), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_ClearFlag_ORE), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.Countqueue), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.enqueue), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_Init1msTick), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_InitTick), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_mDelay), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_SetSystemCoreClock), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_Init), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_SetPinSpeed), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_SetPinOutputType), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_SetPinPull), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_SetAFPin_0_7), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_SetAFPin_8_15), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_GPIO_SetPinMode), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_IsEnabled), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_Init), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_REG_Init), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_REG_GetSequencerConfigurable), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_ADC_REG_SetSequencerLength), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_HSI_IsReady.55), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.RCC_GetSystemClockFreq), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.RCC_GetHCLKClockFreq), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.RCC_GetPCLK1ClockFreq), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_GetAPB1Prescaler), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_GetAHBPrescaler), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_GetSysClkSource.58), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_SYS), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_PLL_GetMainSource), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_PLL_GetN), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_PLL_GetDivider), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_PLL_GetR), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_GetUSARTClockFreq), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_GetUSARTClockSource), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RCC_LSE_IsReady), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RTC_DisableWriteProtection), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RTC_EnterInitMode), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RTC_DisableInitMode), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RTC_EnableWriteProtection), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_SYSTICK_IsActiveCounterFlag), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RTC_IsActiveFlag_INIT), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RTC_EnableInitMode), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RTC_Init), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RTC_SetHourFormat), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RTC_SetSynchPrescaler), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_RTC_SetAsynchPrescaler), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_Init), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_IsEnabled), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_SetStopBitsLength), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_SetHWFlowCtrl), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_SetBaudRate), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.LL_USART_SetPrescaler), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing lto-llvm-e814e0.o(.text.__user_perthread_libspace), (140 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing lto-llvm-e814e0.o(.ARM.use_no_argv), (4 bytes).
    Removing lto-llvm-e814e0.o(.bss.os.libspace), (496 bytes).

498 unused section(s) (total 9041 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  abs.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/cfplib/cmp.c                    0x00000000   Number         0  fcmp.o ABSOLUTE
    ../fplib/cfplib/cmpret.c                 0x00000000   Number         0  cmpret.o ABSOLUTE
    ../fplib/cfplib/d2f.c                    0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/cfplib/ddiv.c                   0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/cfplib/dmul.c                   0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/cfplib/f2d.c                    0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/cfplib/fcmpin.c                 0x00000000   Number         0  fcmpin.o ABSOLUTE
    ../fplib/cfplib/fdiv.c                   0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/cfplib/ffix.c                   0x00000000   Number         0  ffixi.o ABSOLUTE
    ../fplib/cfplib/fflt.c                   0x00000000   Number         0  fflti.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/cfplib/nan2.c                   0x00000000   Number         0  fnan2.o ABSOLUTE
    ../fplib/cfplib/retnan.c                 0x00000000   Number         0  retnan.o ABSOLUTE
    ../fplib/faddsub6m.s                     0x00000000   Number         0  faddsub.o ABSOLUTE
    ../fplib/feqf6m.s                        0x00000000   Number         0  feqf.o ABSOLUTE
    ../fplib/fgeqf6m.s                       0x00000000   Number         0  fgef.o ABSOLUTE
    ../fplib/fleqf6m.s                       0x00000000   Number         0  flef.o ABSOLUTE
    ../fplib/fmul6m.s                        0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    ld-temp.o                                0x00000000   Number         0  lto-llvm-e814e0.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_evflags.c                            0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    startup_stm32g030xx.s                    0x00000000   Number         0  startup_stm32g030xx.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv6m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv6m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv6m.o ABSOLUTE
    RESET                                    0x08000000   Section      192  startup_stm32g030xx.o(RESET)
    !!!main                                  0x080000c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000c8   Section       60  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000104   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x08000120   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0800013c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0800013e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x08000140   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000142   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000144   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000144   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000144   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0800014a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x08000152   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000156   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000156   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800015e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000160   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000160   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000164   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x0800016c   Section       56  rt_memcpy.o(.emb_text)
    .text                                    0x080001a4   Section       56  startup_stm32g030xx.o(.text)
    [Anonymous Symbol]                       0x080001dc   Section        0  irq_armv6m.o(.text)
    SVC_Number                               0x080001e6   Number         0  irq_armv6m.o(.text)
    SVC_Context                              0x080001fc   Number         0  irq_armv6m.o(.text)
    SVC_ContextSave                          0x0800020c   Number         0  irq_armv6m.o(.text)
    SVC_ContextRestore                       0x08000220   Number         0  irq_armv6m.o(.text)
    SVC_MSP                                  0x0800023c   Number         0  irq_armv6m.o(.text)
    SVC_Exit                                 0x08000242   Number         0  irq_armv6m.o(.text)
    SVC_User                                 0x08000244   Number         0  irq_armv6m.o(.text)
    .text                                    0x08000280   Section        0  abs.o(.text)
    .text                                    0x08000288   Section        0  rt_memcpy.o(.text)
    .text                                    0x0800030a   Section        0  rt_memclr.o(.text)
    .text                                    0x0800034c   Section      364  aeabi_sdiv.o(.text)
    .text                                    0x080004b8   Section        0  heapauxi.o(.text)
    .text                                    0x080004be   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x080004fc   Section        0  exit.o(.text)
    .text                                    0x0800050c   Section        8  libspace.o(.text)
    .text                                    0x08000514   Section        0  sys_exit.o(.text)
    .text                                    0x08000520   Section        2  use_no_semi.o(.text)
    .text                                    0x08000522   Section        0  indicate_semi.o(.text)
    .text                                    0x08000524   Section        0  d2f.o(.text)
    .text                                    0x080005a0   Section        0  ddiv.o(.text)
    .text                                    0x080009e8   Section        0  dmul.o(.text)
    .text                                    0x08000c30   Section        0  f2d.o(.text)
    .text                                    0x08000c84   Section        0  fdiv.o(.text)
    .text                                    0x08000de4   Section        0  ffixi.o(.text)
    .text                                    0x08000e30   Section        0  fflti.o(.text)
    .text                                    0x08000e90   Section        0  fcmpin.o(.text)
    .text                                    0x08000ef4   Section        0  cmpret.o(.text)
    .text                                    0x08000f24   Section        0  fnan2.o(.text)
    .text                                    0x08000f34   Section        0  retnan.o(.text)
    ADC_Read_Voltage                         0x08000f95   Thumb Code   104  lto-llvm-e814e0.o(.text.ADC_Read_Voltage)
    [Anonymous Symbol]                       0x08000f94   Section        0  lto-llvm-e814e0.o(.text.ADC_Read_Voltage)
    __arm_cp.0_0                             0x08000ffc   Number         4  lto-llvm-e814e0.o(.text.ADC_Read_Voltage)
    __arm_cp.0_1                             0x08001000   Number         4  lto-llvm-e814e0.o(.text.ADC_Read_Voltage)
    ADC_Update                               0x08001005   Thumb Code   136  lto-llvm-e814e0.o(.text.ADC_Update)
    [Anonymous Symbol]                       0x08001004   Section        0  lto-llvm-e814e0.o(.text.ADC_Update)
    __arm_cp.7_0                             0x0800108c   Number         4  lto-llvm-e814e0.o(.text.ADC_Update)
    __arm_cp.7_1                             0x08001090   Number         4  lto-llvm-e814e0.o(.text.ADC_Update)
    __arm_cp.7_2                             0x08001094   Number         4  lto-llvm-e814e0.o(.text.ADC_Update)
    __arm_cp.7_3                             0x08001098   Number         4  lto-llvm-e814e0.o(.text.ADC_Update)
    __arm_cp.7_4                             0x0800109c   Number         4  lto-llvm-e814e0.o(.text.ADC_Update)
    __arm_cp.7_5                             0x080010a0   Number         4  lto-llvm-e814e0.o(.text.ADC_Update)
    __arm_cp.7_6                             0x080010a4   Number         4  lto-llvm-e814e0.o(.text.ADC_Update)
    __arm_cp.7_7                             0x080010a8   Number         4  lto-llvm-e814e0.o(.text.ADC_Update)
    __arm_cp.7_8                             0x080010ac   Number         4  lto-llvm-e814e0.o(.text.ADC_Update)
    Countqueue                               0x080010b1   Thumb Code   236  lto-llvm-e814e0.o(.text.Countqueue)
    [Anonymous Symbol]                       0x080010b0   Section        0  lto-llvm-e814e0.o(.text.Countqueue)
    __arm_cp.102_0                           0x0800119c   Number         4  lto-llvm-e814e0.o(.text.Countqueue)
    __arm_cp.102_1                           0x080011a0   Number         4  lto-llvm-e814e0.o(.text.Countqueue)
    EventFlagsCheck                          0x080011a5   Thumb Code    74  rtx_evflags.o(.text.EventFlagsCheck)
    [Anonymous Symbol]                       0x080011a4   Section        0  rtx_evflags.o(.text.EventFlagsCheck)
    [Anonymous Symbol]                       0x080011ee   Section        0  lto-llvm-e814e0.o(.text.HardFault_Handler)
    I2C_Delay                                0x080011f3   Thumb Code    36  lto-llvm-e814e0.o(.text.I2C_Delay)
    [Anonymous Symbol]                       0x080011f2   Section        0  lto-llvm-e814e0.o(.text.I2C_Delay)
    I2C_RecvACK                              0x08001217   Thumb Code    44  lto-llvm-e814e0.o(.text.I2C_RecvACK)
    [Anonymous Symbol]                       0x08001216   Section        0  lto-llvm-e814e0.o(.text.I2C_RecvACK)
    I2C_RecvData                             0x08001243   Thumb Code    96  lto-llvm-e814e0.o(.text.I2C_RecvData)
    [Anonymous Symbol]                       0x08001242   Section        0  lto-llvm-e814e0.o(.text.I2C_RecvData)
    I2C_SendACK                              0x080012a3   Thumb Code    52  lto-llvm-e814e0.o(.text.I2C_SendACK)
    [Anonymous Symbol]                       0x080012a2   Section        0  lto-llvm-e814e0.o(.text.I2C_SendACK)
    I2C_SendData                             0x080012d7   Thumb Code   114  lto-llvm-e814e0.o(.text.I2C_SendData)
    [Anonymous Symbol]                       0x080012d6   Section        0  lto-llvm-e814e0.o(.text.I2C_SendData)
    I2C_SendNAK                              0x08001349   Thumb Code    44  lto-llvm-e814e0.o(.text.I2C_SendNAK)
    [Anonymous Symbol]                       0x08001348   Section        0  lto-llvm-e814e0.o(.text.I2C_SendNAK)
    I2C_Start                                0x08001375   Thumb Code    42  lto-llvm-e814e0.o(.text.I2C_Start)
    [Anonymous Symbol]                       0x08001374   Section        0  lto-llvm-e814e0.o(.text.I2C_Start)
    I2C_Stop                                 0x0800139f   Thumb Code    34  lto-llvm-e814e0.o(.text.I2C_Stop)
    [Anonymous Symbol]                       0x0800139e   Section        0  lto-llvm-e814e0.o(.text.I2C_Stop)
    INA226_Init                              0x080013c1   Thumb Code    88  lto-llvm-e814e0.o(.text.INA226_Init)
    [Anonymous Symbol]                       0x080013c0   Section        0  lto-llvm-e814e0.o(.text.INA226_Init)
    __arm_cp.76_0                            0x08001418   Number         4  lto-llvm-e814e0.o(.text.INA226_Init)
    __arm_cp.76_1                            0x0800141c   Number         4  lto-llvm-e814e0.o(.text.INA226_Init)
    __arm_cp.76_2                            0x08001420   Number         4  lto-llvm-e814e0.o(.text.INA226_Init)
    __arm_cp.76_3                            0x08001424   Number         4  lto-llvm-e814e0.o(.text.INA226_Init)
    __arm_cp.76_4                            0x08001428   Number         4  lto-llvm-e814e0.o(.text.INA226_Init)
    INA226_Read_2Byte                        0x0800142d   Thumb Code    92  lto-llvm-e814e0.o(.text.INA226_Read_2Byte)
    [Anonymous Symbol]                       0x0800142c   Section        0  lto-llvm-e814e0.o(.text.INA226_Read_2Byte)
    INA226_Read_Current                      0x08001489   Thumb Code    92  lto-llvm-e814e0.o(.text.INA226_Read_Current)
    [Anonymous Symbol]                       0x08001488   Section        0  lto-llvm-e814e0.o(.text.INA226_Read_Current)
    __arm_cp.81_0                            0x080014e4   Number         4  lto-llvm-e814e0.o(.text.INA226_Read_Current)
    __arm_cp.81_1                            0x080014e8   Number         4  lto-llvm-e814e0.o(.text.INA226_Read_Current)
    __arm_cp.81_3                            0x080014ec   Number         4  lto-llvm-e814e0.o(.text.INA226_Read_Current)
    INA226_Read_Voltage                      0x080014f1   Thumb Code    84  lto-llvm-e814e0.o(.text.INA226_Read_Voltage)
    [Anonymous Symbol]                       0x080014f0   Section        0  lto-llvm-e814e0.o(.text.INA226_Read_Voltage)
    __arm_cp.80_0                            0x08001544   Number         4  lto-llvm-e814e0.o(.text.INA226_Read_Voltage)
    __arm_cp.80_1                            0x08001548   Number         4  lto-llvm-e814e0.o(.text.INA226_Read_Voltage)
    __arm_cp.80_3                            0x0800154c   Number         4  lto-llvm-e814e0.o(.text.INA226_Read_Voltage)
    INA226_Update                            0x08001551   Thumb Code    44  lto-llvm-e814e0.o(.text.INA226_Update)
    [Anonymous Symbol]                       0x08001550   Section        0  lto-llvm-e814e0.o(.text.INA226_Update)
    __arm_cp.79_0                            0x0800157c   Number         4  lto-llvm-e814e0.o(.text.INA226_Update)
    __arm_cp.79_1                            0x08001580   Number         4  lto-llvm-e814e0.o(.text.INA226_Update)
    __arm_cp.79_2                            0x08001584   Number         4  lto-llvm-e814e0.o(.text.INA226_Update)
    INA226_Write_2Byte                       0x08001589   Thumb Code    64  lto-llvm-e814e0.o(.text.INA226_Write_2Byte)
    [Anonymous Symbol]                       0x08001588   Section        0  lto-llvm-e814e0.o(.text.INA226_Write_2Byte)
    LL_ADC_ClearFlag_CCRDY                   0x080015c9   Thumb Code    20  lto-llvm-e814e0.o(.text.LL_ADC_ClearFlag_CCRDY)
    [Anonymous Symbol]                       0x080015c8   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_ClearFlag_CCRDY)
    LL_ADC_ClearFlag_EOC                     0x080015dd   Thumb Code    14  lto-llvm-e814e0.o(.text.LL_ADC_ClearFlag_EOC)
    [Anonymous Symbol]                       0x080015dc   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_ClearFlag_EOC)
    LL_ADC_DisableIT_EOC                     0x080015ed   Thumb Code    20  lto-llvm-e814e0.o(.text.LL_ADC_DisableIT_EOC)
    [Anonymous Symbol]                       0x080015ec   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_DisableIT_EOC)
    LL_ADC_DisableIT_EOS                     0x08001601   Thumb Code    20  lto-llvm-e814e0.o(.text.LL_ADC_DisableIT_EOS)
    [Anonymous Symbol]                       0x08001600   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_DisableIT_EOS)
    LL_ADC_Enable                            0x08001615   Thumb Code    24  lto-llvm-e814e0.o(.text.LL_ADC_Enable)
    [Anonymous Symbol]                       0x08001614   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_Enable)
    LL_ADC_EnableInternalRegulator           0x0800162d   Thumb Code    28  lto-llvm-e814e0.o(.text.LL_ADC_EnableInternalRegulator)
    [Anonymous Symbol]                       0x0800162c   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_EnableInternalRegulator)
    LL_ADC_Init                              0x08001649   Thumb Code    88  lto-llvm-e814e0.o(.text.LL_ADC_Init)
    [Anonymous Symbol]                       0x08001648   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_Init)
    __arm_cp.116_1                           0x080016a0   Number         4  lto-llvm-e814e0.o(.text.LL_ADC_Init)
    LL_ADC_IsActiveFlag_ADRDY                0x080016a5   Thumb Code    16  lto-llvm-e814e0.o(.text.LL_ADC_IsActiveFlag_ADRDY)
    [Anonymous Symbol]                       0x080016a4   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_IsActiveFlag_ADRDY)
    LL_ADC_IsActiveFlag_CCRDY                0x080016b5   Thumb Code    24  lto-llvm-e814e0.o(.text.LL_ADC_IsActiveFlag_CCRDY)
    [Anonymous Symbol]                       0x080016b4   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_IsActiveFlag_CCRDY)
    LL_ADC_IsActiveFlag_EOC                  0x080016cd   Thumb Code    18  lto-llvm-e814e0.o(.text.LL_ADC_IsActiveFlag_EOC)
    [Anonymous Symbol]                       0x080016cc   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_IsActiveFlag_EOC)
    LL_ADC_IsCalibrationOnGoing              0x080016e1   Thumb Code    24  lto-llvm-e814e0.o(.text.LL_ADC_IsCalibrationOnGoing)
    [Anonymous Symbol]                       0x080016e0   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_IsCalibrationOnGoing)
    LL_ADC_IsEnabled                         0x080016f9   Thumb Code    16  lto-llvm-e814e0.o(.text.LL_ADC_IsEnabled)
    [Anonymous Symbol]                       0x080016f8   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_IsEnabled)
    LL_ADC_REG_GetSequencerConfigurable      0x08001709   Thumb Code    18  lto-llvm-e814e0.o(.text.LL_ADC_REG_GetSequencerConfigurable)
    [Anonymous Symbol]                       0x08001708   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_REG_GetSequencerConfigurable)
    LL_ADC_REG_Init                          0x0800171d   Thumb Code   196  lto-llvm-e814e0.o(.text.LL_ADC_REG_Init)
    [Anonymous Symbol]                       0x0800171c   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_REG_Init)
    __arm_cp.117_1                           0x080017e0   Number         4  lto-llvm-e814e0.o(.text.LL_ADC_REG_Init)
    LL_ADC_REG_ReadConversionData12          0x080017e5   Thumb Code    14  lto-llvm-e814e0.o(.text.LL_ADC_REG_ReadConversionData12)
    [Anonymous Symbol]                       0x080017e4   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_REG_ReadConversionData12)
    LL_ADC_REG_SetSequencerConfigurable      0x080017f5   Thumb Code    32  lto-llvm-e814e0.o(.text.LL_ADC_REG_SetSequencerConfigurable)
    [Anonymous Symbol]                       0x080017f4   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_REG_SetSequencerConfigurable)
    LL_ADC_REG_SetSequencerLength            0x08001815   Thumb Code    20  lto-llvm-e814e0.o(.text.LL_ADC_REG_SetSequencerLength)
    [Anonymous Symbol]                       0x08001814   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_REG_SetSequencerLength)
    LL_ADC_REG_SetSequencerRanks             0x08001829   Thumb Code    48  lto-llvm-e814e0.o(.text.LL_ADC_REG_SetSequencerRanks)
    [Anonymous Symbol]                       0x08001828   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_REG_SetSequencerRanks)
    LL_ADC_REG_StartConversion               0x08001859   Thumb Code    24  lto-llvm-e814e0.o(.text.LL_ADC_REG_StartConversion)
    [Anonymous Symbol]                       0x08001858   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_REG_StartConversion)
    __arm_cp.5_0                             0x08001870   Number         4  lto-llvm-e814e0.o(.text.LL_ADC_REG_StartConversion)
    LL_ADC_SetChannelSamplingTime            0x08001875   Thumb Code    40  lto-llvm-e814e0.o(.text.LL_ADC_SetChannelSamplingTime)
    [Anonymous Symbol]                       0x08001874   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_SetChannelSamplingTime)
    __arm_cp.47_1                            0x0800189c   Number         4  lto-llvm-e814e0.o(.text.LL_ADC_SetChannelSamplingTime)
    LL_ADC_SetCommonPathInternalCh           0x080018a1   Thumb Code    32  lto-llvm-e814e0.o(.text.LL_ADC_SetCommonPathInternalCh)
    [Anonymous Symbol]                       0x080018a0   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_SetCommonPathInternalCh)
    __arm_cp.41_0                            0x080018c0   Number         4  lto-llvm-e814e0.o(.text.LL_ADC_SetCommonPathInternalCh)
    __arm_cp.41_1                            0x080018c4   Number         4  lto-llvm-e814e0.o(.text.LL_ADC_SetCommonPathInternalCh)
    LL_ADC_SetOverSamplingScope              0x080018c9   Thumb Code    32  lto-llvm-e814e0.o(.text.LL_ADC_SetOverSamplingScope)
    [Anonymous Symbol]                       0x080018c8   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_SetOverSamplingScope)
    LL_ADC_SetSamplingTimeCommonChannels     0x080018e9   Thumb Code    40  lto-llvm-e814e0.o(.text.LL_ADC_SetSamplingTimeCommonChannels)
    [Anonymous Symbol]                       0x080018e8   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_SetSamplingTimeCommonChannels)
    LL_ADC_SetTriggerFrequencyMode           0x08001911   Thumb Code    32  lto-llvm-e814e0.o(.text.LL_ADC_SetTriggerFrequencyMode)
    [Anonymous Symbol]                       0x08001910   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_SetTriggerFrequencyMode)
    LL_ADC_StartCalibration                  0x08001931   Thumb Code    28  lto-llvm-e814e0.o(.text.LL_ADC_StartCalibration)
    [Anonymous Symbol]                       0x08001930   Section        0  lto-llvm-e814e0.o(.text.LL_ADC_StartCalibration)
    __arm_cp.48_0                            0x0800194c   Number         4  lto-llvm-e814e0.o(.text.LL_ADC_StartCalibration)
    LL_APB1_GRP1_EnableClock                 0x08001951   Thumb Code    28  lto-llvm-e814e0.o(.text.LL_APB1_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08001950   Section        0  lto-llvm-e814e0.o(.text.LL_APB1_GRP1_EnableClock)
    __arm_cp.16_0                            0x0800196c   Number         4  lto-llvm-e814e0.o(.text.LL_APB1_GRP1_EnableClock)
    LL_APB2_GRP1_EnableClock                 0x08001971   Thumb Code    28  lto-llvm-e814e0.o(.text.LL_APB2_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08001970   Section        0  lto-llvm-e814e0.o(.text.LL_APB2_GRP1_EnableClock)
    __arm_cp.15_0                            0x0800198c   Number         4  lto-llvm-e814e0.o(.text.LL_APB2_GRP1_EnableClock)
    LL_GPIO_Init                             0x08001991   Thumb Code   186  lto-llvm-e814e0.o(.text.LL_GPIO_Init)
    [Anonymous Symbol]                       0x08001990   Section        0  lto-llvm-e814e0.o(.text.LL_GPIO_Init)
    LL_GPIO_IsInputPinSet                    0x08001a4b   Thumb Code    32  lto-llvm-e814e0.o(.text.LL_GPIO_IsInputPinSet)
    [Anonymous Symbol]                       0x08001a4a   Section        0  lto-llvm-e814e0.o(.text.LL_GPIO_IsInputPinSet)
    LL_GPIO_ResetOutputPin                   0x08001a6b   Thumb Code    20  lto-llvm-e814e0.o(.text.LL_GPIO_ResetOutputPin)
    [Anonymous Symbol]                       0x08001a6a   Section        0  lto-llvm-e814e0.o(.text.LL_GPIO_ResetOutputPin)
    LL_GPIO_ResetOutputPin.10                0x08001a7f   Thumb Code    20  lto-llvm-e814e0.o(.text.LL_GPIO_ResetOutputPin.10)
    [Anonymous Symbol]                       0x08001a7e   Section        0  lto-llvm-e814e0.o(.text.LL_GPIO_ResetOutputPin.10)
    LL_GPIO_SetAFPin_0_7                     0x08001a93   Thumb Code    44  lto-llvm-e814e0.o(.text.LL_GPIO_SetAFPin_0_7)
    [Anonymous Symbol]                       0x08001a92   Section        0  lto-llvm-e814e0.o(.text.LL_GPIO_SetAFPin_0_7)
    LL_GPIO_SetAFPin_8_15                    0x08001abf   Thumb Code    46  lto-llvm-e814e0.o(.text.LL_GPIO_SetAFPin_8_15)
    [Anonymous Symbol]                       0x08001abe   Section        0  lto-llvm-e814e0.o(.text.LL_GPIO_SetAFPin_8_15)
    LL_GPIO_SetOutputPin                     0x08001aed   Thumb Code    20  lto-llvm-e814e0.o(.text.LL_GPIO_SetOutputPin)
    [Anonymous Symbol]                       0x08001aec   Section        0  lto-llvm-e814e0.o(.text.LL_GPIO_SetOutputPin)
    LL_GPIO_SetPinMode                       0x08001b01   Thumb Code    36  lto-llvm-e814e0.o(.text.LL_GPIO_SetPinMode)
    [Anonymous Symbol]                       0x08001b00   Section        0  lto-llvm-e814e0.o(.text.LL_GPIO_SetPinMode)
    LL_GPIO_SetPinOutputType                 0x08001b25   Thumb Code    30  lto-llvm-e814e0.o(.text.LL_GPIO_SetPinOutputType)
    [Anonymous Symbol]                       0x08001b24   Section        0  lto-llvm-e814e0.o(.text.LL_GPIO_SetPinOutputType)
    LL_GPIO_SetPinPull                       0x08001b43   Thumb Code    36  lto-llvm-e814e0.o(.text.LL_GPIO_SetPinPull)
    [Anonymous Symbol]                       0x08001b42   Section        0  lto-llvm-e814e0.o(.text.LL_GPIO_SetPinPull)
    LL_GPIO_SetPinSpeed                      0x08001b67   Thumb Code    36  lto-llvm-e814e0.o(.text.LL_GPIO_SetPinSpeed)
    [Anonymous Symbol]                       0x08001b66   Section        0  lto-llvm-e814e0.o(.text.LL_GPIO_SetPinSpeed)
    LL_IOP_GRP1_EnableClock                  0x08001b8d   Thumb Code    32  lto-llvm-e814e0.o(.text.LL_IOP_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08001b8c   Section        0  lto-llvm-e814e0.o(.text.LL_IOP_GRP1_EnableClock)
    __arm_cp.22_0                            0x08001bac   Number         4  lto-llvm-e814e0.o(.text.LL_IOP_GRP1_EnableClock)
    LL_Init1msTick                           0x08001bb1   Thumb Code    20  lto-llvm-e814e0.o(.text.LL_Init1msTick)
    [Anonymous Symbol]                       0x08001bb0   Section        0  lto-llvm-e814e0.o(.text.LL_Init1msTick)
    LL_InitTick                              0x08001bc5   Thumb Code    44  lto-llvm-e814e0.o(.text.LL_InitTick)
    [Anonymous Symbol]                       0x08001bc4   Section        0  lto-llvm-e814e0.o(.text.LL_InitTick)
    __arm_cp.105_0                           0x08001bf0   Number         4  lto-llvm-e814e0.o(.text.LL_InitTick)
    __arm_cp.105_1                           0x08001bf4   Number         4  lto-llvm-e814e0.o(.text.LL_InitTick)
    __arm_cp.105_2                           0x08001bf8   Number         4  lto-llvm-e814e0.o(.text.LL_InitTick)
    LL_PWR_EnableBkUpAccess                  0x08001bfd   Thumb Code    16  lto-llvm-e814e0.o(.text.LL_PWR_EnableBkUpAccess)
    [Anonymous Symbol]                       0x08001bfc   Section        0  lto-llvm-e814e0.o(.text.LL_PWR_EnableBkUpAccess)
    __arm_cp.55_0                            0x08001c0c   Number         4  lto-llvm-e814e0.o(.text.LL_PWR_EnableBkUpAccess)
    LL_RCC_EnableRTC                         0x08001c11   Thumb Code    16  lto-llvm-e814e0.o(.text.LL_RCC_EnableRTC)
    [Anonymous Symbol]                       0x08001c10   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_EnableRTC)
    LL_RCC_ForceBackupDomainReset            0x08001c21   Thumb Code    16  lto-llvm-e814e0.o(.text.LL_RCC_ForceBackupDomainReset)
    [Anonymous Symbol]                       0x08001c20   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_ForceBackupDomainReset)
    LL_RCC_GetAHBPrescaler                   0x08001c31   Thumb Code    12  lto-llvm-e814e0.o(.text.LL_RCC_GetAHBPrescaler)
    [Anonymous Symbol]                       0x08001c30   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_GetAHBPrescaler)
    LL_RCC_GetAPB1Prescaler                  0x08001c3d   Thumb Code    12  lto-llvm-e814e0.o(.text.LL_RCC_GetAPB1Prescaler)
    [Anonymous Symbol]                       0x08001c3c   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_GetAPB1Prescaler)
    LL_RCC_GetRTCClockSource                 0x08001c49   Thumb Code    12  lto-llvm-e814e0.o(.text.LL_RCC_GetRTCClockSource)
    [Anonymous Symbol]                       0x08001c48   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_GetRTCClockSource)
    LL_RCC_GetSysClkSource                   0x08001c55   Thumb Code    12  lto-llvm-e814e0.o(.text.LL_RCC_GetSysClkSource)
    [Anonymous Symbol]                       0x08001c54   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_GetSysClkSource)
    LL_RCC_GetSysClkSource.58                0x08001c61   Thumb Code    12  lto-llvm-e814e0.o(.text.LL_RCC_GetSysClkSource.58)
    [Anonymous Symbol]                       0x08001c60   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_GetSysClkSource.58)
    LL_RCC_GetSystemClocksFreq               0x08001c6d   Thumb Code    42  lto-llvm-e814e0.o(.text.LL_RCC_GetSystemClocksFreq)
    [Anonymous Symbol]                       0x08001c6c   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_GetSystemClocksFreq)
    LL_RCC_GetUSARTClockFreq                 0x08001c99   Thumb Code   124  lto-llvm-e814e0.o(.text.LL_RCC_GetUSARTClockFreq)
    [Anonymous Symbol]                       0x08001c98   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_GetUSARTClockFreq)
    __arm_cp.133_0                           0x08001d14   Number         4  lto-llvm-e814e0.o(.text.LL_RCC_GetUSARTClockFreq)
    __arm_cp.133_1                           0x08001d18   Number         4  lto-llvm-e814e0.o(.text.LL_RCC_GetUSARTClockFreq)
    LL_RCC_GetUSARTClockSource               0x08001d1d   Thumb Code    20  lto-llvm-e814e0.o(.text.LL_RCC_GetUSARTClockSource)
    [Anonymous Symbol]                       0x08001d1c   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_GetUSARTClockSource)
    __arm_cp.134_0                           0x08001d30   Number         4  lto-llvm-e814e0.o(.text.LL_RCC_GetUSARTClockSource)
    LL_RCC_HSI_Enable                        0x08001d35   Thumb Code    16  lto-llvm-e814e0.o(.text.LL_RCC_HSI_Enable)
    [Anonymous Symbol]                       0x08001d34   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_HSI_Enable)
    LL_RCC_HSI_IsReady                       0x08001d45   Thumb Code    16  lto-llvm-e814e0.o(.text.LL_RCC_HSI_IsReady)
    [Anonymous Symbol]                       0x08001d44   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_HSI_IsReady)
    LL_RCC_HSI_IsReady.55                    0x08001d55   Thumb Code    16  lto-llvm-e814e0.o(.text.LL_RCC_HSI_IsReady.55)
    [Anonymous Symbol]                       0x08001d54   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_HSI_IsReady.55)
    __arm_cp.120_0                           0x08001d64   Number         4  lto-llvm-e814e0.o(.text.LL_RCC_HSI_IsReady.55)
    LL_RCC_LSE_IsReady                       0x08001d69   Thumb Code    12  lto-llvm-e814e0.o(.text.LL_RCC_LSE_IsReady)
    [Anonymous Symbol]                       0x08001d68   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_LSE_IsReady)
    LL_RCC_LSI_Enable                        0x08001d75   Thumb Code    12  lto-llvm-e814e0.o(.text.LL_RCC_LSI_Enable)
    [Anonymous Symbol]                       0x08001d74   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_LSI_Enable)
    LL_RCC_LSI_IsReady                       0x08001d81   Thumb Code    12  lto-llvm-e814e0.o(.text.LL_RCC_LSI_IsReady)
    [Anonymous Symbol]                       0x08001d80   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_LSI_IsReady)
    __arm_cp.54_0                            0x08001d8c   Number         4  lto-llvm-e814e0.o(.text.LL_RCC_LSI_IsReady)
    LL_RCC_PLL_GetDivider                    0x08001d91   Thumb Code    12  lto-llvm-e814e0.o(.text.LL_RCC_PLL_GetDivider)
    [Anonymous Symbol]                       0x08001d90   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_PLL_GetDivider)
    LL_RCC_PLL_GetMainSource                 0x08001d9d   Thumb Code    12  lto-llvm-e814e0.o(.text.LL_RCC_PLL_GetMainSource)
    [Anonymous Symbol]                       0x08001d9c   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_PLL_GetMainSource)
    LL_RCC_PLL_GetN                          0x08001da9   Thumb Code    16  lto-llvm-e814e0.o(.text.LL_RCC_PLL_GetN)
    [Anonymous Symbol]                       0x08001da8   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_PLL_GetN)
    LL_RCC_PLL_GetR                          0x08001db9   Thumb Code    12  lto-llvm-e814e0.o(.text.LL_RCC_PLL_GetR)
    [Anonymous Symbol]                       0x08001db8   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_PLL_GetR)
    __arm_cp.132_0                           0x08001dc4   Number         4  lto-llvm-e814e0.o(.text.LL_RCC_PLL_GetR)
    LL_RCC_ReleaseBackupDomainReset          0x08001dc9   Thumb Code    16  lto-llvm-e814e0.o(.text.LL_RCC_ReleaseBackupDomainReset)
    [Anonymous Symbol]                       0x08001dc8   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_ReleaseBackupDomainReset)
    LL_RCC_SetAHBPrescaler                   0x08001dd9   Thumb Code    28  lto-llvm-e814e0.o(.text.LL_RCC_SetAHBPrescaler)
    [Anonymous Symbol]                       0x08001dd8   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_SetAHBPrescaler)
    LL_RCC_SetAPB1Prescaler                  0x08001df5   Thumb Code    28  lto-llvm-e814e0.o(.text.LL_RCC_SetAPB1Prescaler)
    [Anonymous Symbol]                       0x08001df4   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_SetAPB1Prescaler)
    LL_RCC_SetRTCClockSource                 0x08001e11   Thumb Code    28  lto-llvm-e814e0.o(.text.LL_RCC_SetRTCClockSource)
    [Anonymous Symbol]                       0x08001e10   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_SetRTCClockSource)
    __arm_cp.34_0                            0x08001e2c   Number         4  lto-llvm-e814e0.o(.text.LL_RCC_SetRTCClockSource)
    LL_RCC_SetSysClkSource                   0x08001e31   Thumb Code    24  lto-llvm-e814e0.o(.text.LL_RCC_SetSysClkSource)
    [Anonymous Symbol]                       0x08001e30   Section        0  lto-llvm-e814e0.o(.text.LL_RCC_SetSysClkSource)
    __arm_cp.57_0                            0x08001e48   Number         4  lto-llvm-e814e0.o(.text.LL_RCC_SetSysClkSource)
    LL_RTC_DisableInitMode                   0x08001e4d   Thumb Code    16  lto-llvm-e814e0.o(.text.LL_RTC_DisableInitMode)
    [Anonymous Symbol]                       0x08001e4c   Section        0  lto-llvm-e814e0.o(.text.LL_RTC_DisableInitMode)
    LL_RTC_DisableWriteProtection            0x08001e5d   Thumb Code    20  lto-llvm-e814e0.o(.text.LL_RTC_DisableWriteProtection)
    [Anonymous Symbol]                       0x08001e5c   Section        0  lto-llvm-e814e0.o(.text.LL_RTC_DisableWriteProtection)
    LL_RTC_EnableInitMode                    0x08001e71   Thumb Code    16  lto-llvm-e814e0.o(.text.LL_RTC_EnableInitMode)
    [Anonymous Symbol]                       0x08001e70   Section        0  lto-llvm-e814e0.o(.text.LL_RTC_EnableInitMode)
    LL_RTC_EnableWriteProtection             0x08001e81   Thumb Code    14  lto-llvm-e814e0.o(.text.LL_RTC_EnableWriteProtection)
    [Anonymous Symbol]                       0x08001e80   Section        0  lto-llvm-e814e0.o(.text.LL_RTC_EnableWriteProtection)
    LL_RTC_EnterInitMode                     0x08001e8f   Thumb Code   128  lto-llvm-e814e0.o(.text.LL_RTC_EnterInitMode)
    [Anonymous Symbol]                       0x08001e8e   Section        0  lto-llvm-e814e0.o(.text.LL_RTC_EnterInitMode)
    LL_RTC_Init                              0x08001f11   Thumb Code    88  lto-llvm-e814e0.o(.text.LL_RTC_Init)
    [Anonymous Symbol]                       0x08001f10   Section        0  lto-llvm-e814e0.o(.text.LL_RTC_Init)
    __arm_cp.143_0                           0x08001f68   Number         4  lto-llvm-e814e0.o(.text.LL_RTC_Init)
    LL_RTC_IsActiveFlag_INIT                 0x08001f6d   Thumb Code    18  lto-llvm-e814e0.o(.text.LL_RTC_IsActiveFlag_INIT)
    [Anonymous Symbol]                       0x08001f6c   Section        0  lto-llvm-e814e0.o(.text.LL_RTC_IsActiveFlag_INIT)
    LL_RTC_SetAsynchPrescaler                0x08001f7f   Thumb Code    30  lto-llvm-e814e0.o(.text.LL_RTC_SetAsynchPrescaler)
    [Anonymous Symbol]                       0x08001f7e   Section        0  lto-llvm-e814e0.o(.text.LL_RTC_SetAsynchPrescaler)
    LL_RTC_SetHourFormat                     0x08001f9d   Thumb Code    26  lto-llvm-e814e0.o(.text.LL_RTC_SetHourFormat)
    [Anonymous Symbol]                       0x08001f9c   Section        0  lto-llvm-e814e0.o(.text.LL_RTC_SetHourFormat)
    LL_RTC_SetSynchPrescaler                 0x08001fb9   Thumb Code    28  lto-llvm-e814e0.o(.text.LL_RTC_SetSynchPrescaler)
    [Anonymous Symbol]                       0x08001fb8   Section        0  lto-llvm-e814e0.o(.text.LL_RTC_SetSynchPrescaler)
    __arm_cp.145_0                           0x08001fd4   Number         4  lto-llvm-e814e0.o(.text.LL_RTC_SetSynchPrescaler)
    LL_SYSTICK_IsActiveCounterFlag           0x08001fd9   Thumb Code    16  lto-llvm-e814e0.o(.text.LL_SYSTICK_IsActiveCounterFlag)
    [Anonymous Symbol]                       0x08001fd8   Section        0  lto-llvm-e814e0.o(.text.LL_SYSTICK_IsActiveCounterFlag)
    LL_SetSystemCoreClock                    0x08001fe9   Thumb Code    16  lto-llvm-e814e0.o(.text.LL_SetSystemCoreClock)
    [Anonymous Symbol]                       0x08001fe8   Section        0  lto-llvm-e814e0.o(.text.LL_SetSystemCoreClock)
    __arm_cp.107_0                           0x08001ff8   Number         4  lto-llvm-e814e0.o(.text.LL_SetSystemCoreClock)
    __arm_cp.107_1                           0x08001ffc   Number         4  lto-llvm-e814e0.o(.text.LL_SetSystemCoreClock)
    LL_USART_ClearFlag_ORE                   0x08002001   Thumb Code    16  lto-llvm-e814e0.o(.text.LL_USART_ClearFlag_ORE)
    [Anonymous Symbol]                       0x08002000   Section        0  lto-llvm-e814e0.o(.text.LL_USART_ClearFlag_ORE)
    LL_USART_ConfigAsyncMode                 0x08002011   Thumb Code    32  lto-llvm-e814e0.o(.text.LL_USART_ConfigAsyncMode)
    [Anonymous Symbol]                       0x08002010   Section        0  lto-llvm-e814e0.o(.text.LL_USART_ConfigAsyncMode)
    LL_USART_Enable                          0x08002031   Thumb Code    20  lto-llvm-e814e0.o(.text.LL_USART_Enable)
    [Anonymous Symbol]                       0x08002030   Section        0  lto-llvm-e814e0.o(.text.LL_USART_Enable)
    LL_USART_EnableIT_RXNE_RXFNE             0x08002045   Thumb Code    56  lto-llvm-e814e0.o(.text.LL_USART_EnableIT_RXNE_RXFNE)
    [Anonymous Symbol]                       0x08002044   Section        0  lto-llvm-e814e0.o(.text.LL_USART_EnableIT_RXNE_RXFNE)
    LL_USART_Init                            0x0800207d   Thumb Code   188  lto-llvm-e814e0.o(.text.LL_USART_Init)
    [Anonymous Symbol]                       0x0800207c   Section        0  lto-llvm-e814e0.o(.text.LL_USART_Init)
    __arm_cp.147_1                           0x08002138   Number         4  lto-llvm-e814e0.o(.text.LL_USART_Init)
    __arm_cp.147_2                           0x0800213c   Number         4  lto-llvm-e814e0.o(.text.LL_USART_Init)
    LL_USART_IsActiveFlag_REACK              0x08002141   Thumb Code    24  lto-llvm-e814e0.o(.text.LL_USART_IsActiveFlag_REACK)
    [Anonymous Symbol]                       0x08002140   Section        0  lto-llvm-e814e0.o(.text.LL_USART_IsActiveFlag_REACK)
    LL_USART_IsActiveFlag_RXNE_RXFNE         0x08002159   Thumb Code    20  lto-llvm-e814e0.o(.text.LL_USART_IsActiveFlag_RXNE_RXFNE)
    [Anonymous Symbol]                       0x08002158   Section        0  lto-llvm-e814e0.o(.text.LL_USART_IsActiveFlag_RXNE_RXFNE)
    LL_USART_IsActiveFlag_TEACK              0x0800216d   Thumb Code    24  lto-llvm-e814e0.o(.text.LL_USART_IsActiveFlag_TEACK)
    [Anonymous Symbol]                       0x0800216c   Section        0  lto-llvm-e814e0.o(.text.LL_USART_IsActiveFlag_TEACK)
    LL_USART_IsActiveFlag_TXE_TXFNF          0x08002185   Thumb Code    20  lto-llvm-e814e0.o(.text.LL_USART_IsActiveFlag_TXE_TXFNF)
    [Anonymous Symbol]                       0x08002184   Section        0  lto-llvm-e814e0.o(.text.LL_USART_IsActiveFlag_TXE_TXFNF)
    LL_USART_IsEnabled                       0x08002199   Thumb Code    16  lto-llvm-e814e0.o(.text.LL_USART_IsEnabled)
    [Anonymous Symbol]                       0x08002198   Section        0  lto-llvm-e814e0.o(.text.LL_USART_IsEnabled)
    LL_USART_ReceiveData8                    0x080021a9   Thumb Code    16  lto-llvm-e814e0.o(.text.LL_USART_ReceiveData8)
    [Anonymous Symbol]                       0x080021a8   Section        0  lto-llvm-e814e0.o(.text.LL_USART_ReceiveData8)
    LL_USART_SetBaudRate                     0x080021b9   Thumb Code   152  lto-llvm-e814e0.o(.text.LL_USART_SetBaudRate)
    [Anonymous Symbol]                       0x080021b8   Section        0  lto-llvm-e814e0.o(.text.LL_USART_SetBaudRate)
    __arm_cp.151_0                           0x08002250   Number         4  lto-llvm-e814e0.o(.text.LL_USART_SetBaudRate)
    __arm_cp.151_1                           0x08002254   Number         4  lto-llvm-e814e0.o(.text.LL_USART_SetBaudRate)
    LL_USART_SetHWFlowCtrl                   0x08002259   Thumb Code    28  lto-llvm-e814e0.o(.text.LL_USART_SetHWFlowCtrl)
    [Anonymous Symbol]                       0x08002258   Section        0  lto-llvm-e814e0.o(.text.LL_USART_SetHWFlowCtrl)
    LL_USART_SetPrescaler                    0x08002275   Thumb Code    28  lto-llvm-e814e0.o(.text.LL_USART_SetPrescaler)
    [Anonymous Symbol]                       0x08002274   Section        0  lto-llvm-e814e0.o(.text.LL_USART_SetPrescaler)
    LL_USART_SetStopBitsLength               0x08002291   Thumb Code    28  lto-llvm-e814e0.o(.text.LL_USART_SetStopBitsLength)
    [Anonymous Symbol]                       0x08002290   Section        0  lto-llvm-e814e0.o(.text.LL_USART_SetStopBitsLength)
    LL_USART_SetTXRXSwap                     0x080022ad   Thumb Code    32  lto-llvm-e814e0.o(.text.LL_USART_SetTXRXSwap)
    [Anonymous Symbol]                       0x080022ac   Section        0  lto-llvm-e814e0.o(.text.LL_USART_SetTXRXSwap)
    LL_USART_TransmitData8                   0x080022cd   Thumb Code    20  lto-llvm-e814e0.o(.text.LL_USART_TransmitData8)
    [Anonymous Symbol]                       0x080022cc   Section        0  lto-llvm-e814e0.o(.text.LL_USART_TransmitData8)
    __arm_cp.95_0                            0x080022e0   Number         4  lto-llvm-e814e0.o(.text.LL_USART_TransmitData8)
    LL_mDelay                                0x080022e5   Thumb Code    72  lto-llvm-e814e0.o(.text.LL_mDelay)
    [Anonymous Symbol]                       0x080022e4   Section        0  lto-llvm-e814e0.o(.text.LL_mDelay)
    __arm_cp.106_0                           0x0800232c   Number         4  lto-llvm-e814e0.o(.text.LL_mDelay)
    MX_ADC1_Init                             0x08002331   Thumb Code   248  lto-llvm-e814e0.o(.text.MX_ADC1_Init)
    [Anonymous Symbol]                       0x08002330   Section        0  lto-llvm-e814e0.o(.text.MX_ADC1_Init)
    __arm_cp.19_0                            0x08002428   Number         4  lto-llvm-e814e0.o(.text.MX_ADC1_Init)
    __arm_cp.19_2                            0x0800242c   Number         4  lto-llvm-e814e0.o(.text.MX_ADC1_Init)
    __arm_cp.19_3                            0x08002430   Number         4  lto-llvm-e814e0.o(.text.MX_ADC1_Init)
    __arm_cp.19_4                            0x08002434   Number         4  lto-llvm-e814e0.o(.text.MX_ADC1_Init)
    MX_GPIO_Init                             0x08002439   Thumb Code   104  lto-llvm-e814e0.o(.text.MX_GPIO_Init)
    [Anonymous Symbol]                       0x08002438   Section        0  lto-llvm-e814e0.o(.text.MX_GPIO_Init)
    MX_RTC_Init                              0x080024a1   Thumb Code    74  lto-llvm-e814e0.o(.text.MX_RTC_Init)
    [Anonymous Symbol]                       0x080024a0   Section        0  lto-llvm-e814e0.o(.text.MX_RTC_Init)
    MX_USART2_UART_Init                      0x080024eb   Thumb Code   182  lto-llvm-e814e0.o(.text.MX_USART2_UART_Init)
    [Anonymous Symbol]                       0x080024ea   Section        0  lto-llvm-e814e0.o(.text.MX_USART2_UART_Init)
    MessageQueueGet                          0x080025a1   Thumb Code    66  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x080025a0   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x080025e3   Thumb Code    94  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x080025e2   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x08002641   Thumb Code    30  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x08002640   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x0800265e   Section        0  lto-llvm-e814e0.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x08002664   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x0800266c   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x0800268c   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_2                             0x08002690   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x08002694   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x0800269c   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x080026d8   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x080026dc   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x080026e0   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x080026e4   Number         4  os_systick.o(.text.OS_Tick_Setup)
    PackAllData                              0x080026e9   Thumb Code   144  lto-llvm-e814e0.o(.text.PackAllData)
    [Anonymous Symbol]                       0x080026e8   Section        0  lto-llvm-e814e0.o(.text.PackAllData)
    __arm_cp.9_0                             0x08002778   Number         4  lto-llvm-e814e0.o(.text.PackAllData)
    __arm_cp.9_1                             0x0800277c   Number         4  lto-llvm-e814e0.o(.text.PackAllData)
    __arm_cp.9_2                             0x08002780   Number         4  lto-llvm-e814e0.o(.text.PackAllData)
    __arm_cp.9_3                             0x08002784   Number         4  lto-llvm-e814e0.o(.text.PackAllData)
    __arm_cp.9_4                             0x08002788   Number         4  lto-llvm-e814e0.o(.text.PackAllData)
    __arm_cp.9_5                             0x0800278c   Number         4  lto-llvm-e814e0.o(.text.PackAllData)
    __arm_cp.9_6                             0x08002790   Number         4  lto-llvm-e814e0.o(.text.PackAllData)
    __arm_cp.9_7                             0x08002794   Number         4  lto-llvm-e814e0.o(.text.PackAllData)
    PackQueue                                0x08002799   Thumb Code    78  lto-llvm-e814e0.o(.text.PackQueue)
    [Anonymous Symbol]                       0x08002798   Section        0  lto-llvm-e814e0.o(.text.PackQueue)
    RCC_GetHCLKClockFreq                     0x080027e9   Thumb Code    36  lto-llvm-e814e0.o(.text.RCC_GetHCLKClockFreq)
    [Anonymous Symbol]                       0x080027e8   Section        0  lto-llvm-e814e0.o(.text.RCC_GetHCLKClockFreq)
    __arm_cp.123_0                           0x0800280c   Number         4  lto-llvm-e814e0.o(.text.RCC_GetHCLKClockFreq)
    RCC_GetPCLK1ClockFreq                    0x08002811   Thumb Code    32  lto-llvm-e814e0.o(.text.RCC_GetPCLK1ClockFreq)
    [Anonymous Symbol]                       0x08002810   Section        0  lto-llvm-e814e0.o(.text.RCC_GetPCLK1ClockFreq)
    __arm_cp.124_0                           0x08002830   Number         4  lto-llvm-e814e0.o(.text.RCC_GetPCLK1ClockFreq)
    RCC_GetSystemClockFreq                   0x08002835   Thumb Code    80  lto-llvm-e814e0.o(.text.RCC_GetSystemClockFreq)
    [Anonymous Symbol]                       0x08002834   Section        0  lto-llvm-e814e0.o(.text.RCC_GetSystemClockFreq)
    __arm_cp.122_1                           0x08002884   Number         4  lto-llvm-e814e0.o(.text.RCC_GetSystemClockFreq)
    RCC_PLL_GetFreqDomain_SYS                0x08002889   Thumb Code    88  lto-llvm-e814e0.o(.text.RCC_PLL_GetFreqDomain_SYS)
    [Anonymous Symbol]                       0x08002888   Section        0  lto-llvm-e814e0.o(.text.RCC_PLL_GetFreqDomain_SYS)
    __arm_cp.128_0                           0x080028e0   Number         4  lto-llvm-e814e0.o(.text.RCC_PLL_GetFreqDomain_SYS)
    __arm_cp.128_1                           0x080028e4   Number         4  lto-llvm-e814e0.o(.text.RCC_PLL_GetFreqDomain_SYS)
    SEGGER_RTT_SetTerminal                   0x080028e9   Thumb Code   168  lto-llvm-e814e0.o(.text.SEGGER_RTT_SetTerminal)
    [Anonymous Symbol]                       0x080028e8   Section        0  lto-llvm-e814e0.o(.text.SEGGER_RTT_SetTerminal)
    __arm_cp.88_1                            0x08002990   Number         4  lto-llvm-e814e0.o(.text.SEGGER_RTT_SetTerminal)
    SEGGER_RTT_Write                         0x08002995   Thumb Code    72  lto-llvm-e814e0.o(.text.SEGGER_RTT_Write)
    [Anonymous Symbol]                       0x08002994   Section        0  lto-llvm-e814e0.o(.text.SEGGER_RTT_Write)
    SEGGER_RTT_WriteNoLock                   0x080029dd   Thumb Code   160  lto-llvm-e814e0.o(.text.SEGGER_RTT_WriteNoLock)
    [Anonymous Symbol]                       0x080029dc   Section        0  lto-llvm-e814e0.o(.text.SEGGER_RTT_WriteNoLock)
    __arm_cp.86_0                            0x08002a7c   Number         4  lto-llvm-e814e0.o(.text.SEGGER_RTT_WriteNoLock)
    SEGGER_RTT_printf                        0x08002a81   Thumb Code    44  lto-llvm-e814e0.o(.text.SEGGER_RTT_printf)
    [Anonymous Symbol]                       0x08002a80   Section        0  lto-llvm-e814e0.o(.text.SEGGER_RTT_printf)
    SEGGER_RTT_vprintf                       0x08002aad   Thumb Code   996  lto-llvm-e814e0.o(.text.SEGGER_RTT_vprintf)
    [Anonymous Symbol]                       0x08002aac   Section        0  lto-llvm-e814e0.o(.text.SEGGER_RTT_vprintf)
    __arm_cp.89_0                            0x08002e90   Number         4  lto-llvm-e814e0.o(.text.SEGGER_RTT_vprintf)
    SystemClock_Config                       0x08002e95   Thumb Code    78  lto-llvm-e814e0.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x08002e94   Section        0  lto-llvm-e814e0.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x08002ee2   Section        0  lto-llvm-e814e0.o(.text.SystemInit)
    TMP1075_Init                             0x08002ee5   Thumb Code    56  lto-llvm-e814e0.o(.text.TMP1075_Init)
    [Anonymous Symbol]                       0x08002ee4   Section        0  lto-llvm-e814e0.o(.text.TMP1075_Init)
    __arm_cp.75_0                            0x08002f1c   Number         4  lto-llvm-e814e0.o(.text.TMP1075_Init)
    TMP1075_ReadTemp                         0x08002f21   Thumb Code    88  lto-llvm-e814e0.o(.text.TMP1075_ReadTemp)
    [Anonymous Symbol]                       0x08002f20   Section        0  lto-llvm-e814e0.o(.text.TMP1075_ReadTemp)
    __arm_cp.63_0                            0x08002f78   Number         4  lto-llvm-e814e0.o(.text.TMP1075_ReadTemp)
    TMP1075_Read_2Byte                       0x08002f7d   Thumb Code    92  lto-llvm-e814e0.o(.text.TMP1075_Read_2Byte)
    [Anonymous Symbol]                       0x08002f7c   Section        0  lto-llvm-e814e0.o(.text.TMP1075_Read_2Byte)
    ThreadFlagsCheck                         0x08002fd9   Thumb Code    74  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x08002fd8   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    TimerInsert                              0x08003025   Thumb Code    72  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x08003024   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerRemove                              0x0800306d   Thumb Code    36  rtx_timer.o(.text.TimerRemove)
    [Anonymous Symbol]                       0x0800306c   Section        0  rtx_timer.o(.text.TimerRemove)
    __arm_cp.13_0                            0x08003090   Number         4  rtx_timer.o(.text.TimerRemove)
    UART2_Transmit8                          0x08003095   Thumb Code    44  lto-llvm-e814e0.o(.text.UART2_Transmit8)
    [Anonymous Symbol]                       0x08003094   Section        0  lto-llvm-e814e0.o(.text.UART2_Transmit8)
    __arm_cp.97_0                            0x080030c0   Number         4  lto-llvm-e814e0.o(.text.UART2_Transmit8)
    __arm_cp.97_1                            0x080030c4   Number         4  lto-llvm-e814e0.o(.text.UART2_Transmit8)
    UART2_Transmit8_mutex                    0x080030c9   Thumb Code    74  lto-llvm-e814e0.o(.text.UART2_Transmit8_mutex)
    [Anonymous Symbol]                       0x080030c8   Section        0  lto-llvm-e814e0.o(.text.UART2_Transmit8_mutex)
    [Anonymous Symbol]                       0x08003114   Section        0  lto-llvm-e814e0.o(.text.USART2_IRQHandler)
    __arm_cp.98_0                            0x08003284   Number         4  lto-llvm-e814e0.o(.text.USART2_IRQHandler)
    __arm_cp.98_1                            0x08003288   Number         4  lto-llvm-e814e0.o(.text.USART2_IRQHandler)
    __arm_cp.98_2                            0x0800328c   Number         4  lto-llvm-e814e0.o(.text.USART2_IRQHandler)
    __arm_cp.98_3                            0x08003290   Number         4  lto-llvm-e814e0.o(.text.USART2_IRQHandler)
    __arm_cp.98_4                            0x08003294   Number         4  lto-llvm-e814e0.o(.text.USART2_IRQHandler)
    __arm_cp.98_5                            0x08003298   Number         4  lto-llvm-e814e0.o(.text.USART2_IRQHandler)
    _DoInit                                  0x0800329d   Thumb Code   128  lto-llvm-e814e0.o(.text._DoInit)
    [Anonymous Symbol]                       0x0800329c   Section        0  lto-llvm-e814e0.o(.text._DoInit)
    __arm_cp.82_0                            0x0800331c   Number         4  lto-llvm-e814e0.o(.text._DoInit)
    __arm_cp.82_1                            0x08003320   Number         4  lto-llvm-e814e0.o(.text._DoInit)
    __arm_cp.82_2                            0x08003324   Number         4  lto-llvm-e814e0.o(.text._DoInit)
    __arm_cp.82_3                            0x08003328   Number         4  lto-llvm-e814e0.o(.text._DoInit)
    __arm_cp.82_4                            0x0800332c   Number         4  lto-llvm-e814e0.o(.text._DoInit)
    _GetAvailWriteSpace                      0x08003331   Thumb Code    62  lto-llvm-e814e0.o(.text._GetAvailWriteSpace)
    [Anonymous Symbol]                       0x08003330   Section        0  lto-llvm-e814e0.o(.text._GetAvailWriteSpace)
    _PrintInt                                0x0800336f   Thumb Code   454  lto-llvm-e814e0.o(.text._PrintInt)
    [Anonymous Symbol]                       0x0800336e   Section        0  lto-llvm-e814e0.o(.text._PrintInt)
    _PrintUnsigned                           0x08003535   Thumb Code   428  lto-llvm-e814e0.o(.text._PrintUnsigned)
    [Anonymous Symbol]                       0x08003534   Section        0  lto-llvm-e814e0.o(.text._PrintUnsigned)
    __arm_cp.92_0                            0x080036e0   Number         4  lto-llvm-e814e0.o(.text._PrintUnsigned)
    _StoreChar                               0x080036e5   Thumb Code   116  lto-llvm-e814e0.o(.text._StoreChar)
    [Anonymous Symbol]                       0x080036e4   Section        0  lto-llvm-e814e0.o(.text._StoreChar)
    _WriteBlocking                           0x08003759   Thumb Code   212  lto-llvm-e814e0.o(.text._WriteBlocking)
    [Anonymous Symbol]                       0x08003758   Section        0  lto-llvm-e814e0.o(.text._WriteBlocking)
    _WriteNoCheck                            0x0800382d   Thumb Code   132  lto-llvm-e814e0.o(.text._WriteNoCheck)
    [Anonymous Symbol]                       0x0800382c   Section        0  lto-llvm-e814e0.o(.text._WriteNoCheck)
    __NVIC_EnableIRQ                         0x080038b1   Thumb Code    40  lto-llvm-e814e0.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x080038b0   Section        0  lto-llvm-e814e0.o(.text.__NVIC_EnableIRQ)
    __arm_cp.24_0                            0x080038d8   Number         4  lto-llvm-e814e0.o(.text.__NVIC_EnableIRQ)
    __NVIC_SetPriority                       0x080038dd   Thumb Code   128  lto-llvm-e814e0.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x080038dc   Section        0  lto-llvm-e814e0.o(.text.__NVIC_SetPriority)
    __arm_cp.23_0                            0x0800395c   Number         4  lto-llvm-e814e0.o(.text.__NVIC_SetPriority)
    __arm_cp.23_1                            0x08003960   Number         4  lto-llvm-e814e0.o(.text.__NVIC_SetPriority)
    __tagsym$$used.1                         0x08003964   Number         0  lto-llvm-e814e0.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x08003964   Section        0  lto-llvm-e814e0.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x08003986   Number         0  lto-llvm-e814e0.o(.text._mutex_free)
    [Anonymous Symbol]                       0x08003986   Section        0  lto-llvm-e814e0.o(.text._mutex_free)
    __tagsym$$used.0                         0x08003998   Number         0  lto-llvm-e814e0.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x08003998   Section        0  lto-llvm-e814e0.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x080039cc   Number         0  lto-llvm-e814e0.o(.text._mutex_release)
    [Anonymous Symbol]                       0x080039cc   Section        0  lto-llvm-e814e0.o(.text._mutex_release)
    [Anonymous Symbol]                       0x080039ea   Section        0  lto-llvm-e814e0.o(.text._platform_post_stackheap_init)
    app_main                                 0x080039f5   Thumb Code    96  lto-llvm-e814e0.o(.text.app_main)
    [Anonymous Symbol]                       0x080039f4   Section        0  lto-llvm-e814e0.o(.text.app_main)
    __arm_cp.13_0                            0x08003a54   Number         4  lto-llvm-e814e0.o(.text.app_main)
    __arm_cp.13_1                            0x08003a58   Number         4  lto-llvm-e814e0.o(.text.app_main)
    __arm_cp.13_2                            0x08003a5c   Number         4  lto-llvm-e814e0.o(.text.app_main)
    __arm_cp.13_3                            0x08003a60   Number         4  lto-llvm-e814e0.o(.text.app_main)
    __arm_cp.13_4                            0x08003a64   Number         4  lto-llvm-e814e0.o(.text.app_main)
    __arm_cp.13_5                            0x08003a68   Number         4  lto-llvm-e814e0.o(.text.app_main)
    __arm_cp.13_6                            0x08003a6c   Number         4  lto-llvm-e814e0.o(.text.app_main)
    __arm_cp.13_7                            0x08003a70   Number         4  lto-llvm-e814e0.o(.text.app_main)
    __arm_cp.13_8                            0x08003a74   Number         4  lto-llvm-e814e0.o(.text.app_main)
    __arm_cp.13_9                            0x08003a78   Number         4  lto-llvm-e814e0.o(.text.app_main)
    crc16                                    0x08003a7d   Thumb Code    96  lto-llvm-e814e0.o(.text.crc16)
    [Anonymous Symbol]                       0x08003a7c   Section        0  lto-llvm-e814e0.o(.text.crc16)
    __arm_cp.11_0                            0x08003adc   Number         4  lto-llvm-e814e0.o(.text.crc16)
    __arm_cp.11_1                            0x08003ae0   Number         4  lto-llvm-e814e0.o(.text.crc16)
    __arm_cp.11_2                            0x08003ae4   Number         4  lto-llvm-e814e0.o(.text.crc16)
    enqueue                                  0x08003ae9   Thumb Code   116  lto-llvm-e814e0.o(.text.enqueue)
    [Anonymous Symbol]                       0x08003ae8   Section        0  lto-llvm-e814e0.o(.text.enqueue)
    __arm_cp.103_0                           0x08003b5c   Number         4  lto-llvm-e814e0.o(.text.enqueue)
    i2c_timer_cb                             0x08003b61   Thumb Code   152  lto-llvm-e814e0.o(.text.i2c_timer_cb)
    [Anonymous Symbol]                       0x08003b60   Section        0  lto-llvm-e814e0.o(.text.i2c_timer_cb)
    __arm_cp.12_0                            0x08003bf8   Number         4  lto-llvm-e814e0.o(.text.i2c_timer_cb)
    __arm_cp.12_1                            0x08003bfc   Number         4  lto-llvm-e814e0.o(.text.i2c_timer_cb)
    __arm_cp.12_2                            0x08003c00   Number         4  lto-llvm-e814e0.o(.text.i2c_timer_cb)
    __arm_cp.12_3                            0x08003c04   Number         4  lto-llvm-e814e0.o(.text.i2c_timer_cb)
    __arm_cp.12_4                            0x08003c08   Number         4  lto-llvm-e814e0.o(.text.i2c_timer_cb)
    __arm_cp.12_5                            0x08003c0c   Number         4  lto-llvm-e814e0.o(.text.i2c_timer_cb)
    __arm_cp.12_6                            0x08003c10   Number         4  lto-llvm-e814e0.o(.text.i2c_timer_cb)
    __arm_cp.12_7                            0x08003c14   Number         4  lto-llvm-e814e0.o(.text.i2c_timer_cb)
    __arm_cp.12_8                            0x08003c18   Number         4  lto-llvm-e814e0.o(.text.i2c_timer_cb)
    __arm_cp.12_9                            0x08003c1c   Number         4  lto-llvm-e814e0.o(.text.i2c_timer_cb)
    __arm_cp.12_10                           0x08003c20   Number         4  lto-llvm-e814e0.o(.text.i2c_timer_cb)
    __arm_cp.12_11                           0x08003c24   Number         4  lto-llvm-e814e0.o(.text.i2c_timer_cb)
    [Anonymous Symbol]                       0x08003c28   Section        0  lto-llvm-e814e0.o(.text.main)
    __arm_cp.14_0                            0x08003c7c   Number         4  lto-llvm-e814e0.o(.text.main)
    __arm_cp.14_1                            0x08003c80   Number         4  lto-llvm-e814e0.o(.text.main)
    __arm_cp.14_2                            0x08003c84   Number         4  lto-llvm-e814e0.o(.text.main)
    [Anonymous Symbol]                       0x08003c88   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x08003cac   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x08003cb0   Section        0  rtx_evflags.o(.text.osEventFlagsClear)
    __arm_cp.3_0                             0x08003cd0   Number         4  rtx_evflags.o(.text.osEventFlagsClear)
    [Anonymous Symbol]                       0x08003cd4   Section        0  rtx_evflags.o(.text.osEventFlagsNew)
    __arm_cp.0_0                             0x08003cf4   Number         4  rtx_evflags.o(.text.osEventFlagsNew)
    [Anonymous Symbol]                       0x08003cf8   Section        0  rtx_evflags.o(.text.osEventFlagsSet)
    __arm_cp.2_0                             0x08003d40   Number         4  rtx_evflags.o(.text.osEventFlagsSet)
    [Anonymous Symbol]                       0x08003d44   Section        0  rtx_evflags.o(.text.osEventFlagsWait)
    __arm_cp.7_0                             0x08003d84   Number         4  rtx_evflags.o(.text.osEventFlagsWait)
    [Anonymous Symbol]                       0x08003d88   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_0                             0x08003db0   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x08003db4   Section        0  rtx_kernel.o(.text.osKernelGetTickCount)
    __arm_cp.13_0                            0x08003dd4   Number         4  rtx_kernel.o(.text.osKernelGetTickCount)
    __arm_cp.13_1                            0x08003dd8   Number         4  rtx_kernel.o(.text.osKernelGetTickCount)
    [Anonymous Symbol]                       0x08003ddc   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.2_0                             0x08003e00   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x08003e04   Section        0  rtx_kernel.o(.text.osKernelLock)
    __arm_cp.8_0                             0x08003e24   Number         4  rtx_kernel.o(.text.osKernelLock)
    [Anonymous Symbol]                       0x08003e28   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.7_0                             0x08003e48   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x08003e4c   Section        0  rtx_kernel.o(.text.osKernelUnlock)
    __arm_cp.9_0                             0x08003e6c   Number         4  rtx_kernel.o(.text.osKernelUnlock)
    [Anonymous Symbol]                       0x08003e70   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.5_0                             0x08003ee0   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x08003ee4   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.4_0                             0x08003f54   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x08003f58   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.4_0                             0x08003f7c   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x08003f80   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.7_0                             0x08003fa4   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x08003fa8   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.2_0                             0x08003fc8   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x08003fcc   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.5_0                             0x08003ff0   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x08003ff4   Section        0  lto-llvm-e814e0.o(.text.osRtxErrorNotify)
    osRtxEventFlagsPostProcess               0x08004023   Thumb Code    52  rtx_evflags.o(.text.osRtxEventFlagsPostProcess)
    [Anonymous Symbol]                       0x08004022   Section        0  rtx_evflags.o(.text.osRtxEventFlagsPostProcess)
    [Anonymous Symbol]                       0x08004056   Section        0  lto-llvm-e814e0.o(.text.osRtxIdleThread)
    [Anonymous Symbol]                       0x0800405e   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x08004066   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x08004068   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x080040e0   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x0800412e   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x0800415c   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08004186   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x080041bc   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueuePostProcess             0x080041f9   Thumb Code   188  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x080041f8   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x080042b4   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    __arm_cp.0_0                             0x080042d4   Number         4  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    [Anonymous Symbol]                       0x080042d8   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x0800431c   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    [Anonymous Symbol]                       0x08004364   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x080043e4   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x0800444c   Number         4  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadBlock                         0x08004451   Thumb Code    52  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x08004450   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x08004485   Thumb Code   140  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x08004484   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayRemove                   0x08004511   Thumb Code    68  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x08004510   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x08004554   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDestroy                       0x080045a9   Thumb Code    40  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x080045a8   Section        0  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x080045d0   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x0800461d   Thumb Code    80  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x0800461c   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.51_0                            0x0800466c   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadJoinWakeup                    0x08004671   Thumb Code    32  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x08004670   Section        0  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x08004690   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x080046a4   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x080046d0   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x080046e8   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x0800470d   Thumb Code    38  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x0800470c   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08004734   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x08004748   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x08004750   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.14_0                            0x08004788   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.14_1                            0x0800478c   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x08004790   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.7_0                             0x0800479c   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x080047a0   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.12_0                            0x080047dc   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x080047e0   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x08004804   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x08004880   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x08004884   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_0                             0x080048a0   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_1                             0x080048a4   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x080048a8   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x080048c5   Thumb Code   112  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x080048c4   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x08004934   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x08004938   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.30_0                            0x08004940   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x08004944   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.16_0                            0x08004964   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x08004968   Section        0  rtx_timer.o(.text.osTimerNew)
    __arm_cp.3_0                             0x08004988   Number         4  rtx_timer.o(.text.osTimerNew)
    [Anonymous Symbol]                       0x0800498c   Section        0  rtx_timer.o(.text.osTimerStart)
    __arm_cp.5_0                             0x080049b0   Number         4  rtx_timer.o(.text.osTimerStart)
    os_kernel_is_active                      0x080049b5   Thumb Code    40  lto-llvm-e814e0.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x080049b4   Section        0  lto-llvm-e814e0.o(.text.os_kernel_is_active)
    __arm_cp.158_0                           0x080049dc   Number         4  lto-llvm-e814e0.o(.text.os_kernel_is_active)
    svcRtxDelay                              0x080049e1   Thumb Code    24  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x080049e0   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxEventFlagsClear                    0x080049f9   Thumb Code    46  rtx_evflags.o(.text.svcRtxEventFlagsClear)
    [Anonymous Symbol]                       0x080049f8   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsClear)
    svcRtxEventFlagsNew                      0x08004a29   Thumb Code   108  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    [Anonymous Symbol]                       0x08004a28   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    __arm_cp.9_0                             0x08004a94   Number         4  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    __arm_cp.9_1                             0x08004a98   Number         4  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    svcRtxEventFlagsSet                      0x08004a9d   Thumb Code   118  rtx_evflags.o(.text.svcRtxEventFlagsSet)
    [Anonymous Symbol]                       0x08004a9c   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsSet)
    svcRtxEventFlagsWait                     0x08004b15   Thumb Code    92  rtx_evflags.o(.text.svcRtxEventFlagsWait)
    [Anonymous Symbol]                       0x08004b14   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsWait)
    svcRtxKernelGetState                     0x08004b71   Thumb Code     8  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x08004b70   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetTickCount                 0x08004b79   Thumb Code     8  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    [Anonymous Symbol]                       0x08004b78   Section        0  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    __arm_cp.14_0                            0x08004b80   Number         4  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    svcRtxKernelInitialize                   0x08004b85   Thumb Code   308  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x08004b84   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_0                            0x08004cb8   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_2                            0x08004cbc   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelLock                         0x08004cc1   Thumb Code    32  rtx_kernel.o(.text.svcRtxKernelLock)
    [Anonymous Symbol]                       0x08004cc0   Section        0  rtx_kernel.o(.text.svcRtxKernelLock)
    svcRtxKernelStart                        0x08004ce1   Thumb Code   116  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x08004ce0   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_1                            0x08004d54   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_2                            0x08004d58   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_3                            0x08004d5c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxKernelUnlock                       0x08004d61   Thumb Code    32  rtx_kernel.o(.text.svcRtxKernelUnlock)
    [Anonymous Symbol]                       0x08004d60   Section        0  rtx_kernel.o(.text.svcRtxKernelUnlock)
    __arm_cp.24_0                            0x08004d80   Number         4  rtx_kernel.o(.text.svcRtxKernelUnlock)
    svcRtxMessageQueueGet                    0x08004d85   Thumb Code   200  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08004d84   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.22_0                            0x08004e4c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x08004e51   Thumb Code   428  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x08004e50   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_0                             0x08004ffc   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_1                             0x08005000   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_2                             0x08005004   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_3                             0x08005008   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_4                             0x0800500c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_5                             0x08005010   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x08005015   Thumb Code   172  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08005014   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.20_0                            0x080050c0   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x080050c5   Thumb Code   148  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x080050c4   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.10_0                            0x08005158   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x0800515d   Thumb Code   176  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x0800515c   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.13_0                            0x0800520c   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x08005211   Thumb Code   108  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x08005210   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.8_0                             0x0800527c   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x08005281   Thumb Code   184  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x08005280   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.11_0                            0x08005338   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxThreadExit                         0x0800533d   Thumb Code    72  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x0800533c   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.53_0                            0x08005384   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadNew                          0x08005389   Thumb Code   484  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x08005388   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_0                            0x0800556c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_1                            0x08005570   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_2                            0x08005574   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_3                            0x08005578   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_4                            0x0800557c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_5                            0x08005580   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxTimerNew                           0x08005585   Thumb Code   128  rtx_timer.o(.text.svcRtxTimerNew)
    [Anonymous Symbol]                       0x08005584   Section        0  rtx_timer.o(.text.svcRtxTimerNew)
    __arm_cp.10_0                            0x08005604   Number         4  rtx_timer.o(.text.svcRtxTimerNew)
    svcRtxTimerStart                         0x08005609   Thumb Code    72  rtx_timer.o(.text.svcRtxTimerStart)
    [Anonymous Symbol]                       0x08005608   Section        0  rtx_timer.o(.text.svcRtxTimerStart)
    __arm_cp.12_0                            0x08005650   Number         4  rtx_timer.o(.text.svcRtxTimerStart)
    uart_transmit_thread                     0x08005655   Thumb Code   168  lto-llvm-e814e0.o(.text.uart_transmit_thread)
    [Anonymous Symbol]                       0x08005654   Section        0  lto-llvm-e814e0.o(.text.uart_transmit_thread)
    __arm_cp.8_0                             0x080056fc   Number         4  lto-llvm-e814e0.o(.text.uart_transmit_thread)
    __arm_cp.8_1                             0x08005700   Number         4  lto-llvm-e814e0.o(.text.uart_transmit_thread)
    __arm_cp.8_2                             0x08005704   Number         4  lto-llvm-e814e0.o(.text.uart_transmit_thread)
    __arm_cp.8_3                             0x08005708   Number         4  lto-llvm-e814e0.o(.text.uart_transmit_thread)
    __arm_cp.8_4                             0x0800570c   Number         4  lto-llvm-e814e0.o(.text.uart_transmit_thread)
    __arm_cp.8_5                             0x08005710   Number         4  lto-llvm-e814e0.o(.text.uart_transmit_thread)
    __arm_cp.8_6                             0x08005714   Number         4  lto-llvm-e814e0.o(.text.uart_transmit_thread)
    __arm_cp.8_7                             0x08005718   Number         4  lto-llvm-e814e0.o(.text.uart_transmit_thread)
    __arm_cp.8_8                             0x0800571c   Number         4  lto-llvm-e814e0.o(.text.uart_transmit_thread)
    i._feq                                   0x08005720   Section        0  fcmp.o(i._feq)
    i._fgeq                                  0x08005736   Section        0  fcmp.o(i._fgeq)
    i._fleq                                  0x0800574c   Section        0  fcmp.o(i._fleq)
    x$fpl$fadd                               0x08005768   Section      140  faddsub.o(x$fpl$fadd)
    _fadd1                                   0x08005775   Thumb Code     0  faddsub.o(x$fpl$fadd)
    x$fpl$feqf                               0x080057f4   Section       84  feqf.o(x$fpl$feqf)
    x$fpl$fgeqf                              0x08005848   Section       84  fgef.o(x$fpl$fgeqf)
    x$fpl$fleqf                              0x0800589c   Section       84  flef.o(x$fpl$fleqf)
    x$fpl$fmul                               0x080058f0   Section      176  fmul.o(x$fpl$fmul)
    x$fpl$fsub                               0x080059a0   Section      208  faddsub.o(x$fpl$fsub)
    _fsub1                                   0x080059ad   Thumb Code     0  faddsub.o(x$fpl$fsub)
    ddiv_reciptbl                            0x08005a70   Data         128  ddiv.o(.constdata)
    .constdata                               0x08005a70   Section      128  ddiv.o(.constdata)
    x$fpl$usenofp                            0x08005a70   Section        0  usenofp.o(x$fpl$usenofp)
    fdiv_tab                                 0x08005af0   Data          64  fdiv.o(.constdata)
    .constdata                               0x08005af0   Section       64  fdiv.o(.constdata)
    table                                    0x08005b30   Data         512  lto-llvm-e814e0.o(.rodata)
    [Anonymous Symbol]                       0x08005b30   Section        0  lto-llvm-e814e0.o(.rodata)
    FlagsAttr_uart_event                     0x08005d30   Data          16  lto-llvm-e814e0.o(.rodata)
    ThreadAttr_uart_transmit                 0x08005d40   Data          36  lto-llvm-e814e0.o(.rodata)
    timerAttr_soc_cb                         0x08005d64   Data          16  lto-llvm-e814e0.o(.rodata)
    ThreadAttr_app_main                      0x08005d74   Data          36  lto-llvm-e814e0.o(.rodata)
    _DoInit._aInitStr                        0x08005d98   Data          17  lto-llvm-e814e0.o(.rodata)
    USART_PRESCALER_TAB                      0x08005dac   Data          48  lto-llvm-e814e0.o(.rodata)
    AHBPrescTable                            0x08005ddc   Data          64  lto-llvm-e814e0.o(.rodata)
    os_idle_thread_attr                      0x08005e1c   Data          36  lto-llvm-e814e0.o(.rodata)
    os_timer_thread_attr                     0x08005e40   Data          36  lto-llvm-e814e0.o(.rodata)
    os_timer_mq_attr                         0x08005e64   Data          24  lto-llvm-e814e0.o(.rodata)
    __tagsym$$used.4                         0x08005e80   Number         0  lto-llvm-e814e0.o(.rodata)
    __tagsym$$used.5                         0x08005ef0   Number         0  lto-llvm-e814e0.o(.rodata)
    _PrintUnsigned._aV2C                     0x08005f28   Data          16  lto-llvm-e814e0.o(.rodata.cst16)
    [Anonymous Symbol]                       0x08005f28   Section        0  lto-llvm-e814e0.o(.rodata.cst16)
    APBPrescTable                            0x08005f38   Data          32  lto-llvm-e814e0.o(.rodata.cst32)
    [Anonymous Symbol]                       0x08005f38   Section        0  lto-llvm-e814e0.o(.rodata.cst32)
    [Anonymous Symbol]                       0x08005f58   Section        0  lto-llvm-e814e0.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08006068   Section        0  rtx_kernel.o(.rodata.str1.4)
    uart_data                                0x20000000   Data          65  lto-llvm-e814e0.o(.data)
    [Anonymous Symbol]                       0x20000000   Section        0  lto-llvm-e814e0.o(.data)
    uart_mutex_attr                          0x20000044   Data          16  lto-llvm-e814e0.o(.data)
    uart_state                               0x20000054   Data           1  lto-llvm-e814e0.o(.data)
    .bss                                     0x20000100   Section       96  libspace.o(.bss)
    Voltage_queue                            0x20000160   Data         260  lto-llvm-e814e0.o(.bss)
    [Anonymous Symbol]                       0x20000160   Section        0  lto-llvm-e814e0.o(.bss)
    Current_queue                            0x20000264   Data         260  lto-llvm-e814e0.o(.bss)
    Power_queue                              0x20000368   Data         260  lto-llvm-e814e0.o(.bss)
    Temperature_queue                        0x2000046c   Data         260  lto-llvm-e814e0.o(.bss)
    uart_recv_cmd                            0x20000570   Data           4  lto-llvm-e814e0.o(.bss)
    time_past                                0x20000574   Data           4  lto-llvm-e814e0.o(.bss)
    MCU_VCC                                  0x20000578   Data           4  lto-llvm-e814e0.o(.bss)
    mAh                                      0x2000057c   Data           4  lto-llvm-e814e0.o(.bss)
    mWh                                      0x20000580   Data           4  lto-llvm-e814e0.o(.bss)
    i2c_last_tick                            0x20000584   Data           4  lto-llvm-e814e0.o(.bss)
    uart_transmit_ID                         0x20000588   Data           4  lto-llvm-e814e0.o(.bss)
    timer0                                   0x2000058c   Data           4  lto-llvm-e814e0.o(.bss)
    app_main_ID                              0x20000590   Data           4  lto-llvm-e814e0.o(.bss)
    ina226_info.0                            0x20000594   Data           4  lto-llvm-e814e0.o(.bss)
    ina226_info.1                            0x20000598   Data           4  lto-llvm-e814e0.o(.bss)
    ina226_info.2                            0x2000059c   Data           4  lto-llvm-e814e0.o(.bss)
    _SEGGER_RTT                              0x200005a0   Data         168  lto-llvm-e814e0.o(.bss)
    _acUpBuffer                              0x20000648   Data         512  lto-llvm-e814e0.o(.bss)
    _acDownBuffer                            0x20000848   Data          16  lto-llvm-e814e0.o(.bss)
    uart_mutexId                             0x20000858   Data           4  lto-llvm-e814e0.o(.bss)
    uart_rcv_count                           0x2000085c   Data           1  lto-llvm-e814e0.o(.bss)
    uart_rcv_buf                             0x2000085d   Data          48  lto-llvm-e814e0.o(.bss)
    uart_rcv_len                             0x2000088d   Data           1  lto-llvm-e814e0.o(.bss)
    uart_cmd_type                            0x2000088e   Data           1  lto-llvm-e814e0.o(.bss)
    uart_event_flagID                        0x20000890   Data           4  lto-llvm-e814e0.o(.bss)
    os_kernel_is_active.os_kernel_active     0x20000894   Data           1  lto-llvm-e814e0.o(.bss)
    PendST                                   0x20000895   Data           1  os_systick.o(.bss.os)
    [Anonymous Symbol]                       0x20000895   Section        0  os_systick.o(.bss.os)
    os_isr_queue                             0x20000898   Data          16  lto-llvm-e814e0.o(.bss.os)
    [Anonymous Symbol]                       0x20000898   Section        0  lto-llvm-e814e0.o(.bss.os)
    os_mem                                   0x200008a8   Data        3072  lto-llvm-e814e0.o(.bss.os)
    os_timer_mq_cb                           0x200014a8   Data          52  lto-llvm-e814e0.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x200014a8   Section        0  lto-llvm-e814e0.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x200014dc   Data          20  lto-llvm-e814e0.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x200014dc   Section        0  lto-llvm-e814e0.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x200014f0   Data          68  lto-llvm-e814e0.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x200014f0   Section        0  lto-llvm-e814e0.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20001534   Data          68  lto-llvm-e814e0.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x20001578   Data         256  lto-llvm-e814e0.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x20001578   Section        0  lto-llvm-e814e0.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0x20001678   Data         512  lto-llvm-e814e0.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x20001678   Section        0  lto-llvm-e814e0.o(.bss.os.thread.timer.stack)
    Heap_Mem                                 0x20001878   Data         512  startup_stm32g030xx.o(HEAP)
    HEAP                                     0x20001878   Section      512  startup_stm32g030xx.o(HEAP)
    Stack_Mem                                0x20001a78   Data        1024  startup_stm32g030xx.o(STACK)
    STACK                                    0x20001a78   Section     1024  startup_stm32g030xx.o(STACK)
    __initial_sp                             0x20001e78   Data           0  startup_stm32g030xx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$IEEEF$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000c0   Number         0  startup_stm32g030xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32g030xx.o(RESET)
    __Vectors_End                            0x080000c0   Data           0  startup_stm32g030xx.o(RESET)
    __main                                   0x080000c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000c9   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080000d9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000105   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x08000121   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0800013d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_1                       0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x08000141   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000145   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000145   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000145   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0800014b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x08000153   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x08000157   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000157   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800015f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000161   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000161   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000165   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_memcpy4                          0x0800016d   Thumb Code    56  rt_memcpy.o(.emb_text)
    __aeabi_memcpy8                          0x0800016d   Thumb Code     0  rt_memcpy.o(.emb_text)
    Reset_Handler                            0x080001a5   Thumb Code     8  startup_stm32g030xx.o(.text)
    ADC1_IRQHandler                          0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    DMA1_Ch4_5_DMAMUX1_OVR_IRQHandler        0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    DMA1_Channel1_IRQHandler                 0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    DMA1_Channel2_3_IRQHandler               0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    EXTI0_1_IRQHandler                       0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    EXTI2_3_IRQHandler                       0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    EXTI4_15_IRQHandler                      0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    FLASH_IRQHandler                         0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    I2C1_IRQHandler                          0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    I2C2_IRQHandler                          0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    RCC_IRQHandler                           0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    RTC_TAMP_IRQHandler                      0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    SPI1_IRQHandler                          0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    SPI2_IRQHandler                          0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    TIM14_IRQHandler                         0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    TIM16_IRQHandler                         0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    TIM17_IRQHandler                         0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    TIM1_BRK_UP_TRG_COM_IRQHandler           0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    TIM1_CC_IRQHandler                       0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    TIM3_IRQHandler                          0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    USART1_IRQHandler                        0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    WWDG_IRQHandler                          0x080001b7   Thumb Code     0  startup_stm32g030xx.o(.text)
    __user_initial_stackheap                 0x080001b9   Thumb Code     0  startup_stm32g030xx.o(.text)
    SVC_Handler                              0x080001dd   Thumb Code   132  irq_armv6m.o(.text)
    PendSV_Handler                           0x08000261   Thumb Code    12  irq_armv6m.o(.text)
    SysTick_Handler                          0x0800026d   Thumb Code    12  irq_armv6m.o(.text)
    abs                                      0x08000281   Thumb Code     8  abs.o(.text)
    __aeabi_memcpy                           0x08000289   Thumb Code   130  rt_memcpy.o(.text)
    __rt_memcpy                              0x08000289   Thumb Code     0  rt_memcpy.o(.text)
    _memset_w                                0x0800030b   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x08000325   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x08000343   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x08000343   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x08000347   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x08000347   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x08000347   Thumb Code     4  rt_memclr.o(.text)
    __aeabi_uidiv                            0x0800034d   Thumb Code     0  aeabi_sdiv.o(.text)
    __aeabi_uidivmod                         0x0800034d   Thumb Code    20  aeabi_sdiv.o(.text)
    __aeabi_idiv                             0x08000361   Thumb Code     0  aeabi_sdiv.o(.text)
    __aeabi_idivmod                          0x08000361   Thumb Code   338  aeabi_sdiv.o(.text)
    __use_two_region_memory                  0x080004b9   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x080004bb   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x080004bd   Thumb Code     2  heapauxi.o(.text)
    __user_setup_stackheap                   0x080004bf   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x080004fd   Thumb Code    16  exit.o(.text)
    __user_libspace                          0x0800050d   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x0800050d   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x08000515   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08000521   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000521   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08000523   Thumb Code     0  indicate_semi.o(.text)
    __aeabi_d2f                              0x08000525   Thumb Code     0  d2f.o(.text)
    _d2f                                     0x08000525   Thumb Code   120  d2f.o(.text)
    __aeabi_ddiv                             0x080005a1   Thumb Code     0  ddiv.o(.text)
    _ddiv                                    0x080005a1   Thumb Code  1072  ddiv.o(.text)
    _drdiv                                   0x080009d1   Thumb Code    20  ddiv.o(.text)
    __aeabi_dmul                             0x080009e9   Thumb Code     0  dmul.o(.text)
    _dmul                                    0x080009e9   Thumb Code   558  dmul.o(.text)
    __aeabi_f2d                              0x08000c31   Thumb Code     0  f2d.o(.text)
    _f2d                                     0x08000c31   Thumb Code    80  f2d.o(.text)
    __aeabi_fdiv                             0x08000c85   Thumb Code     0  fdiv.o(.text)
    _fdiv                                    0x08000c85   Thumb Code   334  fdiv.o(.text)
    _frdiv                                   0x08000dd3   Thumb Code     8  fdiv.o(.text)
    __aeabi_f2iz                             0x08000de5   Thumb Code     0  ffixi.o(.text)
    _ffix                                    0x08000de5   Thumb Code    76  ffixi.o(.text)
    __aeabi_i2f_normalise                    0x08000e31   Thumb Code    72  fflti.o(.text)
    __aeabi_i2f                              0x08000e79   Thumb Code    16  fflti.o(.text)
    _fflt                                    0x08000e79   Thumb Code     0  fflti.o(.text)
    __aeabi_ui2f                             0x08000e89   Thumb Code     6  fflti.o(.text)
    _ffltu                                   0x08000e89   Thumb Code     0  fflti.o(.text)
    __fpl_fcmp_InfNaN                        0x08000e91   Thumb Code    96  fcmpin.o(.text)
    __fpl_cmpreturn                          0x08000ef5   Thumb Code    46  cmpret.o(.text)
    __fpl_fcheck_NaN2                        0x08000f25   Thumb Code    10  fnan2.o(.text)
    __fpl_return_NaN                         0x08000f35   Thumb Code    94  retnan.o(.text)
    HardFault_Handler                        0x080011ef   Thumb Code     4  lto-llvm-e814e0.o(.text.HardFault_Handler)
    NMI_Handler                              0x0800265f   Thumb Code     4  lto-llvm-e814e0.o(.text.NMI_Handler)
    OS_Tick_AcknowledgeIRQ                   0x08002665   Thumb Code     8  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x0800266d   Thumb Code    32  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x08002695   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x0800269d   Thumb Code    60  os_systick.o(.text.OS_Tick_Setup)
    SystemInit                               0x08002ee3   Thumb Code     2  lto-llvm-e814e0.o(.text.SystemInit)
    USART2_IRQHandler                        0x08003115   Thumb Code   368  lto-llvm-e814e0.o(.text.USART2_IRQHandler)
    _mutex_acquire                           0x08003965   Thumb Code    34  lto-llvm-e814e0.o(.text._mutex_acquire)
    _mutex_free                              0x08003987   Thumb Code    18  lto-llvm-e814e0.o(.text._mutex_free)
    _mutex_initialize                        0x08003999   Thumb Code    52  lto-llvm-e814e0.o(.text._mutex_initialize)
    _mutex_release                           0x080039cd   Thumb Code    30  lto-llvm-e814e0.o(.text._mutex_release)
    _platform_post_stackheap_init            0x080039eb   Thumb Code     8  lto-llvm-e814e0.o(.text._platform_post_stackheap_init)
    main                                     0x08003c29   Thumb Code    84  lto-llvm-e814e0.o(.text.main)
    osDelay                                  0x08003c89   Thumb Code    36  rtx_delay.o(.text.osDelay)
    osEventFlagsClear                        0x08003cb1   Thumb Code    32  rtx_evflags.o(.text.osEventFlagsClear)
    osEventFlagsNew                          0x08003cd5   Thumb Code    32  rtx_evflags.o(.text.osEventFlagsNew)
    osEventFlagsSet                          0x08003cf9   Thumb Code    72  rtx_evflags.o(.text.osEventFlagsSet)
    osEventFlagsWait                         0x08003d45   Thumb Code    64  rtx_evflags.o(.text.osEventFlagsWait)
    osKernelGetState                         0x08003d89   Thumb Code    40  rtx_kernel.o(.text.osKernelGetState)
    osKernelGetTickCount                     0x08003db5   Thumb Code    32  rtx_kernel.o(.text.osKernelGetTickCount)
    osKernelInitialize                       0x08003ddd   Thumb Code    36  rtx_kernel.o(.text.osKernelInitialize)
    osKernelLock                             0x08003e05   Thumb Code    32  rtx_kernel.o(.text.osKernelLock)
    osKernelStart                            0x08003e29   Thumb Code    32  rtx_kernel.o(.text.osKernelStart)
    osKernelUnlock                           0x08003e4d   Thumb Code    32  rtx_kernel.o(.text.osKernelUnlock)
    osMessageQueueGet                        0x08003e71   Thumb Code   112  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueuePut                        0x08003ee5   Thumb Code   112  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x08003f59   Thumb Code    36  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x08003f81   Thumb Code    36  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x08003fa9   Thumb Code    32  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x08003fcd   Thumb Code    36  rtx_mutex.o(.text.osMutexRelease)
    osRtxErrorNotify                         0x08003ff5   Thumb Code    46  lto-llvm-e814e0.o(.text.osRtxErrorNotify)
    osRtxIdleThread                          0x08004057   Thumb Code     8  lto-llvm-e814e0.o(.text.osRtxIdleThread)
    osRtxKernelErrorNotify                   0x0800405f   Thumb Code     8  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxKernelPreInit                       0x08004067   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x08004069   Thumb Code   120  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x080040e1   Thumb Code    78  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x0800412f   Thumb Code    46  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x0800415d   Thumb Code    42  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x08004187   Thumb Code    54  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x080041bd   Thumb Code    60  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x080042b5   Thumb Code    32  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexOwnerRelease                   0x080042d9   Thumb Code    68  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x0800431d   Thumb Code    70  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x08004365   Thumb Code   128  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x080043e5   Thumb Code   104  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x08004555   Thumb Code    84  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x080045d1   Thumb Code    76  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x08004691   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x080046a5   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x080046d1   Thumb Code    24  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x080046e9   Thumb Code    36  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x08004735   Thumb Code    20  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x08004749   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStartup                       0x08004751   Thumb Code    56  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x08004791   Thumb Code    12  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x080047a1   Thumb Code    60  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x080047e1   Thumb Code    34  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08004805   Thumb Code   124  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerSetup                          0x08004885   Thumb Code    28  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x080048a9   Thumb Code    28  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x08004939   Thumb Code     8  rtx_thread.o(.text.osThreadExit)
    osThreadNew                              0x08004945   Thumb Code    32  rtx_thread.o(.text.osThreadNew)
    osTimerNew                               0x08004969   Thumb Code    32  rtx_timer.o(.text.osTimerNew)
    osTimerStart                             0x0800498d   Thumb Code    36  rtx_timer.o(.text.osTimerStart)
    __aeabi_fcmpeq                           0x08005721   Thumb Code     0  fcmp.o(i._feq)
    _feq                                     0x08005721   Thumb Code    22  fcmp.o(i._feq)
    __aeabi_fcmpge                           0x08005737   Thumb Code     0  fcmp.o(i._fgeq)
    _fgeq                                    0x08005737   Thumb Code    22  fcmp.o(i._fgeq)
    __aeabi_fcmple                           0x0800574d   Thumb Code     0  fcmp.o(i._fleq)
    _fleq                                    0x0800574d   Thumb Code    26  fcmp.o(i._fleq)
    __aeabi_fadd                             0x08005769   Thumb Code     0  faddsub.o(x$fpl$fadd)
    _fadd                                    0x08005769   Thumb Code   134  faddsub.o(x$fpl$fadd)
    __aeabi_cfcmpeq                          0x080057f5   Thumb Code     0  feqf.o(x$fpl$feqf)
    _fcmpeq                                  0x080057f5   Thumb Code    78  feqf.o(x$fpl$feqf)
    _fcmpge                                  0x08005849   Thumb Code    78  fgef.o(x$fpl$fgeqf)
    __aeabi_cfcmple                          0x0800589d   Thumb Code     0  flef.o(x$fpl$fleqf)
    _fcmple                                  0x0800589d   Thumb Code    78  flef.o(x$fpl$fleqf)
    __aeabi_fmul                             0x080058f1   Thumb Code     0  fmul.o(x$fpl$fmul)
    _fmul                                    0x080058f1   Thumb Code   172  fmul.o(x$fpl$fmul)
    __aeabi_fsub                             0x080059a1   Thumb Code     0  faddsub.o(x$fpl$fsub)
    _fsub                                    0x080059a1   Thumb Code   204  faddsub.o(x$fpl$fsub)
    __I$use$fp                               0x08005a70   Number         0  usenofp.o(x$fpl$usenofp)
    osRtxUserSVC                             0x08005e7c   Data           4  lto-llvm-e814e0.o(.rodata)
    osRtxConfig                              0x08005e80   Data         112  lto-llvm-e814e0.o(.rodata)
    os_cb_sections                           0x08005ef0   Data          56  lto-llvm-e814e0.o(.rodata)
    Region$$Table$$Base                      0x08006074   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08006094   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000058   Data           4  lto-llvm-e814e0.o(.data)
    osRtxInfo                                0x2000005c   Data         164  rtx_kernel.o(.data.os)
    __libspace_start                         0x20000100   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000160   Data           0  libspace.o(.bss)
    .bss.os.msgqueue.cb$$Base                0x200014a8   Number         0  lto-llvm-e814e0.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x200014dc   Number         0  lto-llvm-e814e0.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200014f0   Number         0  lto-llvm-e814e0.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x20001578   Number         0  lto-llvm-e814e0.o(.bss.os.thread.cb)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000c1

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00006198, Max: 0x00008000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00006094, Max: 0x00008000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000c0   Data   RO            3    RESET               startup_stm32g030xx.o
    0x080000c0   0x080000c0   0x00000008   Code   RO          555  * !!!main             c_p.l(__main.o)
    0x080000c8   0x080000c8   0x0000003c   Code   RO         1130    !!!scatter          c_p.l(__scatter.o)
    0x08000104   0x08000104   0x0000001a   Code   RO         1132    !!handler_copy      c_p.l(__scatter_copy.o)
    0x0800011e   0x0800011e   0x00000002   PAD
    0x08000120   0x08000120   0x0000001c   Code   RO         1134    !!handler_zi        c_p.l(__scatter_zi.o)
    0x0800013c   0x0800013c   0x00000002   Code   RO          591    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          605    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          607    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          609    .ARM.Collect$$libinit$$00000006  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          612    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          614    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          616    .ARM.Collect$$libinit$$00000010  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          619    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          621    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          623    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          625    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          627    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          629    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          631    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          633    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          635    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          637    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          639    .ARM.Collect$$libinit$$00000027  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          643    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          645    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          647    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO          649    .ARM.Collect$$libinit$$00000034  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000002   Code   RO          650    .ARM.Collect$$libinit$$00000035  c_p.l(libinit2.o)
    0x08000140   0x08000140   0x00000002   Code   RO          685    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x08000142   0x08000142   0x00000000   Code   RO          713    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x08000142   0x08000142   0x00000000   Code   RO          715    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x08000142   0x08000142   0x00000000   Code   RO          718    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x08000142   0x08000142   0x00000000   Code   RO          721    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x08000142   0x08000142   0x00000000   Code   RO          723    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x08000142   0x08000142   0x00000000   Code   RO          726    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x08000142   0x08000142   0x00000002   Code   RO          727    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x08000144   0x08000144   0x00000000   Code   RO          557    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x08000144   0x08000144   0x00000000   Code   RO          563    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x08000144   0x08000144   0x00000006   Code   RO          575    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x0800014a   0x0800014a   0x00000008   Code   RO          564    .ARM.Collect$$rtentry$$00000008  c_p.l(__rtentry2.o)
    0x08000152   0x08000152   0x00000004   Code   RO          566    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x08000156   0x08000156   0x00000000   Code   RO          568    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x08000156   0x08000156   0x00000008   Code   RO          569    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x0800015e   0x0800015e   0x00000002   Code   RO          596    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x08000160   0x08000160   0x00000000   Code   RO          656    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x08000160   0x08000160   0x00000004   Code   RO          657    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x08000164   0x08000164   0x00000006   Code   RO          658    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x0800016a   0x0800016a   0x00000002   PAD
    0x0800016c   0x0800016c   0x00000038   Code   RO          543    .emb_text           c_p.l(rt_memcpy.o)
    0x080001a4   0x080001a4   0x00000038   Code   RO            4    .text               startup_stm32g030xx.o
    0x080001dc   0x080001dc   0x000000a4   Code   RO          365    .text               RTX_CM0.lib(irq_armv6m.o)
    0x08000280   0x08000280   0x00000008   Code   RO          539    .text               c_p.l(abs.o)
    0x08000288   0x08000288   0x00000082   Code   RO          544    .text               c_p.l(rt_memcpy.o)
    0x0800030a   0x0800030a   0x00000040   Code   RO          547    .text               c_p.l(rt_memclr.o)
    0x0800034a   0x0800034a   0x00000002   PAD
    0x0800034c   0x0800034c   0x0000016c   Code   RO          549    .text               c_p.l(aeabi_sdiv.o)
    0x080004b8   0x080004b8   0x00000006   Code   RO          553    .text               c_p.l(heapauxi.o)
    0x080004be   0x080004be   0x0000003e   Code   RO          579    .text               c_p.l(sys_stackheap_outer.o)
    0x080004fc   0x080004fc   0x00000010   Code   RO          582    .text               c_p.l(exit.o)
    0x0800050c   0x0800050c   0x00000008   Code   RO          592    .text               c_p.l(libspace.o)
    0x08000514   0x08000514   0x0000000c   Code   RO          651    .text               c_p.l(sys_exit.o)
    0x08000520   0x08000520   0x00000002   Code   RO          674    .text               c_p.l(use_no_semi.o)
    0x08000522   0x08000522   0x00000000   Code   RO          676    .text               c_p.l(indicate_semi.o)
    0x08000522   0x08000522   0x00000002   PAD
    0x08000524   0x08000524   0x0000007c   Code   RO         1077    .text               fz_ps.l(d2f.o)
    0x080005a0   0x080005a0   0x00000448   Code   RO         1079    .text               fz_ps.l(ddiv.o)
    0x080009e8   0x080009e8   0x00000248   Code   RO         1082    .text               fz_ps.l(dmul.o)
    0x08000c30   0x08000c30   0x00000054   Code   RO         1084    .text               fz_ps.l(f2d.o)
    0x08000c84   0x08000c84   0x00000160   Code   RO         1104    .text               fz_ps.l(fdiv.o)
    0x08000de4   0x08000de4   0x0000004c   Code   RO         1107    .text               fz_ps.l(ffixi.o)
    0x08000e30   0x08000e30   0x0000005e   Code   RO         1109    .text               fz_ps.l(fflti.o)
    0x08000e8e   0x08000e8e   0x00000002   PAD
    0x08000e90   0x08000e90   0x00000064   Code   RO         1120    .text               fz_ps.l(fcmpin.o)
    0x08000ef4   0x08000ef4   0x0000002e   Code   RO         1122    .text               fz_ps.l(cmpret.o)
    0x08000f22   0x08000f22   0x00000002   PAD
    0x08000f24   0x08000f24   0x00000010   Code   RO         1124    .text               fz_ps.l(fnan2.o)
    0x08000f34   0x08000f34   0x0000005e   Code   RO         1126    .text               fz_ps.l(retnan.o)
    0x08000f92   0x08000f92   0x00000002   PAD
    0x08000f94   0x08000f94   0x00000070   Code   RO          729    .text.ADC_Read_Voltage  lto-llvm-e814e0.o
    0x08001004   0x08001004   0x000000ac   Code   RO          743    .text.ADC_Update    lto-llvm-e814e0.o
    0x080010b0   0x080010b0   0x000000f4   Code   RO          933    .text.Countqueue    lto-llvm-e814e0.o
    0x080011a4   0x080011a4   0x0000004a   Code   RO          312    .text.EventFlagsCheck  RTX_CM0.lib(rtx_evflags.o)
    0x080011ee   0x080011ee   0x00000004   Code   RO          851    .text.HardFault_Handler  lto-llvm-e814e0.o
    0x080011f2   0x080011f2   0x00000024   Code   RO          853    .text.I2C_Delay     lto-llvm-e814e0.o
    0x08001216   0x08001216   0x0000002c   Code   RO          863    .text.I2C_RecvACK   lto-llvm-e814e0.o
    0x08001242   0x08001242   0x00000060   Code   RO          865    .text.I2C_RecvData  lto-llvm-e814e0.o
    0x080012a2   0x080012a2   0x00000034   Code   RO          867    .text.I2C_SendACK   lto-llvm-e814e0.o
    0x080012d6   0x080012d6   0x00000072   Code   RO          861    .text.I2C_SendData  lto-llvm-e814e0.o
    0x08001348   0x08001348   0x0000002c   Code   RO          869    .text.I2C_SendNAK   lto-llvm-e814e0.o
    0x08001374   0x08001374   0x0000002a   Code   RO          859    .text.I2C_Start     lto-llvm-e814e0.o
    0x0800139e   0x0800139e   0x00000022   Code   RO          871    .text.I2C_Stop      lto-llvm-e814e0.o
    0x080013c0   0x080013c0   0x0000006c   Code   RO          881    .text.INA226_Init   lto-llvm-e814e0.o
    0x0800142c   0x0800142c   0x0000005c   Code   RO          883    .text.INA226_Read_2Byte  lto-llvm-e814e0.o
    0x08001488   0x08001488   0x00000068   Code   RO          891    .text.INA226_Read_Current  lto-llvm-e814e0.o
    0x080014f0   0x080014f0   0x00000060   Code   RO          889    .text.INA226_Read_Voltage  lto-llvm-e814e0.o
    0x08001550   0x08001550   0x00000038   Code   RO          887    .text.INA226_Update  lto-llvm-e814e0.o
    0x08001588   0x08001588   0x00000040   Code   RO          885    .text.INA226_Write_2Byte  lto-llvm-e814e0.o
    0x080015c8   0x080015c8   0x00000014   Code   RO          805    .text.LL_ADC_ClearFlag_CCRDY  lto-llvm-e814e0.o
    0x080015dc   0x080015dc   0x0000000e   Code   RO          737    .text.LL_ADC_ClearFlag_EOC  lto-llvm-e814e0.o
    0x080015ea   0x080015ea   0x00000002   PAD
    0x080015ec   0x080015ec   0x00000014   Code   RO          815    .text.LL_ADC_DisableIT_EOC  lto-llvm-e814e0.o
    0x08001600   0x08001600   0x00000014   Code   RO          817    .text.LL_ADC_DisableIT_EOS  lto-llvm-e814e0.o
    0x08001614   0x08001614   0x00000018   Code   RO          731    .text.LL_ADC_Enable  lto-llvm-e814e0.o
    0x0800162c   0x0800162c   0x0000001c   Code   RO          819    .text.LL_ADC_EnableInternalRegulator  lto-llvm-e814e0.o
    0x08001648   0x08001648   0x0000005c   Code   RO          961    .text.LL_ADC_Init   lto-llvm-e814e0.o
    0x080016a4   0x080016a4   0x00000010   Code   RO          733    .text.LL_ADC_IsActiveFlag_ADRDY  lto-llvm-e814e0.o
    0x080016b4   0x080016b4   0x00000018   Code   RO          803    .text.LL_ADC_IsActiveFlag_CCRDY  lto-llvm-e814e0.o
    0x080016cc   0x080016cc   0x00000012   Code   RO          735    .text.LL_ADC_IsActiveFlag_EOC  lto-llvm-e814e0.o
    0x080016de   0x080016de   0x00000002   PAD
    0x080016e0   0x080016e0   0x00000018   Code   RO          827    .text.LL_ADC_IsCalibrationOnGoing  lto-llvm-e814e0.o
    0x080016f8   0x080016f8   0x00000010   Code   RO          959    .text.LL_ADC_IsEnabled  lto-llvm-e814e0.o
    0x08001708   0x08001708   0x00000012   Code   RO          965    .text.LL_ADC_REG_GetSequencerConfigurable  lto-llvm-e814e0.o
    0x0800171a   0x0800171a   0x00000002   PAD
    0x0800171c   0x0800171c   0x000000c8   Code   RO          963    .text.LL_ADC_REG_Init  lto-llvm-e814e0.o
    0x080017e4   0x080017e4   0x0000000e   Code   RO          741    .text.LL_ADC_REG_ReadConversionData12  lto-llvm-e814e0.o
    0x080017f2   0x080017f2   0x00000002   PAD
    0x080017f4   0x080017f4   0x00000020   Code   RO          801    .text.LL_ADC_REG_SetSequencerConfigurable  lto-llvm-e814e0.o
    0x08001814   0x08001814   0x00000014   Code   RO          967    .text.LL_ADC_REG_SetSequencerLength  lto-llvm-e814e0.o
    0x08001828   0x08001828   0x00000030   Code   RO          821    .text.LL_ADC_REG_SetSequencerRanks  lto-llvm-e814e0.o
    0x08001858   0x08001858   0x0000001c   Code   RO          739    .text.LL_ADC_REG_StartConversion  lto-llvm-e814e0.o
    0x08001874   0x08001874   0x0000002c   Code   RO          823    .text.LL_ADC_SetChannelSamplingTime  lto-llvm-e814e0.o
    0x080018a0   0x080018a0   0x00000028   Code   RO          811    .text.LL_ADC_SetCommonPathInternalCh  lto-llvm-e814e0.o
    0x080018c8   0x080018c8   0x00000020   Code   RO          807    .text.LL_ADC_SetOverSamplingScope  lto-llvm-e814e0.o
    0x080018e8   0x080018e8   0x00000028   Code   RO          813    .text.LL_ADC_SetSamplingTimeCommonChannels  lto-llvm-e814e0.o
    0x08001910   0x08001910   0x00000020   Code   RO          809    .text.LL_ADC_SetTriggerFrequencyMode  lto-llvm-e814e0.o
    0x08001930   0x08001930   0x00000020   Code   RO          825    .text.LL_ADC_StartCalibration  lto-llvm-e814e0.o
    0x08001950   0x08001950   0x00000020   Code   RO          761    .text.LL_APB1_GRP1_EnableClock  lto-llvm-e814e0.o
    0x08001970   0x08001970   0x00000020   Code   RO          759    .text.LL_APB2_GRP1_EnableClock  lto-llvm-e814e0.o
    0x08001990   0x08001990   0x000000ba   Code   RO          945    .text.LL_GPIO_Init  lto-llvm-e814e0.o
    0x08001a4a   0x08001a4a   0x00000020   Code   RO          877    .text.LL_GPIO_IsInputPinSet  lto-llvm-e814e0.o
    0x08001a6a   0x08001a6a   0x00000014   Code   RO          829    .text.LL_GPIO_ResetOutputPin  lto-llvm-e814e0.o
    0x08001a7e   0x08001a7e   0x00000014   Code   RO          873    .text.LL_GPIO_ResetOutputPin.10  lto-llvm-e814e0.o
    0x08001a92   0x08001a92   0x0000002c   Code   RO          953    .text.LL_GPIO_SetAFPin_0_7  lto-llvm-e814e0.o
    0x08001abe   0x08001abe   0x0000002e   Code   RO          955    .text.LL_GPIO_SetAFPin_8_15  lto-llvm-e814e0.o
    0x08001aec   0x08001aec   0x00000014   Code   RO          875    .text.LL_GPIO_SetOutputPin  lto-llvm-e814e0.o
    0x08001b00   0x08001b00   0x00000024   Code   RO          957    .text.LL_GPIO_SetPinMode  lto-llvm-e814e0.o
    0x08001b24   0x08001b24   0x0000001e   Code   RO          949    .text.LL_GPIO_SetPinOutputType  lto-llvm-e814e0.o
    0x08001b42   0x08001b42   0x00000024   Code   RO          951    .text.LL_GPIO_SetPinPull  lto-llvm-e814e0.o
    0x08001b66   0x08001b66   0x00000024   Code   RO          947    .text.LL_GPIO_SetPinSpeed  lto-llvm-e814e0.o
    0x08001b8a   0x08001b8a   0x00000002   PAD
    0x08001b8c   0x08001b8c   0x00000024   Code   RO          773    .text.LL_IOP_GRP1_EnableClock  lto-llvm-e814e0.o
    0x08001bb0   0x08001bb0   0x00000014   Code   RO          937    .text.LL_Init1msTick  lto-llvm-e814e0.o
    0x08001bc4   0x08001bc4   0x00000038   Code   RO          939    .text.LL_InitTick   lto-llvm-e814e0.o
    0x08001bfc   0x08001bfc   0x00000014   Code   RO          839    .text.LL_PWR_EnableBkUpAccess  lto-llvm-e814e0.o
    0x08001c10   0x08001c10   0x00000010   Code   RO          799    .text.LL_RCC_EnableRTC  lto-llvm-e814e0.o
    0x08001c20   0x08001c20   0x00000010   Code   RO          793    .text.LL_RCC_ForceBackupDomainReset  lto-llvm-e814e0.o
    0x08001c30   0x08001c30   0x0000000c   Code   RO          981    .text.LL_RCC_GetAHBPrescaler  lto-llvm-e814e0.o
    0x08001c3c   0x08001c3c   0x0000000c   Code   RO          979    .text.LL_RCC_GetAPB1Prescaler  lto-llvm-e814e0.o
    0x08001c48   0x08001c48   0x0000000c   Code   RO          791    .text.LL_RCC_GetRTCClockSource  lto-llvm-e814e0.o
    0x08001c54   0x08001c54   0x0000000c   Code   RO          845    .text.LL_RCC_GetSysClkSource  lto-llvm-e814e0.o
    0x08001c60   0x08001c60   0x0000000c   Code   RO          983    .text.LL_RCC_GetSysClkSource.58  lto-llvm-e814e0.o
    0x08001c6c   0x08001c6c   0x0000002a   Code   RO          971    .text.LL_RCC_GetSystemClocksFreq  lto-llvm-e814e0.o
    0x08001c96   0x08001c96   0x00000002   PAD
    0x08001c98   0x08001c98   0x00000084   Code   RO          995    .text.LL_RCC_GetUSARTClockFreq  lto-llvm-e814e0.o
    0x08001d1c   0x08001d1c   0x00000018   Code   RO          997    .text.LL_RCC_GetUSARTClockSource  lto-llvm-e814e0.o
    0x08001d34   0x08001d34   0x00000010   Code   RO          831    .text.LL_RCC_HSI_Enable  lto-llvm-e814e0.o
    0x08001d44   0x08001d44   0x00000010   Code   RO          833    .text.LL_RCC_HSI_IsReady  lto-llvm-e814e0.o
    0x08001d54   0x08001d54   0x00000014   Code   RO          969    .text.LL_RCC_HSI_IsReady.55  lto-llvm-e814e0.o
    0x08001d68   0x08001d68   0x0000000c   Code   RO          999    .text.LL_RCC_LSE_IsReady  lto-llvm-e814e0.o
    0x08001d74   0x08001d74   0x0000000c   Code   RO          835    .text.LL_RCC_LSI_Enable  lto-llvm-e814e0.o
    0x08001d80   0x08001d80   0x00000010   Code   RO          837    .text.LL_RCC_LSI_IsReady  lto-llvm-e814e0.o
    0x08001d90   0x08001d90   0x0000000c   Code   RO          991    .text.LL_RCC_PLL_GetDivider  lto-llvm-e814e0.o
    0x08001d9c   0x08001d9c   0x0000000c   Code   RO          987    .text.LL_RCC_PLL_GetMainSource  lto-llvm-e814e0.o
    0x08001da8   0x08001da8   0x00000010   Code   RO          989    .text.LL_RCC_PLL_GetN  lto-llvm-e814e0.o
    0x08001db8   0x08001db8   0x00000010   Code   RO          993    .text.LL_RCC_PLL_GetR  lto-llvm-e814e0.o
    0x08001dc8   0x08001dc8   0x00000010   Code   RO          795    .text.LL_RCC_ReleaseBackupDomainReset  lto-llvm-e814e0.o
    0x08001dd8   0x08001dd8   0x0000001c   Code   RO          841    .text.LL_RCC_SetAHBPrescaler  lto-llvm-e814e0.o
    0x08001df4   0x08001df4   0x0000001c   Code   RO          847    .text.LL_RCC_SetAPB1Prescaler  lto-llvm-e814e0.o
    0x08001e10   0x08001e10   0x00000020   Code   RO          797    .text.LL_RCC_SetRTCClockSource  lto-llvm-e814e0.o
    0x08001e30   0x08001e30   0x0000001c   Code   RO          843    .text.LL_RCC_SetSysClkSource  lto-llvm-e814e0.o
    0x08001e4c   0x08001e4c   0x00000010   Code   RO         1005    .text.LL_RTC_DisableInitMode  lto-llvm-e814e0.o
    0x08001e5c   0x08001e5c   0x00000014   Code   RO         1001    .text.LL_RTC_DisableWriteProtection  lto-llvm-e814e0.o
    0x08001e70   0x08001e70   0x00000010   Code   RO         1013    .text.LL_RTC_EnableInitMode  lto-llvm-e814e0.o
    0x08001e80   0x08001e80   0x0000000e   Code   RO         1007    .text.LL_RTC_EnableWriteProtection  lto-llvm-e814e0.o
    0x08001e8e   0x08001e8e   0x00000080   Code   RO         1003    .text.LL_RTC_EnterInitMode  lto-llvm-e814e0.o
    0x08001f0e   0x08001f0e   0x00000002   PAD
    0x08001f10   0x08001f10   0x0000005c   Code   RO         1015    .text.LL_RTC_Init   lto-llvm-e814e0.o
    0x08001f6c   0x08001f6c   0x00000012   Code   RO         1011    .text.LL_RTC_IsActiveFlag_INIT  lto-llvm-e814e0.o
    0x08001f7e   0x08001f7e   0x0000001e   Code   RO         1021    .text.LL_RTC_SetAsynchPrescaler  lto-llvm-e814e0.o
    0x08001f9c   0x08001f9c   0x0000001a   Code   RO         1017    .text.LL_RTC_SetHourFormat  lto-llvm-e814e0.o
    0x08001fb6   0x08001fb6   0x00000002   PAD
    0x08001fb8   0x08001fb8   0x00000020   Code   RO         1019    .text.LL_RTC_SetSynchPrescaler  lto-llvm-e814e0.o
    0x08001fd8   0x08001fd8   0x00000010   Code   RO         1009    .text.LL_SYSTICK_IsActiveCounterFlag  lto-llvm-e814e0.o
    0x08001fe8   0x08001fe8   0x00000018   Code   RO          943    .text.LL_SetSystemCoreClock  lto-llvm-e814e0.o
    0x08002000   0x08002000   0x00000010   Code   RO          931    .text.LL_USART_ClearFlag_ORE  lto-llvm-e814e0.o
    0x08002010   0x08002010   0x00000020   Code   RO          781    .text.LL_USART_ConfigAsyncMode  lto-llvm-e814e0.o
    0x08002030   0x08002030   0x00000014   Code   RO          785    .text.LL_USART_Enable  lto-llvm-e814e0.o
    0x08002044   0x08002044   0x00000038   Code   RO          783    .text.LL_USART_EnableIT_RXNE_RXFNE  lto-llvm-e814e0.o
    0x0800207c   0x0800207c   0x000000c4   Code   RO         1023    .text.LL_USART_Init  lto-llvm-e814e0.o
    0x08002140   0x08002140   0x00000018   Code   RO          789    .text.LL_USART_IsActiveFlag_REACK  lto-llvm-e814e0.o
    0x08002158   0x08002158   0x00000014   Code   RO          927    .text.LL_USART_IsActiveFlag_RXNE_RXFNE  lto-llvm-e814e0.o
    0x0800216c   0x0800216c   0x00000018   Code   RO          787    .text.LL_USART_IsActiveFlag_TEACK  lto-llvm-e814e0.o
    0x08002184   0x08002184   0x00000014   Code   RO          921    .text.LL_USART_IsActiveFlag_TXE_TXFNF  lto-llvm-e814e0.o
    0x08002198   0x08002198   0x00000010   Code   RO         1025    .text.LL_USART_IsEnabled  lto-llvm-e814e0.o
    0x080021a8   0x080021a8   0x00000010   Code   RO          929    .text.LL_USART_ReceiveData8  lto-llvm-e814e0.o
    0x080021b8   0x080021b8   0x000000a0   Code   RO         1031    .text.LL_USART_SetBaudRate  lto-llvm-e814e0.o
    0x08002258   0x08002258   0x0000001c   Code   RO         1029    .text.LL_USART_SetHWFlowCtrl  lto-llvm-e814e0.o
    0x08002274   0x08002274   0x0000001c   Code   RO         1033    .text.LL_USART_SetPrescaler  lto-llvm-e814e0.o
    0x08002290   0x08002290   0x0000001c   Code   RO         1027    .text.LL_USART_SetStopBitsLength  lto-llvm-e814e0.o
    0x080022ac   0x080022ac   0x00000020   Code   RO          779    .text.LL_USART_SetTXRXSwap  lto-llvm-e814e0.o
    0x080022cc   0x080022cc   0x00000018   Code   RO          919    .text.LL_USART_TransmitData8  lto-llvm-e814e0.o
    0x080022e4   0x080022e4   0x0000004c   Code   RO          941    .text.LL_mDelay     lto-llvm-e814e0.o
    0x08002330   0x08002330   0x00000108   Code   RO          767    .text.MX_ADC1_Init  lto-llvm-e814e0.o
    0x08002438   0x08002438   0x00000068   Code   RO          765    .text.MX_GPIO_Init  lto-llvm-e814e0.o
    0x080024a0   0x080024a0   0x0000004a   Code   RO          769    .text.MX_RTC_Init   lto-llvm-e814e0.o
    0x080024ea   0x080024ea   0x000000b6   Code   RO          771    .text.MX_USART2_UART_Init  lto-llvm-e814e0.o
    0x080025a0   0x080025a0   0x00000042   Code   RO          481    .text.MessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x080025e2   0x080025e2   0x0000005e   Code   RO          475    .text.MessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x08002640   0x08002640   0x0000001e   Code   RO          473    .text.MessageQueueRemove  RTX_CM0.lib(rtx_msgqueue.o)
    0x0800265e   0x0800265e   0x00000004   Code   RO          849    .text.NMI_Handler   lto-llvm-e814e0.o
    0x08002662   0x08002662   0x00000002   PAD
    0x08002664   0x08002664   0x00000008   Code   RO          517    .text.OS_Tick_AcknowledgeIRQ  RTX_CM0.lib(os_systick.o)
    0x0800266c   0x0800266c   0x00000028   Code   RO          513    .text.OS_Tick_Enable  RTX_CM0.lib(os_systick.o)
    0x08002694   0x08002694   0x00000006   Code   RO          519    .text.OS_Tick_GetIRQn  RTX_CM0.lib(os_systick.o)
    0x0800269a   0x0800269a   0x00000002   PAD
    0x0800269c   0x0800269c   0x0000004c   Code   RO          511    .text.OS_Tick_Setup  RTX_CM0.lib(os_systick.o)
    0x080026e8   0x080026e8   0x000000b0   Code   RO          747    .text.PackAllData   lto-llvm-e814e0.o
    0x08002798   0x08002798   0x0000004e   Code   RO          749    .text.PackQueue     lto-llvm-e814e0.o
    0x080027e6   0x080027e6   0x00000002   PAD
    0x080027e8   0x080027e8   0x00000028   Code   RO          975    .text.RCC_GetHCLKClockFreq  lto-llvm-e814e0.o
    0x08002810   0x08002810   0x00000024   Code   RO          977    .text.RCC_GetPCLK1ClockFreq  lto-llvm-e814e0.o
    0x08002834   0x08002834   0x00000054   Code   RO          973    .text.RCC_GetSystemClockFreq  lto-llvm-e814e0.o
    0x08002888   0x08002888   0x00000060   Code   RO          985    .text.RCC_PLL_GetFreqDomain_SYS  lto-llvm-e814e0.o
    0x080028e8   0x080028e8   0x000000ac   Code   RO          905    .text.SEGGER_RTT_SetTerminal  lto-llvm-e814e0.o
    0x08002994   0x08002994   0x00000048   Code   RO          903    .text.SEGGER_RTT_Write  lto-llvm-e814e0.o
    0x080029dc   0x080029dc   0x000000a4   Code   RO          901    .text.SEGGER_RTT_WriteNoLock  lto-llvm-e814e0.o
    0x08002a80   0x08002a80   0x0000002c   Code   RO          915    .text.SEGGER_RTT_printf  lto-llvm-e814e0.o
    0x08002aac   0x08002aac   0x000003e8   Code   RO          907    .text.SEGGER_RTT_vprintf  lto-llvm-e814e0.o
    0x08002e94   0x08002e94   0x0000004e   Code   RO          763    .text.SystemClock_Config  lto-llvm-e814e0.o
    0x08002ee2   0x08002ee2   0x00000002   Code   RO         1035    .text.SystemInit    lto-llvm-e814e0.o
    0x08002ee4   0x08002ee4   0x0000003c   Code   RO          879    .text.TMP1075_Init  lto-llvm-e814e0.o
    0x08002f20   0x08002f20   0x0000005c   Code   RO          855    .text.TMP1075_ReadTemp  lto-llvm-e814e0.o
    0x08002f7c   0x08002f7c   0x0000005c   Code   RO          857    .text.TMP1075_Read_2Byte  lto-llvm-e814e0.o
    0x08002fd8   0x08002fd8   0x0000004a   Code   RO          176    .text.ThreadFlagsCheck  RTX_CM0.lib(rtx_thread.o)
    0x08003022   0x08003022   0x00000002   PAD
    0x08003024   0x08003024   0x00000048   Code   RO          266    .text.TimerInsert   RTX_CM0.lib(rtx_timer.o)
    0x0800306c   0x0800306c   0x00000028   Code   RO          274    .text.TimerRemove   RTX_CM0.lib(rtx_timer.o)
    0x08003094   0x08003094   0x00000034   Code   RO          923    .text.UART2_Transmit8  lto-llvm-e814e0.o
    0x080030c8   0x080030c8   0x0000004a   Code   RO          917    .text.UART2_Transmit8_mutex  lto-llvm-e814e0.o
    0x08003112   0x08003112   0x00000002   PAD
    0x08003114   0x08003114   0x00000188   Code   RO          925    .text.USART2_IRQHandler  lto-llvm-e814e0.o
    0x0800329c   0x0800329c   0x00000094   Code   RO          893    .text._DoInit       lto-llvm-e814e0.o
    0x08003330   0x08003330   0x0000003e   Code   RO          895    .text._GetAvailWriteSpace  lto-llvm-e814e0.o
    0x0800336e   0x0800336e   0x000001c6   Code   RO          911    .text._PrintInt     lto-llvm-e814e0.o
    0x08003534   0x08003534   0x000001b0   Code   RO          913    .text._PrintUnsigned  lto-llvm-e814e0.o
    0x080036e4   0x080036e4   0x00000074   Code   RO          909    .text._StoreChar    lto-llvm-e814e0.o
    0x08003758   0x08003758   0x000000d4   Code   RO          899    .text._WriteBlocking  lto-llvm-e814e0.o
    0x0800382c   0x0800382c   0x00000084   Code   RO          897    .text._WriteNoCheck  lto-llvm-e814e0.o
    0x080038b0   0x080038b0   0x0000002c   Code   RO          777    .text.__NVIC_EnableIRQ  lto-llvm-e814e0.o
    0x080038dc   0x080038dc   0x00000088   Code   RO          775    .text.__NVIC_SetPriority  lto-llvm-e814e0.o
    0x08003964   0x08003964   0x00000022   Code   RO         1039    .text._mutex_acquire  lto-llvm-e814e0.o
    0x08003986   0x08003986   0x00000012   Code   RO         1043    .text._mutex_free   lto-llvm-e814e0.o
    0x08003998   0x08003998   0x00000034   Code   RO         1037    .text._mutex_initialize  lto-llvm-e814e0.o
    0x080039cc   0x080039cc   0x0000001e   Code   RO         1041    .text._mutex_release  lto-llvm-e814e0.o
    0x080039ea   0x080039ea   0x00000008   Code   RO         1047    .text._platform_post_stackheap_init  lto-llvm-e814e0.o
    0x080039f2   0x080039f2   0x00000002   PAD
    0x080039f4   0x080039f4   0x00000088   Code   RO          755    .text.app_main      lto-llvm-e814e0.o
    0x08003a7c   0x08003a7c   0x0000006c   Code   RO          751    .text.crc16         lto-llvm-e814e0.o
    0x08003ae8   0x08003ae8   0x00000078   Code   RO          935    .text.enqueue       lto-llvm-e814e0.o
    0x08003b60   0x08003b60   0x000000c8   Code   RO          753    .text.i2c_timer_cb  lto-llvm-e814e0.o
    0x08003c28   0x08003c28   0x00000060   Code   RO          757    .text.main          lto-llvm-e814e0.o
    0x08003c88   0x08003c88   0x00000028   Code   RO          232    .text.osDelay       RTX_CM0.lib(rtx_delay.o)
    0x08003cb0   0x08003cb0   0x00000024   Code   RO          296    .text.osEventFlagsClear  RTX_CM0.lib(rtx_evflags.o)
    0x08003cd4   0x08003cd4   0x00000024   Code   RO          290    .text.osEventFlagsNew  RTX_CM0.lib(rtx_evflags.o)
    0x08003cf8   0x08003cf8   0x0000004c   Code   RO          294    .text.osEventFlagsSet  RTX_CM0.lib(rtx_evflags.o)
    0x08003d44   0x08003d44   0x00000044   Code   RO          304    .text.osEventFlagsWait  RTX_CM0.lib(rtx_evflags.o)
    0x08003d88   0x08003d88   0x0000002c   Code   RO           40    .text.osKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x08003db4   0x08003db4   0x00000028   Code   RO           56    .text.osKernelGetTickCount  RTX_CM0.lib(rtx_kernel.o)
    0x08003ddc   0x08003ddc   0x00000028   Code   RO           34    .text.osKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x08003e04   0x08003e04   0x00000024   Code   RO           46    .text.osKernelLock  RTX_CM0.lib(rtx_kernel.o)
    0x08003e28   0x08003e28   0x00000024   Code   RO           44    .text.osKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x08003e4c   0x08003e4c   0x00000024   Code   RO           48    .text.osKernelUnlock  RTX_CM0.lib(rtx_kernel.o)
    0x08003e70   0x08003e70   0x00000074   Code   RO          449    .text.osMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x08003ee4   0x08003ee4   0x00000074   Code   RO          447    .text.osMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x08003f58   0x08003f58   0x00000028   Code   RO          338    .text.osMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x08003f80   0x08003f80   0x00000028   Code   RO          344    .text.osMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x08003fa8   0x08003fa8   0x00000024   Code   RO          334    .text.osMutexNew    RTX_CM0.lib(rtx_mutex.o)
    0x08003fcc   0x08003fcc   0x00000028   Code   RO          340    .text.osMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x08003ff4   0x08003ff4   0x0000002e   Code   RO         1053    .text.osRtxErrorNotify  lto-llvm-e814e0.o
    0x08004022   0x08004022   0x00000034   Code   RO          310    .text.osRtxEventFlagsPostProcess  RTX_CM0.lib(rtx_evflags.o)
    0x08004056   0x08004056   0x00000008   Code   RO         1051    .text.osRtxIdleThread  lto-llvm-e814e0.o
    0x0800405e   0x0800405e   0x00000008   Code   RO           32    .text.osRtxKernelErrorNotify  RTX_CM0.lib(rtx_kernel.o)
    0x08004066   0x08004066   0x00000002   Code   RO           30    .text.osRtxKernelPreInit  RTX_CM0.lib(rtx_kernel.o)
    0x08004068   0x08004068   0x00000078   Code   RO          375    .text.osRtxMemoryAlloc  RTX_CM0.lib(rtx_memory.o)
    0x080040e0   0x080040e0   0x0000004e   Code   RO          377    .text.osRtxMemoryFree  RTX_CM0.lib(rtx_memory.o)
    0x0800412e   0x0800412e   0x0000002e   Code   RO          373    .text.osRtxMemoryInit  RTX_CM0.lib(rtx_memory.o)
    0x0800415c   0x0800415c   0x0000002a   Code   RO          389    .text.osRtxMemoryPoolAlloc  RTX_CM0.lib(rtx_mempool.o)
    0x08004186   0x08004186   0x00000036   Code   RO          391    .text.osRtxMemoryPoolFree  RTX_CM0.lib(rtx_mempool.o)
    0x080041bc   0x080041bc   0x0000003c   Code   RO          387    .text.osRtxMemoryPoolInit  RTX_CM0.lib(rtx_mempool.o)
    0x080041f8   0x080041f8   0x000000bc   Code   RO          471    .text.osRtxMessageQueuePostProcess  RTX_CM0.lib(rtx_msgqueue.o)
    0x080042b4   0x080042b4   0x00000024   Code   RO          439    .text.osRtxMessageQueueTimerSetup  RTX_CM0.lib(rtx_msgqueue.o)
    0x080042d8   0x080042d8   0x00000044   Code   RO          330    .text.osRtxMutexOwnerRelease  RTX_CM0.lib(rtx_mutex.o)
    0x0800431c   0x0800431c   0x00000046   Code   RO          332    .text.osRtxMutexOwnerRestore  RTX_CM0.lib(rtx_mutex.o)
    0x08004362   0x08004362   0x00000002   PAD
    0x08004364   0x08004364   0x00000080   Code   RO          499    .text.osRtxPendSV_Handler  RTX_CM0.lib(rtx_system.o)
    0x080043e4   0x080043e4   0x0000006c   Code   RO          501    .text.osRtxPostProcess  RTX_CM0.lib(rtx_system.o)
    0x08004450   0x08004450   0x00000034   Code   RO          116    .text.osRtxThreadBlock  RTX_CM0.lib(rtx_thread.o)
    0x08004484   0x08004484   0x0000008c   Code   RO          124    .text.osRtxThreadDelayInsert  RTX_CM0.lib(rtx_thread.o)
    0x08004510   0x08004510   0x00000044   Code   RO          120    .text.osRtxThreadDelayRemove  RTX_CM0.lib(rtx_thread.o)
    0x08004554   0x08004554   0x00000054   Code   RO          108    .text.osRtxThreadDelayTick  RTX_CM0.lib(rtx_thread.o)
    0x080045a8   0x080045a8   0x00000028   Code   RO          208    .text.osRtxThreadDestroy  RTX_CM0.lib(rtx_thread.o)
    0x080045d0   0x080045d0   0x0000004c   Code   RO          114    .text.osRtxThreadDispatch  RTX_CM0.lib(rtx_thread.o)
    0x0800461c   0x0800461c   0x00000054   Code   RO          200    .text.osRtxThreadFree  RTX_CM0.lib(rtx_thread.o)
    0x08004670   0x08004670   0x00000020   Code   RO          206    .text.osRtxThreadJoinWakeup  RTX_CM0.lib(rtx_thread.o)
    0x08004690   0x08004690   0x00000014   Code   RO          100    .text.osRtxThreadListGet  RTX_CM0.lib(rtx_thread.o)
    0x080046a4   0x080046a4   0x0000002c   Code   RO           98    .text.osRtxThreadListPut  RTX_CM0.lib(rtx_thread.o)
    0x080046d0   0x080046d0   0x00000018   Code   RO          104    .text.osRtxThreadListRemove  RTX_CM0.lib(rtx_thread.o)
    0x080046e8   0x080046e8   0x00000024   Code   RO          102    .text.osRtxThreadListSort  RTX_CM0.lib(rtx_thread.o)
    0x0800470c   0x0800470c   0x00000026   Code   RO          174    .text.osRtxThreadPostProcess  RTX_CM0.lib(rtx_thread.o)
    0x08004732   0x08004732   0x00000002   PAD
    0x08004734   0x08004734   0x00000014   Code   RO          106    .text.osRtxThreadReadyPut  RTX_CM0.lib(rtx_thread.o)
    0x08004748   0x08004748   0x00000006   Code   RO          110    .text.osRtxThreadRegPtr  RTX_CM0.lib(rtx_thread.o)
    0x0800474e   0x0800474e   0x00000002   PAD
    0x08004750   0x08004750   0x00000040   Code   RO          126    .text.osRtxThreadStartup  RTX_CM0.lib(rtx_thread.o)
    0x08004790   0x08004790   0x00000010   Code   RO          112    .text.osRtxThreadSwitch  RTX_CM0.lib(rtx_thread.o)
    0x080047a0   0x080047a0   0x00000040   Code   RO          122    .text.osRtxThreadWaitEnter  RTX_CM0.lib(rtx_thread.o)
    0x080047e0   0x080047e0   0x00000022   Code   RO          118    .text.osRtxThreadWaitExit  RTX_CM0.lib(rtx_thread.o)
    0x08004802   0x08004802   0x00000002   PAD
    0x08004804   0x08004804   0x00000080   Code   RO          497    .text.osRtxTick_Handler  RTX_CM0.lib(rtx_system.o)
    0x08004884   0x08004884   0x00000024   Code   RO          248    .text.osRtxTimerSetup  RTX_CM0.lib(rtx_timer.o)
    0x080048a8   0x080048a8   0x0000001c   Code   RO          252    .text.osRtxTimerThread  RTX_CM0.lib(rtx_timer.o)
    0x080048c4   0x080048c4   0x00000074   Code   RO          250    .text.osRtxTimerTick  RTX_CM0.lib(rtx_timer.o)
    0x08004938   0x08004938   0x0000000c   Code   RO          158    .text.osThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x08004944   0x08004944   0x00000024   Code   RO          130    .text.osThreadNew   RTX_CM0.lib(rtx_thread.o)
    0x08004968   0x08004968   0x00000024   Code   RO          254    .text.osTimerNew    RTX_CM0.lib(rtx_timer.o)
    0x0800498c   0x0800498c   0x00000028   Code   RO          258    .text.osTimerStart  RTX_CM0.lib(rtx_timer.o)
    0x080049b4   0x080049b4   0x0000002c   Code   RO         1045    .text.os_kernel_is_active  lto-llvm-e814e0.o
    0x080049e0   0x080049e0   0x00000018   Code   RO          236    .text.svcRtxDelay   RTX_CM0.lib(rtx_delay.o)
    0x080049f8   0x080049f8   0x0000002e   Code   RO          298    .text.svcRtxEventFlagsClear  RTX_CM0.lib(rtx_evflags.o)
    0x08004a26   0x08004a26   0x00000002   PAD
    0x08004a28   0x08004a28   0x00000074   Code   RO          308    .text.svcRtxEventFlagsNew  RTX_CM0.lib(rtx_evflags.o)
    0x08004a9c   0x08004a9c   0x00000076   Code   RO          316    .text.svcRtxEventFlagsSet  RTX_CM0.lib(rtx_evflags.o)
    0x08004b12   0x08004b12   0x00000002   PAD
    0x08004b14   0x08004b14   0x0000005c   Code   RO          318    .text.svcRtxEventFlagsWait  RTX_CM0.lib(rtx_evflags.o)
    0x08004b70   0x08004b70   0x00000008   Code   RO           42    .text.svcRtxKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x08004b78   0x08004b78   0x0000000c   Code   RO           58    .text.svcRtxKernelGetTickCount  RTX_CM0.lib(rtx_kernel.o)
    0x08004b84   0x08004b84   0x0000013c   Code   RO           72    .text.svcRtxKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x08004cc0   0x08004cc0   0x00000020   Code   RO           76    .text.svcRtxKernelLock  RTX_CM0.lib(rtx_kernel.o)
    0x08004ce0   0x08004ce0   0x00000080   Code   RO           74    .text.svcRtxKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x08004d60   0x08004d60   0x00000024   Code   RO           78    .text.svcRtxKernelUnlock  RTX_CM0.lib(rtx_kernel.o)
    0x08004d84   0x08004d84   0x000000cc   Code   RO          483    .text.svcRtxMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x08004e50   0x08004e50   0x000001c4   Code   RO          441    .text.svcRtxMessageQueueNew  RTX_CM0.lib(rtx_msgqueue.o)
    0x08005014   0x08005014   0x000000b0   Code   RO          479    .text.svcRtxMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x080050c4   0x080050c4   0x00000098   Code   RO          350    .text.svcRtxMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x0800515c   0x0800515c   0x000000b4   Code   RO          356    .text.svcRtxMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x08005210   0x08005210   0x00000070   Code   RO          346    .text.svcRtxMutexNew  RTX_CM0.lib(rtx_mutex.o)
    0x08005280   0x08005280   0x000000bc   Code   RO          352    .text.svcRtxMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x0800533c   0x0800533c   0x0000004c   Code   RO          204    .text.svcRtxThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x08005388   0x08005388   0x000001fc   Code   RO          128    .text.svcRtxThreadNew  RTX_CM0.lib(rtx_thread.o)
    0x08005584   0x08005584   0x00000084   Code   RO          268    .text.svcRtxTimerNew  RTX_CM0.lib(rtx_timer.o)
    0x08005608   0x08005608   0x0000004c   Code   RO          272    .text.svcRtxTimerStart  RTX_CM0.lib(rtx_timer.o)
    0x08005654   0x08005654   0x000000cc   Code   RO          745    .text.uart_transmit_thread  lto-llvm-e814e0.o
    0x08005720   0x08005720   0x00000016   Code   RO         1092    i._feq              fz_ps.l(fcmp.o)
    0x08005736   0x08005736   0x00000016   Code   RO         1093    i._fgeq             fz_ps.l(fcmp.o)
    0x0800574c   0x0800574c   0x0000001a   Code   RO         1095    i._fleq             fz_ps.l(fcmp.o)
    0x08005766   0x08005766   0x00000002   PAD
    0x08005768   0x08005768   0x0000008c   Code   RO         1086    x$fpl$fadd          fz_ps.l(faddsub.o)
    0x080057f4   0x080057f4   0x00000054   Code   RO         1113    x$fpl$feqf          fz_ps.l(feqf.o)
    0x08005848   0x08005848   0x00000054   Code   RO         1115    x$fpl$fgeqf         fz_ps.l(fgef.o)
    0x0800589c   0x0800589c   0x00000054   Code   RO         1117    x$fpl$fleqf         fz_ps.l(flef.o)
    0x080058f0   0x080058f0   0x000000b0   Code   RO         1111    x$fpl$fmul          fz_ps.l(fmul.o)
    0x080059a0   0x080059a0   0x000000d0   Code   RO         1088    x$fpl$fsub          fz_ps.l(faddsub.o)
    0x08005a70   0x08005a70   0x00000000   Code   RO         1119    x$fpl$usenofp       fz_ps.l(usenofp.o)
    0x08005a70   0x08005a70   0x00000080   Data   RO         1080    .constdata          fz_ps.l(ddiv.o)
    0x08005af0   0x08005af0   0x00000040   Data   RO         1105    .constdata          fz_ps.l(fdiv.o)
    0x08005b30   0x08005b30   0x00000350   Data   RO         1057    .rodata             lto-llvm-e814e0.o
    0x08005e80   0x08005e80   0x00000070   Data   RO         1063    .rodata             lto-llvm-e814e0.o
    0x08005ef0   0x08005ef0   0x00000038   Data   RO         1064    .rodata             lto-llvm-e814e0.o
    0x08005f28   0x08005f28   0x00000010   Data   RO         1060    .rodata.cst16       lto-llvm-e814e0.o
    0x08005f38   0x08005f38   0x00000020   Data   RO         1061    .rodata.cst32       lto-llvm-e814e0.o
    0x08005f58   0x08005f58   0x0000010d   Data   RO         1058    .rodata.str1.1      lto-llvm-e814e0.o
    0x08006065   0x08006065   0x00000003   PAD
    0x08006068   0x08006068   0x0000000b   Data   RO           88    .rodata.str1.4      RTX_CM0.lib(rtx_kernel.o)
    0x08006073   0x08006073   0x00000001   PAD
    0x08006074   0x08006074   0x00000020   Data   RO         1129    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08006098, Size: 0x00001e78, Max: 0x00002000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08006098   0x0000005c   Data   RW         1056    .data               lto-llvm-e814e0.o
    0x2000005c   0x080060f4   0x000000a4   Data   RW           89    .data.os            RTX_CM0.lib(rtx_kernel.o)
    0x20000100        -       0x00000060   Zero   RW          593    .bss                c_p.l(libspace.o)
    0x20000160        -       0x00000735   Zero   RW         1055    .bss                lto-llvm-e814e0.o
    0x20000895        -       0x00000001   Zero   RW          529    .bss.os             RTX_CM0.lib(os_systick.o)
    0x20000896   0x08006198   0x00000002   PAD
    0x20000898        -       0x00000c10   Zero   RW         1062    .bss.os             lto-llvm-e814e0.o
    0x200014a8        -       0x00000034   Zero   RW         1069    .bss.os.msgqueue.cb  lto-llvm-e814e0.o
    0x200014dc        -       0x00000014   Zero   RW         1070    .bss.os.msgqueue.mem  lto-llvm-e814e0.o
    0x200014f0        -       0x00000088   Zero   RW         1066    .bss.os.thread.cb   lto-llvm-e814e0.o
    0x20001578        -       0x00000100   Zero   RW         1067    .bss.os.thread.idle.stack  lto-llvm-e814e0.o
    0x20001678        -       0x00000200   Zero   RW         1068    .bss.os.thread.timer.stack  lto-llvm-e814e0.o
    0x20001878        -       0x00000200   Zero   RW            2    HEAP                startup_stm32g030xx.o
    0x20001a78        -       0x00000400   Zero   RW            1    STACK               startup_stm32g030xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

     11202        740       1333         92       5909      53637   lto-llvm-e814e0.o
        56         26        192          0       1536        616   startup_stm32g030xx.o

    ----------------------------------------------------------------------
     11282        766       1560         92       7445      54253   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        24          0          3          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       164          8          0          0          0        658   irq_armv6m.o
       130         24          0          0          1       2812   os_systick.o
        64          4          0          0          0       2729   rtx_delay.o
       714         24          0          0          0      12579   rtx_evflags.o
       774         56         11        164          0      15793   rtx_kernel.o
       244          0          0          0          0       2665   rtx_memory.o
       156          0          0          0          0      14433   rtx_mempool.o
      1478         44          0          0          0      18183   rtx_msgqueue.o
       926         32          0          0          0       9527   rtx_mutex.o
       364         18          0          0          0       4871   rtx_system.o
      1648         56          0          0          0      31596   rtx_thread.o
       576         32          0          0          0       9965   rtx_timer.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
         8          0          0          0          0         60   abs.o
       364          4          0          0          0         92   aeabi_sdiv.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        64          0          0          0          0        108   rt_memclr.o
       186          0          0          0          0        144   rt_memcpy.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        46          0          0          0          0         60   cmpret.o
       124          4          0          0          0         72   d2f.o
      1096         26        128          0          0        112   ddiv.o
       584         26          0          0          0         84   dmul.o
        84          4          0          0          0         60   f2d.o
       348          8          0          0          0        160   faddsub.o
        70          0          0          0          0        204   fcmp.o
       100          4          0          0          0         68   fcmpin.o
       352         10         64          0          0         92   fdiv.o
        84          4          0          0          0         76   feqf.o
        76          0          0          0          0         68   ffixi.o
        94          0          0          0          0         92   fflti.o
        84          4          0          0          0         76   fgef.o
        84          4          0          0          0         76   flef.o
       176          4          0          0          0         80   fmul.o
        16          6          0          0          0         68   fnan2.o
        94          0          0          0          0         68   retnan.o
         0          0          0          0          0          0   usenofp.o

    ----------------------------------------------------------------------
     11678        422        204        164         99     128279   Library Totals
        32          0          1          0          2          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      7238        298         11        164          1     125811   RTX_CM0.lib
       896         20          0          0         96        952   c_p.l
      3512        104        192          0          0       1516   fz_ps.l

    ----------------------------------------------------------------------
     11678        422        204        164         99     128279   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     22960       1188       1764        256       7544     181056   Grand Totals
     22960       1188       1764        256       7544     181056   ELF Image Totals
     22960       1188       1764        256          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                24724 (  24.14kB)
    Total RW  Size (RW Data + ZI Data)              7800 (   7.62kB)
    Total ROM Size (Code + RO Data + RW Data)      24980 (  24.39kB)

==============================================================================

